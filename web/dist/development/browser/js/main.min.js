/**
 * @license rxcomp-server v1.0.0-beta.19
 * (c) 2020 Luca Zampetti <lzampetti@gmail.com>
 * License: MIT
 */
!function(t,e,o,n,i){"use strict";function s(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}var r=function(e){function o(){return e.apply(this,arguments)||this}return s(o,e),o.prototype.onInit=function(){t.getContext(this).node.classList.add("init")},o}(t.Component);r.meta={selector:"[app-component]"};var c=function(){function t(){}return t.prototype.intercept=function(t,e){return e.handle(t)},t}(),p=function(){function t(){}return t.prototype.intercept=function(t,o){return o.handle(t).pipe(i.tap((function(o){o instanceof e.HttpResponse&&(console.log("CustomResponseInterceptor.status",o.status),console.log("CustomResponseInterceptor.filter",t.params.get("filter")))})))},t}(),a=function(t){function e(){return t.apply(this,arguments)||this}return s(e,t),e.prototype.onInit=function(){},e}(t.Component);a.meta={selector:"[not-found-component]",template:'\n        <div class="page-not-found">\n            <div class="title">Not Found</div>\n        </div>\n        '};var l=function(t){function e(){return t.apply(this,arguments)||this}s(e,t);var r=e.prototype;return r.onInit=function(){var t=this;n.combineLatest([this.route.data$,this.route.params$]).pipe(i.takeUntil(this.unsubscribe$)).subscribe((function(e){t.title=e[0].title,t.itemId=e[1].itemId}))},r.onEnter=function(t){return o.transition$((function(e){gsap.set(t,{opacity:0}),gsap.to(t,{opacity:1,duration:.6,ease:Power3.easeOut,onComplete:function(){e(!0)}})}))},r.onExit=function(t){return o.transition$((function(e){gsap.set(t,{opacity:1}),gsap.to(t,{opacity:0,duration:.6,ease:Power3.easeOut,onComplete:function(){e(!0)}})}))},e}(o.View);l.meta={selector:"[detail-component]",template:'\n        <div class="page-detail">\n            <div class="title">Todolist Item {{itemId}}</div>\n        </div>\n        '};var u="",d=function(o){function n(){var t;return(t=o.apply(this,arguments)||this).items=[],t.error=null,t}s(n,o);var r=n.prototype;return r.onInit=function(){var o=this;e.HttpService.get$(u+"/assets/data/todos.json").pipe(i.first()).subscribe((function(t){o.items=t.data.getTodos,o.pushChanges()}),console.warn);var n=this.host.route;n&&n.data$.pipe(i.takeUntil(this.unsubscribe$)).subscribe((function(t){o.title=t.title})),t.errors$.pipe(i.takeUntil(this.unsubscribe$)).subscribe((function(t){o.error=t,o.pushChanges()}))},r.onClick=function(t){t.completed=!t.completed,this.pushChanges()},n}(t.Component);d.meta={selector:"[todolist-component]",hosts:{host:o.RouterOutletStructure},template:'\n        <div class="page-todolist">\n\t\t\t<div class="title">{{title}}</div>\n\t\t\t\x3c!-- {{items | json}} --\x3e\n\t\t\t<ul class="list">\n\t\t\t\t<li class="list__item" *for="let item of items" [class]="{ completed: item.completed }" [style]="{ \'border-color\': item.completed ? \'red\' : \'black\' }">\n\t\t\t\t\t<div class="title" [routerLink]="[\'/todolist\', item.id]" [innerHTML]="item.title"></div>\n\t\t\t\t\t<div class="completed" (click)="onClick(item)" [innerHTML]="item.completed"></div>\n\t\t\t\t\t\x3c!-- !!! debug --\x3e\n\t\t\t\t\t\x3c!-- <div class="completed" (click)="onClick(item)">{{item.completed}}</div> --\x3e\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div *if="error">\n\t\t\t\t<span>error => {{error | json}}</span>\n\t\t\t</div>\n        </div>\n        '};var m=function(t){function e(){return t.apply(this,arguments)||this}return s(e,t),e}(t.Module);m.meta={imports:[t.CoreModule,e.HttpModule.useInterceptors([c,p]),o.RouterModule.forRoot([{path:"",redirectTo:"/todolist",pathMatch:"full"},{path:"todolist",component:d,data:{title:"Todolist"}},{path:"todolist/:itemId",component:l,data:{title:"Todolist Item"}},{path:"**",component:a}])],declarations:[d,l,a],bootstrap:r},t.Browser.bootstrap(m)}(rxcomp,rxcomp.http,rxcomp.router,rxjs,rxjs.operators);
//# sourceMappingURL=main.min.js.map