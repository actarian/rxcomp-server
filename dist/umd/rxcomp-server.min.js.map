{"version":3,"sources":["src/rxcomp-server.ts","../../src/cache/cache.service.ts","../../src/nodes/nodes.ts","../../test/js/vars.ts","../../src/platform/server.ts","../../src/server.module.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","rxcomp","server","htmlparser2","rxjs","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","value","_assertThisInitialized","ReferenceError","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","slice","name","from","test","_unsupportedIterableToArray","done","next","CacheControlType","RxNodeType","SelectorType","CacheItem","options","maxAge","cacheControl","Public","assign","date","NoStore","getTime","now","CacheService","delete","type","cache_","cacheItem","expired","JSON","parse","stringify","isRxElement","x","nodeType","ELEMENT_NODE","isRxText","TEXT_NODE","isRxComment","COMMENT_NODE","isRxDocument","DOCUMENT_NODE","isRxDocumentType","DOCUMENT_TYPE_NODE","html","node","doc","RxDocument","parentNode","parser","Parser","onopentag","nodeName","attributes","RxElement","childNodes","onclosetag","ontext","nodeValue","textNode","RxText","onprocessinginstruction","RxDocumentType","RxProcessingInstruction","oncomment","RxComment","oncommentend","oncdatastart","console","log","oncdataend","onerror","error","decodeEntities","lowerCaseTags","write","end","getQueries","selector","queries","trim","split","forEach","_step","selectors","_iterator","matchAll","match","Id","negate","Attribute","TagName","inner","matchSelector","child","id","classList","keys","matchSelectors","reduce","querySelector","query","shift","_step3","_iterator3","cloneNode","source","deep","nodeElement","map","DOCUMENT_FRAGMENT_NODE","nodeDocumentFragment","RxDocumentFragment","Error","documentElement","RxNode","_proto","serialize","RxStyle","_proto2","init","item","index","getPropertyPriority","getPropertyValue","setProperty","important","serialize_","removeProperty","_this","style","join","_this$node$attributes","_this2","concat","RxClassList","_Array","_this3","_proto3","contains","add","_this4","_len","names","remove","_this5","_len2","splice","toggle","force","replace","oldClass","newClass","class","_this$node$attributes2","_RxNode","_this6","_proto4","append","_this7","_len3","nodesOrDOMStrings","nodeOrDomString","prepend","_this8","_len4","unshift","replaceChildren","_this9","_len5","nodes","querySelectorAll","filter","hasAttribute","attribute","toLowerCase","getAttribute","setAttribute","removeAttribute","replaceChild","newChild","oldChild","removeChild","insertBefore","newNode","referenceNode","addListener","eventName","handler","removeListener","serializeAttributes","_this10","k","children","count","_step4","_iterator4","innerText","String","_this11","_RxNode2","_this12","RxCData","_RxNode3","_this13","CDATA_SECTION_NODE","_RxNode4","_this14","_RxNode5","_this15","PROCESSING_INSTRUCTION_NODE","_RxNode6","_this16","_RxElement","_this17","_RxElement2","_this18","find","title","firstElementChild","_proto10","createAttribute","createAttributeNS","createCDATASection","createComment","createDocumentFragment","createElement","createElementNS","createEvent","createNodeIterator","createProcessingInstruction","createRange","createTextNode","createTouchList","createTreeWalker","Vars","static","development","production","host","resource","api","fs","ServerResponse","ServerErrorResponse","Server","_Platform","bootstrap","moduleFactory","template","isPlatformServer","ModuleError","meta","document","resolveGlobals","resolveMeta","_node$parentNode","nodeInnerHTML","rxcomp_hydrate_","innerHTML","scriptNode","scriptText","imports","instances","compile","pushChanges","documentOrHtml","global","Platform","bootstrap$","request","Promise","resolve","reject","render$","renderRequest$","Observable","observer","cached","url","complete","template$","pipe","switchMap","subscribe","success","readFile","charset","factories","pipes","ServerModule","_Module","Module","declarations","RxQuery","RxSelector","None","_cloneNode","isRxProcessingInstruction","_querySelector","_step2","_iterator2","results"],"mappings":"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","file":"dist/umd/rxcomp-server.min.js","sourcesContent":[null,"export enum CacheControlType {\n\tPublic = 'public', // The response may be stored by any cache, even if the response is normally non-cacheable.\n\tPrivate = 'private', // The response may be stored only by a browser's cache, even if the response is normally non-cacheable. If you mean to not store the response in any cache, use no-store instead. This directive is not effective in preventing caches from storing your response.\n\tNoCache = 'no-cache', // The response may be stored by any cache, even if the response is normally non-cacheable. However, the stored response MUST always go through validation with the origin server first before using it, therefore, you cannot use no-cache in-conjunction with immutable. If you mean to not store the response in any cache, use no-store instead. This directive is not effective in preventing caches from storing your response.\n\tNoStore = 'no-store', // The response may not be stored in any cache. Although other directives may be set, this alone is the only directive you need in preventing cached responses on modern browsers. max-age=0 is already implied. Setting must-revalidate does not make sense because in order to go through revalidation you need the response to be stored in a cache, which no-store prevents.\n}\n\nexport interface ICacheItem {\n\tvalue: any;\n\tdate?: Date,\n\tmaxAge?: number;\n\tcacheControl?: CacheControlType;\n}\n\nexport class CacheItem {\n\tvalue: any;\n\tdate!: Date;\n\tmaxAge: number = 0;\n\tcacheControl: CacheControlType = CacheControlType.Public;\n\tget expired(): boolean {\n\t\treturn this.cacheControl === CacheControlType.NoStore\n\t\t\t|| this.maxAge === 0\n\t\t\t|| (this.date.getTime() + (this.maxAge * 1000) < Date.now());\n\t}\n\tconstructor(options?: ICacheItem) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n\tset(options?: ICacheItem): CacheItem {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t\tthis.date = new Date();\n\t\treturn this;\n\t}\n}\n\nexport default class CacheService {\n\n\tprivate static cache_: Map<string, CacheItem> = new Map<string, CacheItem>();\n\n\tstatic delete(type: string = 'cache', name: string): void {\n\t\tconst key: string = `${type}_${name}`;\n\t\tif (this.cache_.has(key)) {\n\t\t\tthis.cache_.delete(key);\n\t\t}\n\t}\n\n\tstatic has(type: string = 'cache', name: string): boolean {\n\t\tconst key: string = `${type}_${name}`;\n\t\treturn this.cache_.has(key);\n\t}\n\n\tstatic get(type: string = 'cache', name: string): any {\n\t\tlet value = null;\n\t\tconst key: string = `${type}_${name}`;\n\t\tif (this.cache_.has(key)) {\n\t\t\tconst cacheItem: CacheItem = this.cache_.get(key) as CacheItem;\n\t\t\tif (cacheItem) {\n\t\t\t\tif (cacheItem.expired) {\n\t\t\t\t\tthis.cache_.delete(key);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = JSON.parse(cacheItem.value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n\n\tstatic set(type: string = 'cache', name: string, value: any, maxAge: number = 0): any {\n\t\tconst key: string = `${type}_${name}`;\n\t\tconst cacheItem: CacheItem = new CacheItem().set({ value: JSON.stringify(value, null, 0), maxAge });\n\t\tthis.cache_.set(key, cacheItem);\n\t\treturn value;\n\t}\n\n}\n\n/*\nCache-Control: max-age=0, private, must-revalidate\nDate: Fri, 14 Aug 2020 20:09:02 GMT\nExpect-CT: max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"\nStatus: 200 OK\nStrict-Transport-Security: max-age=31536000; includeSubdomains; preload\nCache-Control: no-cache\nConnection: keep-alive\nPragma: no-cache\n*/\n","import { Parser } from 'htmlparser2';\n\n// export const NO_CHILDS = ['title','base','meta','link','img','br','input',];\n// const SKIP = ['html','head','title','base','meta','script','link','body',];\n// document.createComment = nodeValue => { return new RxComment(null, nodeValue); };\n// document.createTextNode = nodeValue => { return new RxText(null, nodeValue); };\n\nexport enum RxNodeType {\n\tELEMENT_NODE = 1, //\tUn nodo Element come <p> o <div>.\n\tTEXT_NODE = 3, //\tL'attuale Text dentro un Element o Attr.\n\tCDATA_SECTION_NODE = 4, //\tUna CDATASection, ad esempio <!CDATA[[ … ]]>.\n\tPROCESSING_INSTRUCTION_NODE = 7, //\tUna ProcessingInstruction di un documento XML, come <?xml-stylesheet … ?>.\n\tCOMMENT_NODE = 8, //\tUn nodo Comment, come <!-- … -->.\n\tDOCUMENT_NODE = 9, //\tUn nodo Document.\n\tDOCUMENT_TYPE_NODE = 10, //\tUn nodo DocumentType, come <!DOCTYPE html>.\n\tDOCUMENT_FRAGMENT_NODE = 11, //\tUn nodo DocumentFragment.\n}\n\nexport enum SelectorType {\n\tNone = -1,\n\tId = 0,\n\tClass = 1,\n\tAttribute = 2,\n\tTagName = 3,\n}\n\nexport function isRxElement(x: RxNode): x is RxElement {\n\treturn x.nodeType === RxNodeType.ELEMENT_NODE;\n}\n\nexport function isRxText(x: RxNode): x is RxText {\n\treturn x.nodeType === RxNodeType.TEXT_NODE;\n}\n\nexport function isRxComment(x: RxNode): x is RxComment {\n\treturn x.nodeType === RxNodeType.COMMENT_NODE;\n}\n\nexport function isRxDocument(x: RxNode): x is RxDocument {\n\treturn x.nodeType === RxNodeType.DOCUMENT_NODE;\n}\n\nexport function isRxDocumentFragment(x: RxNode): x is RxDocumentFragment {\n\treturn x.nodeType === RxNodeType.DOCUMENT_FRAGMENT_NODE;\n}\n\nexport function isRxDocumentType(x: RxNode): x is RxDocumentType {\n\treturn x.nodeType === RxNodeType.DOCUMENT_TYPE_NODE;\n}\n\nexport function isRxProcessingInstruction(x: RxNode): x is RxProcessingInstruction {\n\treturn x.nodeType === RxNodeType.PROCESSING_INSTRUCTION_NODE;\n}\n\nexport function parse(html: string) {\n\tconst doc = new RxDocument();\n\tlet parentNode: RxElement = doc,\n\t\tnode;\n\tconst parser = new Parser(\n\t\t{\n\t\t\tonopentag: (nodeName, attributes) => {\n\t\t\t\t// console.log(nodeName);\n\t\t\t\tnode = new RxElement(parentNode, nodeName, attributes);\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t\tparentNode = node;\n\t\t\t\t// if (NO_CHILDS.indexOf(nodeName) === -1) {\n\t\t\t\t//\tconsole.log(nodeName);\n\t\t\t\t//\tparentNode = node;\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonclosetag: (nodeName) => {\n\t\t\t\tif (parentNode.parentNode) {\n\t\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t\t}\n\t\t\t},\n\t\t\tontext: (nodeValue) => {\n\t\t\t\t// console.log('ontext', nodeValue);\n\t\t\t\t// if (nodeValue.length) {\n\t\t\t\tconst textNode = new RxText(parentNode, nodeValue);\n\t\t\t\tparentNode.childNodes.push(textNode);\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonprocessinginstruction: (nodeName, nodeValue) => {\n\t\t\t\t// console.log('onprocessinginstruction', nodeName, nodeValue);\n\t\t\t\tif (nodeName === '!doctype') {\n\t\t\t\t\tnode = new RxDocumentType(parentNode, nodeValue);\n\t\t\t\t} else {\n\t\t\t\t\tnode = new RxProcessingInstruction(parentNode, nodeValue);\n\t\t\t\t}\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t},\n\t\t\toncomment: nodeValue => {\n\t\t\t\t// console.log('oncomment', nodeValue);\n\t\t\t\tnode = new RxComment(parentNode, nodeValue);\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t\t// parentNode = node;\n\t\t\t},\n\t\t\toncommentend: () => {\n\t\t\t\t// console.log('oncommentend');\n\t\t\t\t// parentNode = parentNode.parentNode;\n\t\t\t},\n\t\t\toncdatastart: () => {\n\t\t\t\tconsole.log('oncdatastart');\n\t\t\t},\n\t\t\toncdataend: () => {\n\t\t\t\tconsole.log('oncdataend');\n\t\t\t},\n\t\t\tonerror: error => {\n\t\t\t\tconsole.log('error', error);\n\t\t\t},\n\t\t\t/*\n\t\t\tonopentagname: (name) => {\n\t\t\t\tconsole.log('onopentagname', name);\n\t\t\t},\n\t\t\tonattribute: (name, value) => {\n\t\t\t\tconsole.log('onattribute', name, value);\n\t\t\t},\n\t\t\tonreset: () => {\n\t\t\t\tconsole.log('reset');\n\t\t\t},\n\t\t\tonend: () => {\n\t\t\t\tconsole.log('end');\n\t\t\t},\n\t\t\t*/\n\t\t},\n\t\t{\n\t\t\tdecodeEntities: false,\n\t\t\tlowerCaseTags: true,\n\t\t}\n\t);\n\tparser.write(html);\n\tparser.end();\n\treturn doc;\n}\n\nexport function getQueries(selector: string): RxQuery[] {\n\tconst queries: RxQuery[] = [];\n\tselector\n\t\t.trim()\n\t\t.split(' ')\n\t\t.forEach((x: string) => {\n\t\t\tx.trim()\n\t\t\t\t.split('>')\n\t\t\t\t.forEach((x, i) => {\n\t\t\t\t\t// const regex = /\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)/g;\n\t\t\t\t\t// const regex = /\\#([^\\.[#]+)|\\.([^\\.[#]+)|\\[([^\\.\\[#]+)\\]|([^\\.\\[#\\]]+)/g;\n\t\t\t\t\tconst regex = /\\:not\\(\\#([^\\.[#:]+)\\)|\\:not\\(\\.([^\\.[#:]+)\\)|\\:not\\(\\[([^\\.\\[#:]+)\\]\\)|\\:not\\(([^\\.\\[#:\\]]+)\\)|\\#([^\\.[#:]+)|\\.([^\\.[#:]+)|\\[([^\\.\\[#:]+)\\]|([^\\.\\[#:\\]]+)/g;\n\t\t\t\t\t/* eslint no-useless-escape: \"off\" */\n\t\t\t\t\tconst selectors = [];\n\t\t\t\t\tconst matches = x.matchAll(regex);\n\t\t\t\t\tfor (const match of matches) {\n\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[1], type: SelectorType.Id, negate: true });\n\t\t\t\t\t\t} else if (match[2]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[2], type: SelectorType.Class, negate: true });\n\t\t\t\t\t\t} else if (match[3]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[3], type: SelectorType.Attribute, negate: true });\n\t\t\t\t\t\t} else if (match[4]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[4], type: SelectorType.TagName, negate: true });\n\t\t\t\t\t\t} else if (match[5]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[5], type: SelectorType.Id, negate: false });\n\t\t\t\t\t\t} else if (match[6]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[6], type: SelectorType.Class, negate: false });\n\t\t\t\t\t\t} else if (match[7]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[7], type: SelectorType.Attribute, negate: false });\n\t\t\t\t\t\t} else if (match[8]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[8], type: SelectorType.TagName, negate: false });\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log('match', match);\n\t\t\t\t\t}\n\t\t\t\t\tconst selector =\n\t\t\t\t\t\ti > 0\n\t\t\t\t\t\t\t? { selector: x, selectors, inner: true }\n\t\t\t\t\t\t\t: { selector: x, selectors, inner: false };\n\t\t\t\t\tqueries.push.call(queries, selector);\n\t\t\t\t});\n\t\t});\n\treturn queries;\n}\n\nexport function matchSelector(child: RxElement, selector: RxSelector): boolean {\n\tswitch (selector.type) {\n\t\tcase SelectorType.Id:\n\t\t\treturn (selector.selector !== '' && child.attributes.id === selector.selector) !== selector.negate;\n\t\tcase SelectorType.Class:\n\t\t\treturn (child.classList.indexOf(selector.selector) !== -1) !== selector.negate;\n\t\tcase SelectorType.Attribute:\n\t\t\treturn (Object.keys(child.attributes).indexOf(selector.selector) !== -1) !== selector.negate;\n\t\tcase SelectorType.TagName:\n\t\t\treturn (child.nodeName === selector.selector) !== selector.negate;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nexport function matchSelectors(child: RxElement, selectors: RxSelector[]): boolean {\n\treturn selectors.reduce(function (p: boolean, selector: RxSelector) {\n\t\treturn p && matchSelector(child, selector);\n\t}, true);\n}\n\nexport function querySelectorAll(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null, nodes: RxElement[] = []): RxElement[] | null {\n\tif (query || queries.length) {\n\t\tquery = query || queries.shift() as RxQuery;\n\t\tfor (let child of childNodes) {\n\t\t\tif (child instanceof RxElement) {\n\t\t\t\tif (matchSelectors(child, query.selectors)) {\n\t\t\t\t\t// console.log(query);\n\t\t\t\t\tif (queries.length) {\n\t\t\t\t\t\tconst results: RxElement[] | null = querySelectorAll(queries, child.childNodes);\n\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\tArray.prototype.push.apply(nodes, results);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodes.push(child);\n\t\t\t\t\t}\n\t\t\t\t} else if (!query.inner) {\n\t\t\t\t\tconst results: RxElement[] | null = querySelectorAll(queries, child.childNodes, query);\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tArray.prototype.push.apply(nodes, results);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn nodes.length ? nodes : null;\n}\n\nexport function querySelector(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null): RxElement | null {\n\tlet node = null;\n\tif (query || queries.length) {\n\t\tquery = query || queries.shift() as RxQuery;\n\t\tfor (let child of childNodes) {\n\t\t\tif (child instanceof RxElement) {\n\t\t\t\tif (matchSelectors(child, query.selectors)) {\n\t\t\t\t\t// console.log(query);\n\t\t\t\t\tif (queries.length) {\n\t\t\t\t\t\treturn querySelector(queries, child.childNodes);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t}\n\t\t\t\t} else if (!query.inner) {\n\t\t\t\t\tnode = querySelector(queries, child.childNodes, query);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn node;\n}\n\nexport function cloneNode(source: RxNode, deep: boolean = false, parentNode: RxElement | null = null): RxNode {\n\tlet node: RxNode;\n\tif (isRxElement(source)) {\n\t\tconst nodeElement: RxElement = new RxElement(\n\t\t\tparentNode,\n\t\t\tsource.nodeName,\n\t\t\tObject.assign({}, source.attributes),\n\t\t);\n\t\tif (deep) {\n\t\t\tnodeElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeElement]));\n\t\t}\n\t\tnode = nodeElement;\n\t} else if (isRxDocumentFragment(source)) {\n\t\tconst nodeDocumentFragment: RxDocumentFragment = new RxDocumentFragment();\n\t\tif (deep) {\n\t\t\tnodeDocumentFragment.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeDocumentFragment]));\n\t\t}\n\t\tnode = nodeDocumentFragment;\n\t} else if (isRxText(source)) {\n\t\tnode = new RxText(parentNode, source.nodeValue);\n\t} else if (isRxComment(source)) {\n\t\tnode = new RxComment(parentNode, source.nodeValue);\n\t} else if (isRxDocument(source)) {\n\t\tconst documentElement: RxDocument = new RxDocument();\n\t\tif (deep) {\n\t\t\tdocumentElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, documentElement]));\n\t\t}\n\t\tnode = documentElement;\n\t} else {\n\t\tthrow new Error('Invalid node type');\n\t}\n\treturn node;\n}\n\nexport class RxSelector {\n\tselector: string = '';\n\ttype: SelectorType = SelectorType.None;\n\tnegate: boolean = false;\n\tconstructor(options: RxSelector) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class RxQuery {\n\tselector: string = '';\n\tselectors: RxSelector[] = [];\n\tinner: boolean = false;\n\tconstructor(options: RxQuery) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class RxNode {\n\tparentNode: RxElement | null;\n\tnodeType: RxNodeType;\n\tnodeValue: string | null = null;\n\n\tconstructor(parentNode: RxElement | null = null) {\n\t\tthis.parentNode = parentNode;\n\t\tthis.nodeType = -1;\n\t}\n\tcloneNode(deep: boolean = false) {\n\t\treturn cloneNode.apply(this, [this, deep]);\n\t}\n\tserialize(): string {\n\t\treturn ``;\n\t}\n}\n\nexport class RxStyle {\n\t[key: string]: any;\n\titem(index: number): string | undefined {\n\t\tconst keys = Object.keys(this);\n\t\tif (keys.length > index) {\n\t\t\treturn keys[index];\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tgetPropertyPriority(key: string): string {\n\t\tconst value = this[key];\n\t\tif (value && value.indexOf('!important')) {\n\t\t\treturn 'important';\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tgetPropertyValue(key: string): string {\n\t\treturn this[key];\n\t}\n\tsetProperty(key: string, value: string, important: 'important' | '' | undefined) {\n\t\tthis[key] = value + (important === 'important' ? '!important' : '');\n\t\tthis.serialize_();\n\t}\n\tremoveProperty(key: string) {\n\t\tdelete this[key];\n\t\tthis.serialize_();\n\t}\n\tprivate serialize_() {\n\t\tthis.node.attributes.style = Object.keys(this).map(key => {\n\t\t\treturn `${key}: ${this[key]};`;\n\t\t}).join(' ');\n\t}\n\tinit() {\n\t\tconst keys = Object.keys(this);\n\t\tkeys.forEach(key => delete this[key]);\n\t\tif (this.node.attributes?.style) {\n\t\t\tconst regex: RegExp = /([^:]+):([^;]+);?\\s*/gm\n\t\t\tconst matches: RegExpMatchArray[] = [...this.node.attributes.style.matchAll(regex)];\n\t\t\tmatches.forEach((match: RegExpMatchArray) => {\n\t\t\t\tconst key: string = match[1];\n\t\t\t\tconst value: string = match[2];\n\t\t\t\tthis[key] = value;\n\t\t\t});\n\t\t}\n\t}\n\tconstructor(node: RxElement) {\n\t\tObject.defineProperty(this, 'node', {\n\t\t\tvalue: node,\n\t\t\twritable: false,\n\t\t\tenumerable: false\n\t\t});\n\t\tthis.init();\n\t}\n}\n\nexport class RxClassList extends Array<string> {\n\tnode: RxElement;\n\titem(index: number) {\n\t\treturn this[index];\n\t}\n\tcontains(name: string): boolean {\n\t\treturn this.indexOf(name) !== -1;\n\t}\n\tadd(...names: string[]) {\n\t\tnames.forEach(name => {\n\t\t\tif (this.indexOf(name) !== -1) {\n\t\t\t\tthis.push(name);\n\t\t\t}\n\t\t});\n\t\tthis.serialize_();\n\t}\n\tremove(...names: string[]) {\n\t\tnames.forEach(name => {\n\t\t\tconst index: number = this.indexOf(name);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tthis.serialize_();\n\t}\n\ttoggle(name: string, force?: boolean): boolean {\n\t\tconst index: number = this.indexOf(name);\n\t\tif (force === false) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis.serialize_();\n\t\t\treturn false;\n\t\t} else if (force === true) {\n\t\t\tthis.push(name);\n\t\t\tthis.serialize_();\n\t\t\treturn true;\n\t\t} else if (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis.serialize_();\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.push(name);\n\t\t\tthis.serialize_();\n\t\t\treturn true;\n\t\t}\n\t}\n\treplace(oldClass: string, newClass: string) {\n\t\tconst index: number = this.indexOf(oldClass);\n\t\tif (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t}\n\t\tthis.push(newClass);\n\t\tthis.serialize_();\n\t}\n\tprivate serialize_() {\n\t\tthis.node.attributes.class = this.join(' ');\n\t}\n\tinit() {\n\t\tthis.length = 0;\n\t\tif (this.node.attributes?.class) {\n\t\t\tArray.prototype.push.apply(this, this.node.attributes.class.split(' ').map(name => name.trim()));\n\t\t}\n\t}\n\tconstructor(node: RxElement) {\n\t\tsuper();\n\t\tthis.node = node;\n\t\tthis.init();\n\t}\n}\n\nexport class RxElement extends RxNode {\n\tnodeName: string;\n\tchildNodes: RxNode[];\n\tattributes: { [key: string]: string | null } = {};\n\tstyle: RxStyle;\n\tclassList: RxClassList;\n\tget children(): RxElement[] {\n\t\tlet children: RxElement[] = [],\n\t\t\ti = 0,\n\t\t\tnode,\n\t\t\tnodes = this.childNodes;\n\t\tnode = nodes[i++];\n\t\twhile (node) {\n\t\t\tnode = nodes[i++];\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\n\t\t\t\tchildren.push(node as RxElement);\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n\tget childElementCount(): number {\n\t\tlet i = 0,\n\t\t\tcount = 0,\n\t\t\tnode,\n\t\t\tnodes = this.childNodes;\n\t\tnode = nodes[i++];\n\t\twhile (node) {\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tnode = nodes[i++];\n\t\t}\n\t\treturn count;\n\t}\n\tget firstChild(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.childNodes.length) {\n\t\t\tnode = this.childNodes[0];\n\t\t}\n\t\treturn node;\n\t}\n\tget firstElementChild(): RxElement | null {\n\t\tfor (let node of this.childNodes) {\n\t\t\tif (isRxElement(node)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tget lastChild(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.childNodes.length) {\n\t\t\tnode = this.childNodes[this.childNodes.length - 1];\n\t\t}\n\t\treturn node;\n\t}\n\tget lastElementChild(): RxElement | null {\n\t\tconst nodes = this.childNodes;\n\t\tfor (let i = nodes.length - 1; i > -1; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (isRxElement(node)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tget previousSibling(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.parentNode) {\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\n\t\t\tif (index > 0) {\n\t\t\t\tnode = this.parentNode.childNodes[index - 1];\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\tget nextSibling(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.parentNode) {\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\n\t\t\tif (index !== -1 && index < this.parentNode.childNodes.length - 1) {\n\t\t\t\tnode = this.parentNode.childNodes[index];\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\tget wholeText() {\n\t\tlet nodeValue;\n\t\tif (this.nodeType === RxNodeType.TEXT_NODE) {\n\t\t\treturn this.nodeValue;\n\t\t}\n\t\treturn nodeValue;\n\t}\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tset innerText(nodeValue: string | null) {\n\t\tthis.childNodes = [new RxText(this, nodeValue)];\n\t}\n\tget innerText(): string | null {\n\t\t// return this.childNodes.filter((n): n is RxText => isRxText(n)).map(n => n.innerText).join('');\n\t\treturn this.childNodes.filter((n): n is RxText | RxElement => isRxText(n) || isRxElement(n)).map(n => n.innerText).join('');\n\t}\n\tset textContent(nodeValue: string | null) {\n\t\tthis.innerText = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.innerText;\n\t}\n\tget innerHTML(): string {\n\t\treturn this.childNodes.map(x => x.serialize()).join('');\n\t}\n\tset innerHTML(html: string) {\n\t\tconst doc = parse(html);\n\t\tconst childNodes = doc.childNodes.map(n => {\n\t\t\tn.parentNode = this;\n\t\t\treturn n;\n\t\t});\n\t\tthis.childNodes = childNodes;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeName: string, attributes: { [key: string]: string | null } | null = null) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.ELEMENT_NODE;\n\t\tthis.nodeName = nodeName;\n\t\tif (attributes && typeof attributes === 'object') {\n\t\t\tthis.attributes = attributes;\n\t\t}\n\t\tthis.style = new RxStyle(this);\n\t\tthis.classList = new RxClassList(this);\n\t\tthis.childNodes = [];\n\t\t/*\n\t\t\tif (SKIP.indexOf(nodeName) === -1) {\n\t\t\t\tconsole.log(parentNode.nodeName, '>', nodeName);\n\t\t}\n\t\t*/\n\t}\n\tappend(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\n\t\t\tlet node;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tArray.prototype.push.apply(this.childNodes, nodesOrDOMStrings);\n\t\t/*\n\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\n\t\t\t\tlet node;\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t\t} else {\n\t\t\t\t\tnode = nodeOrDomString;\n\t\t\t\t}\n\t\t\t\tthis.childNodes.push(node);\n\t\t}\n\t\t*/\n\t}\n\tprepend(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\n\t\t\tlet node;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tArray.prototype.unshift.apply(this.childNodes, nodesOrDOMStrings);\n\t\t/*\n\t\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\n\t\t\t\tlet node;\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t\t} else {\n\t\t\t\t\tnode = nodeOrDomString;\n\t\t\t\t}\n\t\t\t\tthis.childNodes.unshift(node);\n\t\t}\n\t\t*/\n\t}\n\treplaceChildren(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tconst nodes: RxNode[] = nodesOrDOMStrings.map((nodeOrDomString) => {\n\t\t\tlet node: RxNode;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString as RxNode;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tthis.childNodes = nodes;\n\t}\n\tquerySelectorAll(selector: string): RxNode[] | null {\n\t\tconst queries = getQueries(selector);\n\t\tconst nodes = this.childNodes.filter(x => {\n\t\t\treturn true;\n\t\t});\n\t\tconsole.log(queries);\n\t\treturn nodes.length ? nodes : null;\n\t}\n\tquerySelector(selector: string): RxNode | null {\n\t\tconst queries = getQueries(selector);\n\t\tconst node = querySelector(queries, this.childNodes);\n\t\treturn node;\n\t}\n\thasAttribute(attribute: string): boolean {\n\t\treturn Object.keys(this.attributes).indexOf(attribute.toLowerCase()) !== -1;\n\t}\n\tgetAttribute(attribute: string): string | null {\n\t\treturn this.attributes[attribute.toLowerCase()] || null;\n\t}\n\tsetAttribute(attribute: string, value: any) {\n\t\tthis.attributes[attribute.toLowerCase()] = value.toString();\n\t\tif (attribute === 'style') {\n\t\t\tthis.style.init();\n\t\t} else if (attribute === 'class') {\n\t\t\tthis.classList.init();\n\t\t}\n\t}\n\tremoveAttribute(attribute: string) {\n\t\tdelete this.attributes[attribute];\n\t\tif (attribute === 'style') {\n\t\t\tthis.style.init();\n\t\t} else if (attribute === 'class') {\n\t\t\tthis.classList.init();\n\t\t}\n\t}\n\treplaceChild(newChild: RxNode, oldChild: RxNode): RxNode {\n\t\tconst index = this.childNodes.indexOf(oldChild);\n\t\tif (index !== -1) {\n\t\t\tthis.childNodes[index] = newChild;\n\t\t\tnewChild.parentNode = this;\n\t\t}\n\t\t// console.log('replaceChild', this, newChild, oldChild);\n\t\treturn oldChild;\n\t}\n\tremoveChild(child: RxNode): RxNode {\n\t\tif (!(child instanceof RxNode)) {\n\t\t\tthrow new Error(`Uncaught TypeError: Failed to execute 'removeChild' on 'Node': parameter 1 is not of type 'Node'.`);\n\t\t}\n\t\tconst index = this.childNodes.indexOf(child);\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Uncaught NotFoundError: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.`);\n\t\t}\n\t\tthis.childNodes.splice(index, 1);\n\t\t// console.log('removeChild', this.childNodes.length);\n\t\treturn child;\n\t}\n\tinsertBefore(newNode: RxNode, referenceNode: RxNode | null = null): RxNode {\n\t\tconst index = referenceNode\n\t\t\t? this.childNodes.indexOf(referenceNode)\n\t\t\t: this.childNodes.length;\n\t\tif (index !== -1) {\n\t\t\tthis.childNodes.splice(index, 0, newNode);\n\t\t\tnewNode.parentNode = this;\n\t\t}\n\t\t// console.log('insertBefore', this, newNode, referenceNode);\n\t\treturn newNode;\n\t}\n\tcloneNode(deep: boolean = false) {\n\t\treturn cloneNode.apply(this, [this, deep]);\n\t}\n\taddListener(eventName: string, handler: (e: any) => {}) { }\n\tremoveListener(eventName: string, handler: (e: any) => {}) { }\n\tserialize(): string {\n\t\treturn `<${\n\t\t\tthis.nodeName\n\t\t\t}${this.serializeAttributes()}>${this.childNodes\n\t\t\t\t.map(x => x.serialize())\n\t\t\t\t.join('')}</${this.nodeName}>`;\n\t}\n\tserializeAttributes(): string {\n\t\tlet attributes = '';\n\t\tconst keys = Object.keys(this.attributes);\n\t\tif (keys.length) {\n\t\t\tattributes =\n\t\t\t\t' ' +\n\t\t\t\tkeys\n\t\t\t\t\t.map(k => {\n\t\t\t\t\t\treturn `${k}=\"${this.attributes[k]}\"`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(' ');\n\t\t}\n\t\treturn attributes;\n\t}\n}\n\nexport class RxText extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.TEXT_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t\t// console.log('RxText', nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn this.nodeValue;\n\t}\n}\n\nexport class RxCData extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.CDATA_SECTION_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn this.nodeValue;\n\t}\n}\n\nexport class RxComment extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.COMMENT_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<!--${this.nodeValue}-->`;\n\t}\n}\n\nexport class RxProcessingInstruction extends RxNode {\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.PROCESSING_INSTRUCTION_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<${this.nodeValue}>`;\n\t}\n}\n\nexport class RxDocumentType extends RxNode {\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.DOCUMENT_TYPE_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<${this.nodeValue}>`;\n\t}\n}\n\nexport class RxDocumentFragment extends RxElement {\n\tconstructor() {\n\t\tsuper(null, '#document-fragment');\n\t\tthis.nodeType = RxNodeType.DOCUMENT_FRAGMENT_NODE;\n\t\tthis.childNodes = [];\n\t}\n}\n\nexport class RxDocument extends RxElement {\n\tget hidden(): true {\n\t\treturn true;\n\t}\n\tget visibilityState(): 'prerender' {\n\t\treturn 'prerender';\n\t}\n\tget doctype(): RxDocumentType | null {\n\t\treturn this.childNodes.find(x => isRxDocumentType(x)) as RxDocumentType;\n\t}\n\tget body(): RxElement | null {\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'body') as RxElement;\n\t}\n\tget head(): RxElement | null {\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'head') as RxElement;\n\t}\n\tget title(): string | null {\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\n\t\tif (title) {\n\t\t\treturn title.innerText;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tset title(nodeValue: string | null) {\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\n\t\tif (title) {\n\t\t\ttitle.innerText = nodeValue;\n\t\t}\n\t}\n\tget documentElement(): RxElement | null {\n\t\treturn this.firstElementChild;\n\t}\n\tconstructor() {\n\t\tsuper(null, '#document');\n\t\tthis.nodeType = RxNodeType.DOCUMENT_NODE;\n\t\tthis.childNodes = [];\n\t}\n\tcreateAttribute() { }\n\t// Creates a new Attr object and returns it.\n\tcreateAttributeNS() { }\n\t// Creates a new attribute node in a given namespace and returns it.\n\tcreateCDATASection() { }\n\t// Creates a new CDATA node and returns it.\n\tcreateComment(nodeValue: string) {\n\t\treturn new RxComment(null, nodeValue);\n\t}\n\t// Creates a new comment node and returns it.\n\tcreateDocumentFragment() {\n\t\treturn new RxDocumentFragment();\n\t}\n\t// Creates a new document fragment.\n\tcreateElement(nodeName: string): RxElement {\n\t\treturn new RxElement(null, nodeName);\n\t}\n\t// Creates a new element with the given tag name.\n\tcreateElementNS(nodeName: string): RxElement {\n\t\treturn new RxElement(null, nodeName);\n\t}\n\t// Creates a new element with the given tag name and namespace URI.\n\tcreateEvent() { }\n\t// Creates an event object.\n\tcreateNodeIterator() { }\n\t// Creates a NodeIterator object.\n\tcreateProcessingInstruction(nodeValue: string) {\n\t\treturn new RxProcessingInstruction(null, nodeValue);\n\t}\n\t// Creates a new ProcessingInstruction object.\n\tcreateRange() { }\n\t// Creates a Range object.\n\tcreateTextNode(nodeValue: string) {\n\t\treturn new RxText(null, nodeValue);\n\t}\n\t// Creates a text node.\n\tcreateTouchList() { }\n\t// Creates a TouchList object.\n\tcreateTreeWalker() { }\n\t// Creates a TreeWalker object.\n\tserialize(): string {\n\t\treturn `${this.childNodes.map(x => x.serialize()).join('')}`;\n\t}\n}\n","export const Vars = {\n\tname: 'rxcomp-server',\n\tstatic: false,\n\tdevelopment: false,\n\tproduction: true,\n\thost: '',\n\tresource: '/',\n\tapi: '/api',\n};\n\n/*\nexport const STATIC = window.location.port === '40333' || window.location.host === 'actarian.github.io';\nexport const DEVELOPMENT = ['localhost', '127.0.0.1', '0.0.0.0'].indexOf(window.location.host.split(':')[0]) !== -1;\nexport const PRODUCTION = !DEVELOPMENT;\nexport const ENV = {\n\tNAME: 'ws-events',\n\tSTATIC,\n\tDEVELOPMENT,\n\tPRODUCTION,\n\tRESOURCE: '/Modules/Events/Client/docs/',\n\tSTATIC_RESOURCE: './',\n\tAPI: '/api',\n\tSTATIC_API: (DEVELOPMENT && !STATIC) ? '/Modules/Events/Client/docs/api' : './api',\n};\nexport function getApiUrl(url, useStatic) {\n\tconst base = (useStatic || STATIC) ? ENV.STATIC_API : ENV.API;\n\tconst json = (useStatic || STATIC) ? '.json' : '';\n\treturn `${base}${url}${json}`;\n}\nexport function getResourceRoot() {\n\treturn STATIC ? ENV.STATIC_RESOURCE : ENV.RESOURCE;\n}\nexport function getSlug(url) {\n\tif (!url) {\n\t\treturn url;\n\t}\n\tif (url.indexOf(`/${ENV.NAME}`) !== 0) {\n\t\treturn url;\n\t}\n\tif (STATIC) {\n\t\tconsole.log(url);\n\t\treturn url;\n\t}\n\turl = url.replace(`/${ENV.NAME}`, '');\n\turl = url.replace('.html', '');\n\treturn `/it/it${url}`;\n}\n*/\n","import { isPlatformServer, Module, ModuleError, Platform } from 'rxcomp';\nimport { from, Observable, Observer } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { Vars } from '../../test/js/vars';\nimport CacheService from '../cache/cache.service';\nimport { parse, RxDocument, RxElement, RxText } from '../nodes/nodes';\nconst fs = require('fs');\n\nexport interface IServerRequest {\n\turl: string;\n\ttemplate: string;\n\thost?: string;\n\tcharset?: string;\n}\n\nexport interface IServerResponse extends IServerRequest {\n\tserialize: () => string;\n\tbody?: string;\n\tstatusCode?: number;\n\tstatusMessage?: string;\n}\n\nexport interface IServerErrorResponse extends IServerRequest {\n\terror: Error;\n\tstatusCode?: number;\n\tstatusMessage?: string;\n}\n\nexport class ServerResponse implements IServerResponse {\n\ttemplate!: string;\n\turl!: string;\n\thost?: string;\n\tcharset?: string;\n\tserialize!: () => string;\n\tbody!: string;\n\tstatusCode?: number;\n\tstatusMessage?: string;\n\tconstructor(options?: IServerResponse) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class ServerErrorResponse implements IServerErrorResponse {\n\ttemplate!: string;\n\turl!: string;\n\thost?: string;\n\tcharset?: string;\n\terror!: Error;\n\tstatusCode?: number;\n\tstatusMessage?: string;\n\tconstructor(options?: IServerErrorResponse) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport default class Server extends Platform {\n\n\t/**\n\t * @param moduleFactory\n\t * @description This method returns a Server compiled module\n\t */\n\tstatic bootstrap(moduleFactory?: typeof Module, template?: string) {\n\t\tif (!isPlatformServer) {\n\t\t\tthrow new ModuleError('missing platform server, node process not found');\n\t\t}\n\t\tif (!moduleFactory) {\n\t\t\tthrow new ModuleError('missing moduleFactory');\n\t\t}\n\t\tif (!moduleFactory.meta) {\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap) {\n\t\t\tthrow new ModuleError('missing bootstrap');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\n\t\t\tthrow new ModuleError('missing bootstrap meta');\n\t\t}\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\n\t\t}\n\t\tif (!template) {\n\t\t\tthrow new ModuleError('missing template');\n\t\t}\n\t\t/*\n\t\tif (typeof ((ReadableStream.prototype as any)[Symbol.asyncIterator]) === 'undefined') {\n\t\t\t(ReadableStream.prototype as any)[Symbol.asyncIterator] = async function* () {\n\t\t\t\tconst reader = this.getReader()\n\t\t\t\twhile (1) {\n\t\t\t\t\tconst r = await reader.read();\n\t\t\t\t\tif (r.done) {\n\t\t\t\t\t\treturn r.value;\n\t\t\t\t\t}\n\t\t\t\t\tyield r.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tconst document = this.resolveGlobals(template);\n\t\tconst meta = this.resolveMeta(moduleFactory);\n\t\tif (meta.node instanceof RxElement) {\n\t\t\tconst node: RxElement = meta.node as RxElement;\n\t\t\tconst nodeInnerHTML = meta.nodeInnerHTML;\n\t\t\tconst rxcomp_hydrate_ = {\n\t\t\t\tselector: moduleFactory.meta.bootstrap.meta.selector,\n\t\t\t\tinnerHTML: nodeInnerHTML,\n\t\t\t};\n\t\t\tconst scriptNode = new RxElement(null, 'script');\n\t\t\tconst scriptText = new RxText(null, `var rxcomp_hydrate_ = ${JSON.stringify(rxcomp_hydrate_)};`);\n\t\t\tscriptNode.append(scriptText);\n\t\t\tnode.parentNode?.insertBefore(scriptNode, node);\n\t\t}\n\t\tconst module = new moduleFactory();\n\t\tmodule.meta = meta;\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\n\t\t\tmoduleFactory.prototype.constructor.call(module);\n\t\t});\n\t\tconst instances = module.compile(meta.node, { document } as Window);\n\t\tmodule.instances = instances;\n\t\tconst root = instances[0];\n\t\troot.pushChanges();\n\t\treturn module;\n\t}\n\n\tstatic serialize(): string {\n\t\tconsole.log('Server.serialize');\n\t\tif (this.document instanceof RxDocument) {\n\t\t\tconst serialized = this.document.serialize();\n\t\t\t// console.log('serialized', serialized);\n\t\t\treturn serialized;\n\t\t} else {\n\t\t\tthrow new ModuleError('document is not an instance of RxDocument');\n\t\t}\n\t}\n\n\tprotected static document: Document | RxDocument;\n\n\tprotected static resolveGlobals(documentOrHtml: Document | string): Document | RxDocument {\n\t\tconst document: Document | RxDocument = typeof documentOrHtml === 'string' ? parse(documentOrHtml) : documentOrHtml;\n\t\tthis.document = document as Document;\n\t\tglobal.document = this.document;\n\t\treturn this.document;\n\t}\n\n\tstatic bootstrap$ = bootstrap$;\n\tstatic render$ = render$;\n\tstatic template$ = template$;\n\n}\n\nexport function bootstrap$(moduleFactory: typeof Module, request?: IServerRequest): Observable<ServerResponse> {\n\tif (request && request.host) {\n\t\tVars.host = request.host;\n\t}\n\treturn from(new Promise<ServerResponse>((resolve, reject) => {\n\t\tif (!request?.template) {\n\t\t\treturn reject(new Error('ServerError: missing template'));\n\t\t}\n\t\ttry {\n\t\t\t// const module = Server.bootstrap(moduleFactory, request.template);\n\t\t\tServer.bootstrap(moduleFactory, request.template);\n\t\t\tconst serialize = () => Server.serialize();\n\t\t\tresolve(new ServerResponse(Object.assign({ serialize }, request) as IServerResponse));\n\t\t} catch (error) {\n\t\t\treject(new ServerErrorResponse(Object.assign({ error }, request) as IServerErrorResponse));\n\t\t}\n\t}));\n}\n\nexport function render$(request: IServerRequest, renderRequest$: (request?: IServerRequest) => Observable<ServerResponse>): Observable<ServerResponse> {\n\treturn Observable.create(function (observer: Observer<ServerResponse>) {\n\t\tconst cached = CacheService.get('cached', request.url);\n\t\tconsole.log('cached', !!cached);\n\t\tif (cached) {\n\t\t\tobserver.next(cached);\n\t\t\treturn observer.complete();\n\t\t}\n\t\ttemplate$(request).pipe(\n\t\t\tswitchMap((template: string) => {\n\t\t\t\t// console.log('template!', template);\n\t\t\t\trequest.template = template;\n\t\t\t\treturn renderRequest$(request);\n\t\t\t})\n\t\t).subscribe(\n\t\t\t(success) => {\n\t\t\t\tCacheService.set('cached', request.url, success, 3600);\n\t\t\t\tobserver.next(success);\n\t\t\t\tobserver.complete();\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tobserver.error(error);\n\t\t\t}\n\t\t);\n\t});\n}\n\nexport function template$(request: IServerRequest): Observable<string> {\n\treturn Observable.create(function (observer: Observer<string>) {\n\t\tconst template = CacheService.get('template', request.template);\n\t\tconsole.log('template', !!template);\n\t\tif (template) {\n\t\t\tobserver.next(template);\n\t\t\tobserver.complete();\n\t\t}\n\t\tfs.readFile(request.template, request.charset, function (error: NodeJS.ErrnoException, template: string) {\n\t\t\tif (error) {\n\t\t\t\tobserver.error(error);\n\t\t\t} else {\n\t\t\t\tCacheService.set('template', request.template, template);\n\t\t\t\tobserver.next(template);\n\t\t\t\tobserver.complete();\n\t\t\t}\n\t\t});\n\t});\n}\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\n\nconst factories: typeof Factory[] = [\n];\n\nconst pipes: typeof Pipe[] = [\n];\n\n/**\n *  ServerModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *    ServerModule\n *  ],\n *  declarations: [\n *   ErrorsComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class ServerModule extends Module {\n\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n"]}