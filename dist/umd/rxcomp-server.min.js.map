{"version":3,"sources":["src/rxcomp-server.ts","../../src/cache/cache.service.ts","../../src/file/file.service.ts","../../src/nodes/nodes.ts","../../src/location/location.ts","../../src/history/history.ts","../../src/platform/server.ts","../../src/server.module.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","rxcomp","server","rxjs","htmlparser2","operators","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","_setPrototypeOf","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","TypeError","has","get","set","Wrapper","value","_assertThisInitialized","ReferenceError","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","slice","name","from","test","_unsupportedIterableToArray","done","next","CacheMode","CacheControlType","path","fs","CacheItem","options","date","maxAge","cacheControl","Public","NoStore","getTime","now","CacheService","type","filename","mode","File","hasFile","Memory","getPath","keys","cache_","cacheItem","_cacheItem","readFile","expired","unlinkFile","data","JSON","parse","writeFile","serialized","serialize","delete","existsSync","error","dirname","json","readFileSync","mkdirSync","writeFileSync","unlinkSync","readFile$","service","Observable","observer","complete","writeFile$","item","pool","stringify","clear","getKey","folder","toLowerCase","replace","RxNodeType","SelectorType","FileService","exists","pathname","exists$","access","constants","F_OK","console","log","content","mkdir","recursive","unlinkFile$","unlink","RxDOMStringList","_Array","_proto","contains","string","index","RxLocation","hash_","host_","hostname_","pathname_","port_","protocol_","search_","href_","ancestorOrigins_","_proto2","assign","url","href","reload","hash","host","hostname","port","protocol","search","location","getLocationComponents","location_","RxHistory","currentIndex_","history_","scrollRestoration","back","forward","go","delta","pushState","title","replaceState","splice","RxNode","parentNode","nodeValue","nodeType","cloneNode","deep","RxStyle","node","init","getPropertyPriority","getPropertyValue","setProperty","important","serialize_","removeProperty","_this","attributes","style","map","join","_this$node$attributes","_this2","forEach","concat","matchAll","match","RxClassList","_this3","_proto3","add","_this4","_len","names","remove","_this5","_len2","toggle","force","oldClass","newClass","class","_this$node$attributes2","split","trim","RxElement","_RxNode","nodeName","_this6","ELEMENT_NODE","classList","childNodes","_proto4","append","_this7","_len3","nodesOrDOMStrings","nodeOrDomString","RxText","prepend","_this8","_len4","unshift","replaceChildren","_this9","_len5","nodes","querySelectorAll","selector","getQueries","querySelector","hasAttribute","attribute","getAttribute","setAttribute","removeAttribute","replaceChild","newChild","oldChild","removeChild","child","Error","insertBefore","newNode","referenceNode","addListener","eventName","handler","removeListener","serializeAttributes","x","_this10","k","children","count","_step","_iterator","isRxElement","TEXT_NODE","html","filter","isRxText","innerText","String","_this11","_RxNode2","_this12","RxCData","_RxNode3","_this13","CDATA_SECTION_NODE","RxComment","_RxNode4","_this14","COMMENT_NODE","RxProcessingInstruction","_RxNode5","_this15","PROCESSING_INSTRUCTION_NODE","RxDocumentType","_RxNode6","_this16","DOCUMENT_TYPE_NODE","RxDocumentFragment","_RxElement","_this17","DOCUMENT_FRAGMENT_NODE","RxDocument","_RxElement2","_this18","DOCUMENT_NODE","_proto10","createAttribute","createAttributeNS","createCDATASection","createComment","createDocumentFragment","createElement","createElementNS","createEvent","createNodeIterator","createProcessingInstruction","createRange","createTextNode","createTouchList","createTreeWalker","find","isRxDocumentType","head","documentElement","body","element","firstElementChild","isRxComment","isRxDocument","doc","parser","Parser","onopentag","onclosetag","ontext","textNode","onprocessinginstruction","oncomment","oncommentend","decodeEntities","lowerCaseTags","write","end","queries","_step2","selectors","_iterator2","Id","negate","Attribute","TagName","inner","matchSelector","id","matchSelectors","reduce","query","shift","_step3","_iterator3","results","_step4","_iterator4","source","nodeElement","nodeDocumentFragment","ServerRequest","vars","charset","template","cacheMode","cache","root","ServerResponse","ServerErrorResponse","Server","_Platform","bootstrap","moduleFactory","request","isPlatformServer","ModuleError","meta","document","resolveGlobals","resolveMeta","_node$parentNode","nodeInnerHTML","rxcomp_hydrate_","innerHTML","scriptNode","scriptText","imports","instances","compile","pushChanges","global","history","origin","documentOrHtml","Platform","render$","iRequest","renderRequest$","render","template$","pipe","switchMap","subscribe","response","src","bootstrap$","factories","pipes","ServerModule","_Module","Module","declarations","RxQuery","RxSelector","None","_cloneNode","isRxProcessingInstruction","_querySelector","_querySelectorAll"],"mappings":";;;;;CAMC,SAASA,EAAEC,GAAoB,iBAAVC,SAAoC,oBAATC,OAAqBF,EAAEC,QAAQE,QAAQ,QAAQA,QAAQ,UAAUA,QAAQ,eAAeA,QAAQ,mBAAmC,mBAATC,QAAqBA,OAAOC,IAAID,OAAO,CAAC,UAAU,OAAO,SAAS,cAAc,kBAAkBJ,GAAyDA,IAArDD,EAAsB,oBAAbO,WAAyBA,WAAWP,GAAGQ,MAAUC,OAAOT,EAAES,QAAQ,GAAGT,EAAES,OAAOC,OAAO,IAAIV,EAAEW,KAAKX,EAAES,OAAOT,EAAEY,YAAYZ,EAAEW,KAAKE,WAAxZ,CAAsaC,MAAK,SAAUZ,EAASS,EAAMF,EAAQG,EAAaC,GAAW,aAAa,SAASE,EAAkBC,EAAQC,GAClhB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAaC,EAAaC,EAAYC,GAG7C,OAFID,GAAYd,EAAkBa,EAAYG,UAAWF,GACrDC,GAAaf,EAAkBa,EAAaE,GACzCF,EAGT,SAASI,EAAeC,EAAUC,GAChCD,EAASF,UAAYP,OAAOW,OAAOD,EAAWH,WAC9CE,EAASF,UAAUK,YAAcH,EACjCA,EAASI,UAAYH,EAGvB,SAASI,EAAgBC,GAIvB,OAHAD,EAAkBd,OAAOgB,eAAiBhB,OAAOiB,eAAiB,SAAyBF,GACzF,OAAOA,EAAEF,WAAab,OAAOiB,eAAeF,KAEvBA,GAGzB,SAASG,EAAgBH,EAAGI,GAM1B,OALAD,EAAkBlB,OAAOgB,gBAAkB,SAAyBD,EAAGI,GAErE,OADAJ,EAAEF,UAAYM,EACPJ,IAGcA,EAAGI,GAG5B,SAASC,IACP,GAAuB,oBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,mBAAVC,MAAsB,OAAO,EAExC,IAEE,OADAC,KAAKlB,UAAUmB,SAASC,KAAKN,QAAQC,UAAUG,KAAM,IAAI,iBAClD,EACP,MAAOG,GACP,OAAO,GAIX,SAASC,EAAWC,EAAQC,EAAMC,GAchC,OAZEH,EADET,IACWC,QAAQC,UAER,SAAoBQ,EAAQC,EAAMC,GAC7C,IAAIC,EAAI,CAAC,MACTA,EAAEC,KAAKC,MAAMF,EAAGF,GAChB,IACIK,EAAW,IADGC,SAASC,KAAKH,MAAML,EAAQG,IAG9C,OADID,GAAOd,EAAgBkB,EAAUJ,EAAMzB,WACpC6B,IAIOD,MAAM,KAAMI,WAOhC,SAASC,EAAiBR,GACxB,IAAIS,EAAwB,mBAARC,IAAqB,IAAIA,SAAQC,EA8BrD,OA5BAH,EAAmB,SAA0BR,GAC3C,GAAc,OAAVA,IARmBY,EAQkBZ,GAPqB,IAAzDK,SAASX,SAASC,KAAKiB,GAAIC,QAAQ,kBAOS,OAAOb,EAR5D,IAA2BY,EAUvB,GAAqB,mBAAVZ,EACT,MAAM,IAAIc,UAAU,sDAGtB,QAAsB,IAAXL,EAAwB,CACjC,GAAIA,EAAOM,IAAIf,GAAQ,OAAOS,EAAOO,IAAIhB,GAEzCS,EAAOQ,IAAIjB,EAAOkB,GAGpB,SAASA,IACP,OAAOrB,EAAWG,EAAOO,UAAWzB,EAAgBxB,MAAMsB,aAW5D,OARAsC,EAAQ3C,UAAYP,OAAOW,OAAOqB,EAAMzB,UAAW,CACjDK,YAAa,CACXuC,MAAOD,EACPrD,YAAY,EACZE,UAAU,EACVD,cAAc,KAGXoB,EAAgBgC,EAASlB,KAGVA,GAG1B,SAASoB,EAAuBpE,GAC9B,QAAa,IAATA,EACF,MAAM,IAAIqE,eAAe,6DAG3B,OAAOrE,EAYT,SAASsE,EAAkBC,EAAKC,IACnB,MAAPA,GAAeA,EAAMD,EAAI5D,UAAQ6D,EAAMD,EAAI5D,QAE/C,IAAK,IAAID,EAAI,EAAG+D,EAAO,IAAIC,MAAMF,GAAM9D,EAAI8D,EAAK9D,IAAK+D,EAAK/D,GAAK6D,EAAI7D,GAEnE,OAAO+D,EAGT,SAASE,EAAgC5C,EAAG6C,GAC1C,IAAIC,EAEJ,GAAsB,oBAAXC,QAAgD,MAAtB/C,EAAE+C,OAAOC,UAAmB,CAC/D,GAAIL,MAAMM,QAAQjD,KAAO8C,EArB7B,SAAqC9C,EAAGkD,GACtC,GAAKlD,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAOuC,EAAkBvC,EAAGkD,GACvD,IAAIC,EAAIlE,OAAOO,UAAUmB,SAASC,KAAKZ,GAAGoD,MAAM,GAAI,GAEpD,MADU,WAAND,GAAkBnD,EAAEH,cAAasD,EAAInD,EAAEH,YAAYwD,MAC7C,QAANF,GAAqB,QAANA,EAAoBR,MAAMW,KAAKtD,GACxC,cAANmD,GAAqB,2CAA2CI,KAAKJ,GAAWZ,EAAkBvC,EAAGkD,QAAzG,GAegCM,CAA4BxD,KAAO6C,GAAkB7C,GAAyB,iBAAbA,EAAEpB,OAAqB,CAChHkE,IAAI9C,EAAI8C,GACZ,IAAInE,EAAI,EACR,OAAO,WACL,OAAIA,GAAKqB,EAAEpB,OAAe,CACxB6E,MAAM,GAED,CACLA,MAAM,EACNrB,MAAOpC,EAAErB,OAKf,MAAM,IAAIoD,UAAU,yIAItB,OADAe,EAAK9C,EAAE+C,OAAOC,aACJU,KAAKnC,KAAKuB,GC7JtB,IAGYa,EAKAC,EARNC,EAAOhG,QAAQ,QACfiG,EAAKjG,QAAQ,OAEnB,SAAY8F,GACXA,EAAAA,OAAA,SACAA,EAAAA,KAAA,OAFD,CAAYA,IAAAA,EAAS,MAKTC,EAAAA,EAAAA,mBAAAA,EAAAA,iBAAgB,KAC3BA,OAAA,SACAA,EAAAA,QAAA,UACAA,EAAAA,QAAA,WACAA,EAAAA,QAAA,WDoKD,IC1JaG,EAAb,WAUC,SAAAA,EAAYC,GARZzF,KAAA0F,KAAa,IAAIvD,KACjBnC,KAAA2F,OAAiB,EACjB3F,KAAA4F,aAAiCP,EAAAA,iBAAiBQ,OAO7CJ,IACHzF,KAAK6D,MAAQ4B,EAAQ5B,MACrB7D,KAAK0F,KAAOD,EAAQC,KAAO,IAAIvD,KAAKsD,EAAQC,MAAQ1F,KAAK0F,KACzD1F,KAAK2F,OAASF,EAAQE,QAAU3F,KAAK2F,OACrC3F,KAAK4F,aAAeH,EAAQG,cAAgB5F,KAAK4F,cAfpD,OAAA/E,EAAA2E,EAAA,CAAA,CAAA5E,IAAA,UAAA8C,IAAA,WAME,OAAO1D,KAAK4F,eAAiBP,EAAAA,iBAAiBS,SAC1B,IAAhB9F,KAAK2F,QACJ3F,KAAK0F,KAAKK,UAA2B,IAAd/F,KAAK2F,OAAiBxD,KAAK6D,UARzDR,EAAA,GAoBqBS,EAAAA,WD+JnB,SAASA,KA4ST,OA1SAA,EC5JMxC,IAAP,SAAWyC,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACzB,IAAIzC,GAAe,EACnB,OAAQzD,KAAKoG,MACZ,KAAKhB,EAAUiB,KACd5C,EAAMzD,KAAKsG,QAAQJ,EAAMC,GACzB,MACD,KAAKf,EAAUmB,OACf,QACC,IAAM3F,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC1C,GAAiD,IAA3C/C,OAAO+F,KAAKzG,KAAK0G,QAAQnD,QAAQ3C,GAEzC,OAAO6C,GDsKPwC,ECnKMvC,IAAP,SAAWwC,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACzB,IAAkBS,EAAd9C,EAAQ,KACNjD,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC,OAAQnG,KAAKoG,MACZ,KAAKhB,EAAUiB,KAML,IAAAO,EALT,GAAI5G,KAAKsG,QAAQJ,EAAMC,GAEtB,GADAQ,EAAY3G,KAAK6G,SAASX,EAAMC,GAE/B,GAAIQ,EAAUG,QACb9G,KAAK+G,WAAWb,EAAMC,QAEtBtC,EAAK,OAAA+C,EAAGD,QAAH,EAAGC,EAAW/C,MAItB,MACD,KAAKuB,EAAUmB,OACf,QACC,IAA+C,IAA3C7F,OAAO+F,KAAKzG,KAAK0G,QAAQnD,QAAQ3C,GAAa,CACjD,IAAMoG,EAA2BhH,KAAK0G,OAAO9F,GACzCoG,IACHL,EAAY,IAAInB,EAAUyB,KAAKC,MAAMF,OAEhCL,EAAUG,eACN9G,KAAK0G,OAAO9F,GAEnBiD,EAAQ8C,EAAU9C,QAMxB,OAAOA,GDqLPoC,EClLMtC,IAAP,SAAWuC,EAAwBC,EAAkBtC,EAAY8B,EAAoBC,QAA1EM,IAAAA,IAAAA,EAAe,cAAuCP,IAAAA,IAAAA,EAAiB,QAAGC,IAAAA,IAAAA,EAAiCP,EAAAA,iBAAiBQ,QACtI,IAAMjF,EAAcZ,KAAKwG,QAAQN,EAAMC,GACjCQ,EAAuB,IAAInB,EAAU,CAAE3B,MAAAA,EAAO8B,OAAAA,EAAQC,aAAAA,IAC5D,OAAQ5F,KAAKoG,MACZ,KAAKhB,EAAUiB,KACdrG,KAAKmH,UAAUjB,EAAMC,EAAUQ,GAC/B,MACD,KAAKvB,EAAUmB,OACf,QACC,IAAMa,EAAqBpH,KAAKqH,UAAUV,GAC1C3G,KAAK0G,OAAO9F,GAAOwG,EAErB,OAAOvD,GDwMPoC,ECrMMqB,OAAP,SAAcpB,EAAwBC,GACrC,YADaD,IAAAA,IAAAA,EAAe,SACpBlG,KAAKoG,MACZ,KAAKhB,EAAUiB,KACdrG,KAAK+G,WAAWb,EAAMC,GACtB,MACD,KAAKf,EAAUmB,OACf,QACC,IAAM3F,EAAcZ,KAAKwG,QAAQN,EAAMC,IACQ,IAA3CzF,OAAO+F,KAAKzG,KAAK0G,QAAQnD,QAAQ3C,WAC7BZ,KAAK0G,OAAO9F,KDiNtBqF,EC5MgBK,QAAP,SAAeJ,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACvC,IAAIzC,GAAe,EACb7C,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC,IACKZ,EAAGgC,WAAW3G,KACjB6C,GAAM,GAEN,MAAO+D,GACR,MAAMA,EAEP,OAAO/D,GDqNPwC,EClNgBY,SAAP,SAAgBX,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACxC,IAAIS,EAA8B,KAC5B/F,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC,IACC,IAAMsB,EAAkBnC,EAAKmC,QAAQ7G,GACrC,IAAK2E,EAAGgC,WAAWE,GAClB,OAAOd,EAER,IAAMe,EAAenC,EAAGoC,aAAa/G,EAAK,QAC1C+F,EAAY,IAAInB,EAAUyB,KAAKC,MAAMQ,IACpC,MAAOF,GACR,MAAMA,EAEP,OAAOb,GD6NPV,EC1NgBkB,UAAP,SAAiBjB,EAAwBC,EAAkBQ,QAA1CT,IAAAA,IAAAA,EAAe,SACzC,IAAMtF,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC,IACC,IAAMuB,EAAe1H,KAAKqH,UAAUV,GAC9Bc,EAAkBnC,EAAKmC,QAAQ7G,GAChC2E,EAAGgC,WAAWE,IAClBlC,EAAGqC,UAAUH,GAEdlC,EAAGsC,cAAcjH,EAAK8G,EAAM,QAC3B,MAAOF,GACR,MAAMA,EAEP,OAAOb,GDqOPV,EClOgBc,WAAP,SAAkBb,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SAC1C,IAAMtF,EAAcZ,KAAKwG,QAAQN,EAAMC,GACvC,IACKZ,EAAGgC,WAAW3G,IACjB2E,EAAGuC,WAAWlH,GAEd,MAAO4G,GACR,MAAMA,ID2OPvB,ECvOgB8B,UAAP,SAAiB7B,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACzC,IAAM8B,EAAUhI,KAChB,OAAOiI,EAAAA,WAAW5G,QAAO,SAAU6G,GAClC,IAAMtH,EAAcoH,EAAQxB,QAAQN,EAAMC,GACpCsB,EAAkBnC,EAAKmC,QAAQ7G,GAChC2E,EAAGgC,WAAWE,IAClBS,EAASV,MAAT,qCAEDjC,EAAGsB,SAASjG,EAAK,QAAQ,SAAU4G,EAA8BE,GAChE,GAAIF,EACHU,EAASV,MAAMA,OACT,CACN,IAAMb,EAAuB,IAAInB,EAAUyB,KAAKC,MAAMQ,IACtDQ,EAAS/C,KAAKwB,GACduB,EAASC,mBDmPZlC,EC7OgBmC,WAAP,SAAkBlC,EAAwBC,EAAkBQ,QAA1CT,IAAAA,IAAAA,EAAe,SAC1C,IAAM8B,EAAUhI,KAChB,OAAOiI,EAAAA,WAAW5G,QAAO,SAAU6G,GAClC,IAAMtH,EAAcoH,EAAQxB,QAAQN,EAAMC,GACpCuB,EAAeM,EAAQX,UAAUV,GACjCc,EAAkBnC,EAAKmC,QAAQ7G,GAChC2E,EAAGgC,WAAWE,IAClBlC,EAAGqC,UAAUH,GAEdlC,EAAG4B,UAAUvG,EAAK8G,EAAM,QAAQ,SAAUF,GACrCA,EACHU,EAASV,MAAMA,IAEfU,EAAS/C,KAAKwB,GACduB,EAASC,mBDyPZlC,ECnPgBoB,UAAP,SAAiBgB,GAC1B,IAAMC,EAA0B,IAAIlF,IAC9BgE,EAAqBH,KAAKsB,UAAUF,GAAM,SAACzH,EAAaiD,GAC7D,GAAIA,GAA0B,iBAAVA,EAAoB,CACvC,GAAIyE,EAAK7E,IAAII,GACZ,OAEDyE,EAAK3E,IAAIE,GAAO,GAEjB,OAAOA,IACL,GAEH,OADAyE,EAAKE,QACEpB,GDwPPnB,ECrPgBO,QAAP,SAAeN,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACvC,IAAMtF,EAAcZ,KAAKyI,OAAOvC,EAAMC,GACtC,MAAA,GAAUnG,KAAK0I,OAAS9H,GD4PxBqF,ECzPgBwC,OAAP,SAAcvC,EAAwBC,QAAxBD,IAAAA,IAAAA,EAAe,SACtC,IAAItF,GAAiBsF,EAAH,IAAWC,GAAWwC,cAExC,OADA/H,EAAMA,EAAIgI,QAAQ,gBAAgB,WAAwB,OAAO3F,UAAA5C,QAAA,OAAAgD,EAAAJ,UAAA,IAAa,GAAK,QDmQ5EgD,EC3cYA,GACLA,EAAAA,OAAoC,GAC5CA,EAAAA,KAAkBb,EAAUmB,OC7CpC,ICOYsC,EAWAC,EDlBNxD,EAAOhG,QAAQ,QACfiG,EAAKjG,QAAQ,MAEEyJ,EAAAA,WFqgBnB,SAASA,KA8HT,OA5HAA,EErgBgBC,OAAP,SAAcC,GACvB,OAAO1D,EAAGgC,WAAW0B,IFwgBrBF,EErgBgBG,QAAP,SAAeD,GACxB,OAAOhB,EAAAA,WAAW5G,QAAO,SAAC6G,GACzB,IACC3C,EAAG4D,OAAOF,EAAU1D,EAAG6D,UAAUC,MAAM,SAAC7B,GACvC,IAAMwB,GAAmBxB,EACzBU,EAAS/C,KAAK6D,GACdd,EAASC,cAET,MAAOX,GACR8B,QAAQC,IAAI,4BAA6B/B,GACzCU,EAAS/C,MAAK,GACd+C,EAASC,gBF0gBXY,EEpgBgBlC,SAAP,SAAgBoC,GACzB,IAAMxB,EAAkBnC,EAAKmC,QAAQwB,GACrC,OAAK1D,EAAGgC,WAAWE,GAGZlC,EAAGoC,aAAasB,EAAU,QAFzB,MF2gBRF,EEtgBgBhB,UAAP,SAAiBkB,GAC1B,OAAOhB,EAAAA,WAAW5G,QAAO,SAAC6G,GACzB,IACC3C,EAAGsB,SAASoC,EAAU,QAAQ,SAACzB,EAAcR,GAE5CkB,EAAS/C,KAAKqC,EAAQ,KAAOR,GAC7BkB,EAASC,cAKT,MAAOX,GACR8B,QAAQC,IAAI,8BAA+B/B,GAC3CU,EAAS/C,KAAK,MACd+C,EAASC,gBF0gBXY,EEpgBgB5B,UAAP,SAAiB8B,EAAkBO,GAC5C,IACC,IAAM/B,EAAkBnC,EAAKmC,QAAQwB,GAKrC,OAJK1D,EAAGgC,WAAWE,IAClBlC,EAAGqC,UAAUH,GAEdlC,EAAGsC,cAAcoB,EAAUO,EAAS,SAC7B,EACN,MAAOhC,GAER,OADA8B,QAAQC,IAAI,8BAA+B/B,IACpC,IF0gBRuB,EEtgBgBX,WAAP,SAAkBa,EAAkBO,GAC7C,OAAOvB,EAAAA,WAAW5G,QAAO,SAAC6G,GACzB,IACC,IAAMT,EAAkBnC,EAAKmC,QAAQwB,GACrC1D,EAAGkE,MAAMhC,EAAS,CAAEiC,WAAW,IAAQ,SAAClC,GACvC,GAAIA,EAGH,OAFAU,EAAS/C,MAAK,QACd+C,EAASC,WAIV5C,EAAG4B,UAAU8B,EAAUO,EAAS,QAAQ,SAAChC,GACxCU,EAAS/C,MAAMqC,GACfU,EAASC,iBAOV,MAAOX,GACR8B,QAAQC,IAAI,+BAAgC/B,GAC5CU,EAAS/C,MAAK,GACd+C,EAASC,gBF4gBXY,EEtgBgBhC,WAAP,SAAkBkC,GAC3B,IACC,QAAI1D,EAAGgC,WAAW0B,KACjB1D,EAAGuC,WAAWmB,IACP,GAIP,MAAOzB,GAER,OADA8B,QAAQC,IAAI,+BAAgC/B,IACrC,IF0gBRuB,EEtgBgBY,YAAP,SAAmBV,GAC5B,OAAOhB,EAAAA,WAAW5G,QAAO,SAAC6G,GACzB,IACC3C,EAAGqE,OAAOX,GAAU,SAACzB,GACpBU,EAAS/C,MAAMqC,GACfU,EAASC,cAOT,MAAOX,GACR8B,QAAQC,IAAI,gCAAiC/B,GAC7CU,EAAS/C,MAAK,QFygBT4D,EEnoBYA,GEQRc,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAjH,MAAA7C,KAAAiD,YAAAjD,KAAAkB,EAAA2I,EAAAC,GAAA,IAAAC,EAAAF,EAAA5I,UAAA,OAAA8I,EAOCC,SAAA,SAASC,GAER,OAAiC,IAA1BjK,KAAKuD,QAAQ0G,IATtBF,EAWC1B,KAAA,SAAK6B,GAEJ,OAAIA,EAAQ,GAAKA,EAAQlK,KAAKK,OAEtBL,KAAKkK,GAEL,MAjBVL,EAAA,CAAA3G,EAAqCkB,QA0CxB+F,EAAb,WAAA,SAAAA,IAWSnK,KAAAoK,MAAgB,GAIhBpK,KAAAqK,MAAgB,GAIhBrK,KAAAsK,UAAoB,GAIpBtK,KAAAuK,UAAoB,GAIpBvK,KAAAwK,MAAgB,GAIhBxK,KAAAyK,UAAoB,GAIpBzK,KAAA0K,QAAkB,GAIlB1K,KAAA2K,MAAgB,GAsBhB3K,KAAA4K,iBAAmC,IAAIf,EA7DhD,IAAAgB,EAAAV,EAAAlJ,UAAA,OAAA4J,EAiECC,OAAA,SAAOC,GACN/K,KAAKgL,KAAOD,GAlEdF,EAoECI,OAAA,aApEDJ,EAqECjC,QAAA,SAAQmC,GACP/K,KAAKgL,KAAOD,GAtEdF,EAwECzI,SAAA,WACC,OAAOpC,KAAKgL,MAzEdnK,EAAAsJ,EAAA,CAAA,CAAAvJ,IAAA,OAAA8C,IAAA,WAYsB,OAAO1D,KAAKoK,OAZlCzG,IAAA,SAaUuH,GAAgBlL,KAAKoK,MAAQc,EAAMlL,KAAKgL,KAAOhL,KAAKgL,OAb9D,CAAApK,IAAA,OAAA8C,IAAA,WAgBsB,OAAO1D,KAAKqK,OAhBlC1G,IAAA,SAiBUwH,GAAgBnL,KAAKqK,MAAQc,EAAMnL,KAAKgL,KAAOhL,KAAKgL,OAjB9D,CAAApK,IAAA,WAAA8C,IAAA,WAoB0B,OAAO1D,KAAKsK,WApBtC3G,IAAA,SAqBcyH,GAAoBpL,KAAKsK,UAAYc,EAAUpL,KAAKgL,KAAOhL,KAAKgL,OArB9E,CAAApK,IAAA,WAAA8C,IAAA,WAwB0B,OAAO1D,KAAKuK,WAxBtC5G,IAAA,SAyBcsF,GAAoBjJ,KAAKuK,UAAYtB,EAAUjJ,KAAKgL,KAAOhL,KAAKgL,OAzB9E,CAAApK,IAAA,OAAA8C,IAAA,WA4BsB,OAAO1D,KAAKwK,OA5BlC7G,IAAA,SA6BU0H,GAAgBrL,KAAKwK,MAAQa,EAAMrL,KAAKgL,KAAOhL,KAAKgL,OA7B9D,CAAApK,IAAA,WAAA8C,IAAA,WAgC0B,OAAO1D,KAAKyK,WAhCtC9G,IAAA,SAiCc2H,GAAoBtL,KAAKyK,UAAYa,EAAUtL,KAAKgL,KAAOhL,KAAKgL,OAjC9E,CAAApK,IAAA,SAAA8C,IAAA,WAoCwB,OAAO1D,KAAK0K,SApCpC/G,IAAA,SAqCY4H,GAAkBvL,KAAK0K,QAAUa,EAAQvL,KAAKgL,KAAOhL,KAAKgL,OArCtE,CAAApK,IAAA,OAAA8C,IAAA,WAyCE,IAAMsH,EAAkBhL,KAAKsL,SAAnB,KAAgCtL,KAAKmL,MAAOnL,KAAKqL,KAAKhL,OAAV,IAAuBL,KAAKqL,KAA5B,IAA0CrL,KAAKiJ,SAAWjJ,KAAKuL,OAASvL,KAAKkL,KAEnI,OADAlL,KAAK2K,MAAQK,EACNA,GA3CTrH,IAAA,SA6CUqH,GACR,GAAIhL,KAAK2K,QAAUK,EAAM,CACxBhL,KAAK2K,MAAQK,EACb,IAAMQ,EAA0BC,EAAAA,sBAAsBT,GACtDhL,KAAKyK,UAAYe,EAASF,SAC1BtL,KAAKqK,MAAQmB,EAASL,KACtBnL,KAAKsK,UAAYkB,EAASJ,SAC1BpL,KAAKwK,MAAQgB,EAASH,KACtBrL,KAAKuK,UAAYiB,EAASvC,SAC1BjJ,KAAK0K,QAAUc,EAASD,OACxBvL,KAAKoK,MAAQoB,EAASN,QAvDzB,CAAAtK,IAAA,SAAA8C,IAAA,WA2DE,OAAU1D,KAAKsL,SAAf,KAA4BtL,KAAKmL,MAAOnL,KAAKqL,KAAKhL,OAAV,IAAuBL,KAAKqL,KAA5B,MA3D1C,CAAAzK,IAAA,kBAAA8C,IAAA,WA+DE,OAAO1D,KAAK4K,oBA/Dd,CAAA,CAAAhK,IAAA,WAAA8C,IAAA,WA6EE,OAAI1D,KAAK0L,UACD1L,KAAK0L,UAEL1L,KAAK0L,UAAY,IAAIvB,MAhF/BA,EAAA,GCjCawB,EAAb,WAAA,SAAAA,IACS3L,KAAA4L,cAAwB,EACxB5L,KAAA6L,SAA2B,GAInC7L,KAAA8L,kBAAuC,OANxC,IAAA/B,EAAA4B,EAAA1K,UAAA,OAAA8I,EAQCgC,KAAA,WACC,GAAI/L,KAAK4L,cAAgB,EAAG,CAC3B5L,KAAK4L,gBACL,IAAMvD,EAAqBrI,KAAK6L,SAAS7L,KAAK4L,eAC1CvD,EAAK0C,MAAKZ,EAAWqB,SAASR,KAAO3C,EAAK0C,OAZjDhB,EAeCiC,QAAA,WACC,GAAIhM,KAAK4L,cAAgB5L,KAAK6L,SAASxL,OAAS,EAAG,CAClDL,KAAK4L,gBACL,IAAMvD,EAAqBrI,KAAK6L,SAAS7L,KAAK4L,eAC1CvD,EAAK0C,MAAKZ,EAAWqB,SAASR,KAAO3C,EAAK0C,OAnBjDhB,EAsBCkC,GAAA,SAAGC,GACF,GAAqB,iBAAVA,EAAoB,CAC9B,IAAMhC,EAAgBlK,KAAK4L,cAAgBM,EAC3C,GAAIhC,EAAQ,GAAKA,EAAQlK,KAAK6L,SAASxL,OAAQ,CAC9C,IAAMgI,EAAqBrI,KAAK6L,SAAS3B,GACrC7B,EAAK0C,MAAKZ,EAAWqB,SAASR,KAAO3C,EAAK0C,QA3BlDhB,EA+BCoC,UAAA,SAAUnF,EAAWoF,EAAerB,GACnC/K,KAAK6L,SAASjJ,KAAK,CAAEoE,KAAAA,EAAMoF,MAAAA,EAAOrB,IAAAA,IAClC/K,KAAK4L,cAAgB5L,KAAK6L,SAASxL,OAAS,GAjC9C0J,EAmCCsC,aAAA,SAAarF,EAAWoF,EAAerB,GAClC/K,KAAK6L,SAASxL,OACjBL,KAAK6L,SAASS,OAAOtM,KAAK6L,SAASxL,OAAS,EAAG,EAAG,CAAE2G,KAAAA,EAAMoF,MAAAA,EAAOrB,IAAAA,IAEjE/K,KAAK6L,SAASjJ,KAAK,CAAEoE,KAAAA,EAAMoF,MAAAA,EAAOrB,IAAAA,IAEnC/K,KAAK4L,cAAgB5L,KAAK6L,SAASxL,OAAS,GAzC9CQ,EAAA8K,EAAA,CAAA,CAAA/K,IAAA,SAAA8C,IAAA,WAIE,OAAO1D,KAAK6L,SAASxL,UAJvB,CAAA,CAAAO,IAAA,UAAA8C,IAAA,WA6CE,OAAI1D,KAAK6L,SACD7L,KAAK6L,SAEL7L,KAAK6L,SAAW,IAAIF,MAhD9BA,EAAA,IFbY9C,EAAAA,EAAAA,aAAAA,EAAAA,WAAU,KACrBA,EAAAA,aAAAA,GAAA,eACAA,EAAAA,EAAAA,UAAAA,GAAA,YACAA,EAAAA,EAAAA,mBAAAA,GAAA,qBACAA,EAAAA,EAAAA,4BAAAA,GAAA,8BACAA,EAAAA,EAAAA,aAAAA,GAAA,eACAA,EAAAA,EAAAA,cAAAA,GAAA,gBACAA,EAAAA,EAAAA,mBAAAA,IAAA,qBACAA,EAAAA,EAAAA,uBAAAA,IAAA,0BAGWC,EAAAA,EAAAA,eAAAA,EAAAA,aAAY,KACvBA,EAAAA,MAAAA,GAAA,OACAA,EAAAA,EAAAA,GAAAA,GAAA,KACAA,EAAAA,EAAAA,MAAAA,GAAA,QACAA,EAAAA,EAAAA,UAAAA,GAAA,YACAA,EAAAA,EAAAA,QAAAA,GAAA,UHk4BD,IGz2BayD,EAAb,WAKC,SAAAA,EAAYC,QAAAA,IAAAA,IAAAA,EAA+B,MAF3CxM,KAAAyM,UAA2B,KAG1BzM,KAAKwM,WAAaA,EAClBxM,KAAK0M,UAAY,EAPnB,IAAA3C,EAAAwC,EAAAtL,UAAA,OAAA8I,EASC4C,UAAA,SAAUC,GACT,YADSA,IAAAA,IAAAA,GAAgB,GAClBD,EAAU9J,MAAM7C,KAAM,CAACA,KAAM4M,KAVtC7C,EAYC1C,UAAA,WACC,MAAA,IAbFkF,EAAA,GAiBaM,EAAb,WAAA,IAAAhC,EAAAgC,EAAA5L,UA+CC,SAAA4L,EAAYC,GACXpM,OAAOC,eAAeX,KAAM,OAAQ,CACnC6D,MAAOiJ,EACPrM,UAAU,EACVF,YAAY,IAEbP,KAAK+M,OArDP,OAAAlC,EAECxC,KAAA,SAAK6B,GACJ,IAAMzD,EAAO/F,OAAO+F,KAAKzG,MACzB,OAAIyG,EAAKpG,OAAS6J,EACVzD,EAAKyD,QAEZ,GAPHW,EAUCmC,oBAAA,SAAoBpM,GACnB,IAAMiD,EAAQ7D,KAAKY,GACnB,OAAIiD,GAASA,EAAMN,QAAQ,cACnB,YAEA,IAfVsH,EAkBCoC,iBAAA,SAAiBrM,GAChB,OAAOZ,KAAKY,IAnBdiK,EAqBCqC,YAAA,SAAYtM,EAAaiD,EAAesJ,GACvCnN,KAAKY,GAAOiD,GAAuB,cAAdsJ,EAA4B,aAAe,IAChEnN,KAAKoN,cAvBPvC,EAyBCwC,eAAA,SAAezM,UACPZ,KAAKY,GACZZ,KAAKoN,cA3BPvC,EA6BSuC,WAAA,WH84BL,IAAIE,EAAQtN,KG74BdA,KAAK8M,KAAKS,WAAWC,MAAQ9M,OAAO+F,KAAKzG,MAAMyN,KAAI,SAAA7M,GAClD,OAAUA,EAAV,KAAkB0M,EAAK1M,GAAvB,OACE8M,KAAK,MAhCV7C,EAkCCkC,KAAA,WHi5BG,IACIY,EADAC,EAAS5N,KG94Bf,GAFaU,OAAO+F,KAAKzG,MACpB6N,SAAQ,SAAAjN,GAAG,cAAWgN,EAAKhN,MAChC,OAAA+M,EAAI3N,KAAK8M,KAAKS,iBAAd,EAAII,EAAsBH,MAAO,CAEnB,GAAAM,OAA2B9N,KAAK8M,KAAKS,WAAWC,MAAMO,SAD7C,2BAEdF,SAAQ,SAACG,GAChB,IAAMpN,EAAcoN,EAAM,GACpBnK,EAAgBmK,EAAM,GAC5BJ,EAAKhN,GAAOiD,OA3ChBgJ,EAAA,GAyDaoB,EAAb,SAAAnE,GA8DC,SAAAmE,EAAYnB,GH81BT,IAAIoB,EAOJ,OGp2BFA,EAAApE,EAAAzH,KAAArC,OAAAA,MACK8M,KAAOA,EACZoB,EAAKnB,OHk2BImB,EGn6BXhN,EAAA+M,EAAAnE,GAAA,IAAAqE,EAAAF,EAAAhN,UAAA,OAAAkN,EAEC9F,KAAA,SAAK6B,GACJ,OAAOlK,KAAKkK,IAHdiE,EAKCnE,SAAA,SAASlF,GACR,OAA+B,IAAxB9E,KAAKuD,QAAQuB,IANtBqJ,EAQCC,IAAA,WH26BG,IAFA,IAAIC,EAASrO,KAEJsO,EAAOrL,UAAU5C,OG36BtBkO,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACNA,EAAMV,SAAQ,SAAA/I,IACe,IAAxBuJ,EAAK9K,QAAQuB,IAChBuJ,EAAKzL,KAAKkC,MAGZ9E,KAAKoN,cAdPe,EAgBCK,OAAA,WHk7BG,IAFA,IAAIC,EAASzO,KAEJ0O,EAAQzL,UAAU5C,OGl7BpBkO,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACTA,EAAMV,SAAQ,SAAA/I,GACb,IAAMoF,EAAgBuE,EAAKlL,QAAQuB,IACpB,IAAXoF,GACHuE,EAAKnC,OAAOpC,EAAO,MAGrBlK,KAAKoN,cAvBPe,EAyBCQ,OAAA,SAAO7J,EAAc8J,GACpB,IAAM1E,EAAgBlK,KAAKuD,QAAQuB,GACnC,OAAc,IAAV8J,GACH5O,KAAKsM,OAAOpC,EAAO,GACnBlK,KAAKoN,cACE,IACa,IAAVwB,GACV5O,KAAK4C,KAAKkC,GACV9E,KAAKoN,cACE,IACc,IAAXlD,GACVlK,KAAKsM,OAAOpC,EAAO,GACnBlK,KAAKoN,cACE,IAEPpN,KAAK4C,KAAKkC,GACV9E,KAAKoN,cACE,IA1CVe,EA6CCvF,QAAA,SAAQiG,EAAkBC,GACzB,IAAM5E,EAAgBlK,KAAKuD,QAAQsL,IACpB,IAAX3E,GACHlK,KAAKsM,OAAOpC,EAAO,GAEpBlK,KAAK4C,KAAKkM,GACV9O,KAAKoN,cAnDPe,EAqDSf,WAAA,WACPpN,KAAK8M,KAAKS,WAAWwB,MAAQ/O,KAAK0N,KAAK,MAtDzCS,EAwDCpB,KAAA,WH87BG,IAAIiC,EG77BNhP,KAAKK,OAAS,GACd,OAAA2O,EAAIhP,KAAK8M,KAAKS,iBAAd,EAAIyB,EAAsBD,QACzB3K,MAAMnD,UAAU2B,KAAKC,MAAM7C,KAAMA,KAAK8M,KAAKS,WAAWwB,MAAME,MAAM,KAAKxB,KAAI,SAAA3I,GAAI,OAAIA,EAAKoK,YA3D3FjB,EAAA,CAAA/K,EAAiCkB,QAqEpB+K,EAAb,SAAAC,GA4HC,SAAAD,EAAY3C,EAAqC6C,EAAkB9B,GHs0BhE,IAAI+B,EA4BJ,YGl2BS9C,IAAAA,IAAAA,EAA+B,WAAwBe,IAAAA,IAAAA,EAAsD,OACxH+B,EAAAF,EAAA/M,KAAArC,KAAMwM,IAANxM,MA1HDuN,WAA+C,GA2H9C+B,EAAK5C,SAAW7D,EAAAA,WAAW0G,aAC3BD,EAAKD,SAAWA,EACZ9B,GAAoC,iBAAfA,IACxB+B,EAAK/B,WAAaA,GAEnB+B,EAAK9B,MAAQ,IAAIX,EAAJ/I,EAAAwL,IACbA,EAAKE,UAAY,IAAIvB,EAAJnK,EAAAwL,IACjBA,EAAKG,WAAa,GHy1BTH,EG99BXpO,EAAAiO,EAAAC,GAAA,IAAAM,EAAAP,EAAAlO,UAAA,OAAAyO,EA4ICC,OAAA,WH01BG,IAFA,IAAIC,EAAS5P,KAEJ6P,EAAQ5M,UAAU5C,OG11BpByP,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACTA,EAAoBA,EAAkBrC,KAAI,SAAAsC,GACzC,IAAIjD,EAOJ,MAN+B,iBAApBiD,EACVjD,EAAO,IAAIkD,EAAOJ,EAAMG,IAExBjD,EAAOiD,GACFvD,WAAaoD,EAEZ9C,KAER1I,MAAMnD,UAAU2B,KAAKC,MAAM7C,KAAKyP,WAAYK,IAvJ9CJ,EAoKCO,QAAA,WHm2BG,IAFA,IAAIC,EAASlQ,KAEJmQ,EAAQlN,UAAU5C,OGn2BnByP,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GACVA,EAAoBA,EAAkBrC,KAAI,SAAAsC,GACzC,IAAIjD,EAOJ,MAN+B,iBAApBiD,EACVjD,EAAO,IAAIkD,EAAOE,EAAMH,IAExBjD,EAAOiD,GACFvD,WAAa0D,EAEZpD,KAER1I,MAAMnD,UAAUmP,QAAQvN,MAAM7C,KAAKyP,WAAYK,IA/KjDJ,EA4LCW,gBAAA,WH42BG,IAFA,IAAIC,EAAStQ,KAEJuQ,EAAQtN,UAAU5C,OG52BXyP,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAClB,IAAMU,EAAkBV,EAAkBrC,KAAI,SAACsC,GAC9C,IAAIjD,EAOJ,MAN+B,iBAApBiD,EACVjD,EAAO,IAAIkD,EAAOM,EAAMP,IAExBjD,EAAOiD,GACFvD,WAAa8D,EAEZxD,KAER9M,KAAKyP,WAAae,GAvMpBd,EAyMCe,iBAAA,SAAiBC,GAChB,IACMF,EAAQC,EADEE,EAAWD,GACa1Q,KAAKyP,YAC7C,OAAQe,GAASA,EAAMnQ,OAAUmQ,EAAQ,MA5M3Cd,EA8MCkB,cAAA,SAAcF,GAGb,OADaE,EADGD,EAAWD,GACS1Q,KAAKyP,aAhN3CC,EAmNCmB,aAAA,SAAaC,GACZ,OAA0E,IAAnEpQ,OAAO+F,KAAKzG,KAAKuN,YAAYhK,QAAQuN,EAAUnI,gBApNxD+G,EAsNCqB,aAAA,SAAaD,GACZ,OAAO9Q,KAAKuN,WAAWuD,EAAUnI,gBAAkB,MAvNrD+G,EAyNCsB,aAAA,SAAaF,EAAmBjN,GAC/B7D,KAAKuN,WAAWuD,EAAUnI,eAAiB9E,EAAMzB,WAC/B,UAAd0O,EACH9Q,KAAKwN,MAAMT,OACa,UAAd+D,GACV9Q,KAAKwP,UAAUzC,QA9NlB2C,EAiOCuB,gBAAA,SAAgBH,UACR9Q,KAAKuN,WAAWuD,GACL,UAAdA,EACH9Q,KAAKwN,MAAMT,OACa,UAAd+D,GACV9Q,KAAKwP,UAAUzC,QAtOlB2C,EAyOCwB,aAAA,SAAaC,EAAkBC,GAC9B,IAAMlH,EAAQlK,KAAKyP,WAAWlM,QAAQ6N,GAMtC,OALe,IAAXlH,IACHlK,KAAKyP,WAAWvF,GAASiH,EACzBA,EAAS3E,WAAaxM,MAGhBoR,GAhPT1B,EAkPC2B,YAAA,SAAYC,GACX,KAAMA,aAAiB/E,GACtB,MAAM,IAAIgF,MAAJ,qGAEP,IAAMrH,EAAQlK,KAAKyP,WAAWlM,QAAQ+N,GACtC,IAAe,IAAXpH,EACH,MAAM,IAAIqH,MAAJ,0HAIP,OAFAvR,KAAKyP,WAAWnD,OAAOpC,EAAO,GAEvBoH,GA5PT5B,EA8PC8B,aAAA,SAAaC,EAAiBC,QAAAA,IAAAA,IAAAA,EAA+B,MAC5D,IAAMxH,EAAQwH,EACX1R,KAAKyP,WAAWlM,QAAQmO,GACxB1R,KAAKyP,WAAWpP,OAMnB,OALe,IAAX6J,IACHlK,KAAKyP,WAAWnD,OAAOpC,EAAO,EAAGuH,GACjCA,EAAQjF,WAAaxM,MAGfyR,GAvQT/B,EAyQC/C,UAAA,SAAUC,GACT,YADSA,IAAAA,IAAAA,GAAgB,GAClBD,EAAU9J,MAAM7C,KAAM,CAACA,KAAM4M,KA1QtC8C,EA4QCiC,YAAA,SAAYC,EAAmBC,KA5QhCnC,EA6QCoC,eAAA,SAAeF,EAAmBC,KA7QnCnC,EA8QCrI,UAAA,WACC,MAAA,IACCrH,KAAKqP,SACFrP,KAAK+R,sBAFT,IAEkC/R,KAAKyP,WACpChC,KAAI,SAAAuE,GAAC,OAAIA,EAAE3K,eACXqG,KAAK,IAJR,KAIgB1N,KAAKqP,SAJrB,KA/QFK,EAqRCqC,oBAAA,WHi5BG,IAAIE,EAAUjS,KGh5BZuN,EAAa,GACX9G,EAAO/F,OAAO+F,KAAKzG,KAAKuN,YAU9B,OATI9G,EAAKpG,SACRkN,EACC,IACA9G,EACEgH,KAAI,SAAAyE,GACJ,OAAUA,EAAV,KAAgBD,EAAK1E,WAAW2E,GAAhC,OAEAxE,KAAK,MAEFH,GAjST1M,EAAAsO,EAAA,CAAA,CAAAvO,IAAA,WAAA8C,IAAA,WAOE,IAECoJ,EAFGqF,EAAwB,GAC3B/R,EAAI,EAEJoQ,EAAQxQ,KAAKyP,WAEd,IADA3C,EAAO0D,EAAMpQ,KACN0M,IACNA,EAAO0D,EAAMpQ,MACJsM,WAAa7D,EAAAA,WAAW0G,cAChC4C,EAASvP,KAAKkK,GAGhB,OAAOqF,IAlBT,CAAAvR,IAAA,oBAAA8C,IAAA,WAqBE,IAECoJ,EAFG1M,EAAI,EACPgS,EAAQ,EAER5B,EAAQxQ,KAAKyP,WAEd,IADA3C,EAAO0D,EAAMpQ,KACN0M,GACFA,EAAKJ,WAAa7D,EAAAA,WAAW0G,cAChC6C,IAEDtF,EAAO0D,EAAMpQ,KAEd,OAAOgS,IAhCT,CAAAxR,IAAA,aAAA8C,IAAA,WAmCE,IAAIoJ,EAAO,KAIX,OAHI9M,KAAKyP,WAAWpP,SACnByM,EAAO9M,KAAKyP,WAAW,IAEjB3C,IAvCT,CAAAlM,IAAA,oBAAA8C,IAAA,WA0CE,IAAA,IAAA2O,EAAAC,EAAAjO,EAAiBrE,KAAKyP,cAAtB4C,EAAAC,KAAApN,MAAkC,CAAA,IAAzB4H,EAAyBuF,EAAAxO,MACjC,GAAI0O,EAAYzF,GACf,OAAOA,EAGT,OAAO,OA/CT,CAAAlM,IAAA,YAAA8C,IAAA,WAkDE,IAAIoJ,EAAO,KAIX,OAHI9M,KAAKyP,WAAWpP,SACnByM,EAAO9M,KAAKyP,WAAWzP,KAAKyP,WAAWpP,OAAS,IAE1CyM,IAtDT,CAAAlM,IAAA,mBAAA8C,IAAA,WA0DE,IADA,IAAM8M,EAAQxQ,KAAKyP,WACVrP,EAAIoQ,EAAMnQ,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC3C,IAAM0M,EAAO0D,EAAMpQ,GACnB,GAAImS,EAAYzF,GACf,OAAOA,EAGT,OAAO,OAhET,CAAAlM,IAAA,kBAAA8C,IAAA,WAmEE,IAAIoJ,EAAO,KACX,GAAI9M,KAAKwM,WAAY,CACpB,IAAMtC,EAAQlK,KAAKwM,WAAWiD,WAAWlM,QAAQvD,MAC7CkK,EAAQ,IACX4C,EAAO9M,KAAKwM,WAAWiD,WAAWvF,EAAQ,IAG5C,OAAO4C,IA1ET,CAAAlM,IAAA,cAAA8C,IAAA,WA6EE,IAAIoJ,EAAO,KACX,GAAI9M,KAAKwM,WAAY,CACpB,IAAMtC,EAAQlK,KAAKwM,WAAWiD,WAAWlM,QAAQvD,OAClC,IAAXkK,GAAgBA,EAAQlK,KAAKwM,WAAWiD,WAAWpP,OAAS,IAC/DyM,EAAO9M,KAAKwM,WAAWiD,WAAWvF,IAGpC,OAAO4C,IApFT,CAAAlM,IAAA,YAAA8C,IAAA,WAwFE,GAAI1D,KAAK0M,WAAa7D,EAAAA,WAAW2J,UAChC,OAAOxS,KAAKyM,YAzFf,CAAA7L,IAAA,YAAA8C,IAAA,WA8FE,IAAI+O,EAAO,KAIX,OAHIzS,KAAKwM,aACRiG,EAAOzS,KAAKwM,WAAWnF,aAEjBoL,IAlGT,CAAA7R,IAAA,YAAA+C,IAAA,SAoGe8I,GACbzM,KAAKyP,WAAa,CAAC,IAAIO,EAAOhQ,KAAMyM,KArGtC/I,IAAA,WAyGE,OAAO1D,KAAKyP,WAAWiD,QAAO,SAAC9N,GAAD,OAAgC+N,EAAS/N,IAAM2N,EAAY3N,MAAI6I,KAAI,SAAA7I,GAAC,OAAIA,EAAEgO,aAAWlF,KAAK,MAzG1H,CAAA9M,IAAA,cAAA+C,IAAA,SA2GiB8I,GACfzM,KAAK4S,UAAYC,OAAOpG,IA5G1B/I,IAAA,WA+GE,OAAO1D,KAAK4S,YA/Gd,CAAAhS,IAAA,YAAA8C,IAAA,WAkHE,OAAO1D,KAAKyP,WAAWhC,KAAI,SAAAuE,GAAC,OAAIA,EAAE3K,eAAaqG,KAAK,KAlHtD/J,IAAA,SAoHe8O,GHyuCT,IAAIK,EAAU9S,KGvuCZyP,EADMvI,EAAMuL,GACKhD,WAAWhC,KAAI,SAAA7I,GAErC,OADAA,EAAE4H,WAAasG,EACRlO,KAER5E,KAAKyP,WAAaA,MA1HpBN,EAAA,CAA+B5C,GAqSlByD,EAAb,SAAA+C,GAwBC,SAAA/C,EAAYxD,EAAqCC,GHijC9C,IAAIuG,EAUJ,YG3jCSxG,IAAAA,IAAAA,EAA+B,OAC1CwG,EAAAD,EAAA1Q,KAAArC,KAAMwM,IAANxM,MACK0M,SAAW7D,EAAAA,WAAW2J,UAC3BQ,EAAKvG,UAAYoG,OAAOpG,GHwjCfuG,EGnlCX,OAAA9R,EAAA8O,EAAA+C,GAAA/C,EAAA/O,UA8BCoG,UAAA,WACC,OAAOrH,KAAKyM,WA/Bd5L,EAAAmP,EAAA,CAAA,CAAApP,IAAA,YAAA8C,IAAA,WAGE,IAAI+O,EAAO,KAIX,OAHIzS,KAAKwM,aACRiG,EAAOzS,KAAKwM,WAAWnF,aAEjBoL,IAPT,CAAA7R,IAAA,YAAA8C,IAAA,WAUE,OAAO1D,KAAKyM,YAVd,CAAA7L,IAAA,YAAA+C,IAAA,SAYe8I,GACbzM,KAAKyM,UAAYoG,OAAOpG,IAb1B/I,IAAA,WAgBE,OAAO1D,KAAKyM,YAhBd,CAAA7L,IAAA,cAAA+C,IAAA,SAkBiB8I,GACfzM,KAAKyM,UAAYoG,OAAOpG,IAnB1B/I,IAAA,WAsBE,OAAO1D,KAAKyM,cAtBduD,EAAA,CAA4BzD,GAmCf0G,EAAb,SAAAC,GAwBC,SAAAD,EAAYzG,EAAqCC,GHykC9C,IAAI0G,EASJ,YGllCS3G,IAAAA,IAAAA,EAA+B,OAC1C2G,EAAAD,EAAA7Q,KAAArC,KAAMwM,IAANxM,MACK0M,SAAW7D,EAAAA,WAAWuK,mBAC3BD,EAAK1G,UAAYoG,OAAOpG,GH+kCf0G,EG1mCX,OAAAjS,EAAA+R,EAAAC,GAAAD,EAAAhS,UA6BCoG,UAAA,WACC,OAAOrH,KAAKyM,WA9Bd5L,EAAAoS,EAAA,CAAA,CAAArS,IAAA,YAAA8C,IAAA,WAGE,IAAI+O,EAAO,KAIX,OAHIzS,KAAKwM,aACRiG,EAAOzS,KAAKwM,WAAWnF,aAEjBoL,IAPT,CAAA7R,IAAA,YAAA8C,IAAA,WAUE,OAAO1D,KAAKyM,YAVd,CAAA7L,IAAA,YAAA+C,IAAA,SAYe8I,GACbzM,KAAKyM,UAAYoG,OAAOpG,IAb1B/I,IAAA,WAgBE,OAAO1D,KAAKyM,YAhBd,CAAA7L,IAAA,cAAA+C,IAAA,SAkBiB8I,GACfzM,KAAKyM,UAAYoG,OAAOpG,IAnB1B/I,IAAA,WAsBE,OAAO1D,KAAKyM,cAtBdwG,EAAA,CAA6B1G,GAkChB8G,EAAb,SAAAC,GAwBC,SAAAD,EAAY7G,EAAqCC,GHimC9C,IAAI8G,EASJ,YG1mCS/G,IAAAA,IAAAA,EAA+B,OAC1C+G,EAAAD,EAAAjR,KAAArC,KAAMwM,IAANxM,MACK0M,SAAW7D,EAAAA,WAAW2K,aAC3BD,EAAK9G,UAAYoG,OAAOpG,GHumCf8G,EGloCX,OAAArS,EAAAmS,EAAAC,GAAAD,EAAApS,UA6BCoG,UAAA,WACC,MAAA,UAAcrH,KAAKyM,UAAnB,UA9BF5L,EAAAwS,EAAA,CAAA,CAAAzS,IAAA,YAAA8C,IAAA,WAGE,IAAI+O,EAAO,KAIX,OAHIzS,KAAKwM,aACRiG,EAAOzS,KAAKwM,WAAWnF,aAEjBoL,IAPT,CAAA7R,IAAA,YAAA8C,IAAA,WAUE,OAAO1D,KAAKyM,YAVd,CAAA7L,IAAA,YAAA+C,IAAA,SAYe8I,GACbzM,KAAKyM,UAAYoG,OAAOpG,IAb1B/I,IAAA,WAgBE,OAAO1D,KAAKyM,YAhBd,CAAA7L,IAAA,cAAA+C,IAAA,SAkBiB8I,GACfzM,KAAKyM,UAAYoG,OAAOpG,IAnB1B/I,IAAA,WAsBE,OAAO1D,KAAKyM,cAtBd4G,EAAA,CAA+B9G,GAkClBkH,EAAb,SAAAC,GACC,SAAAD,EAAYjH,EAAqCC,GHgpC9C,IAAIkH,EASJ,YGzpCSnH,IAAAA,IAAAA,EAA+B,OAC1CmH,EAAAD,EAAArR,KAAArC,KAAMwM,IAANxM,MACK0M,SAAW7D,EAAAA,WAAW+K,4BAC3BD,EAAKlH,UAAYoG,OAAOpG,GHspCfkH,EG1pCX,OAAAzS,EAAAuS,EAAAC,GAAAD,EAAAxS,UAMCoG,UAAA,WACC,MAAA,IAAWrH,KAAKyM,UAAhB,KAPFgH,EAAA,CAA6ClH,GAWhCsH,EAAb,SAAAC,GACC,SAAAD,EAAYrH,EAAqCC,GH6pC9C,IAAIsH,EASJ,YGtqCSvH,IAAAA,IAAAA,EAA+B,OAC1CuH,EAAAD,EAAAzR,KAAArC,KAAMwM,IAANxM,MACK0M,SAAW7D,EAAAA,WAAWmL,mBAC3BD,EAAKtH,UAAYoG,OAAOpG,GHmqCfsH,EGvqCX,OAAA7S,EAAA2S,EAAAC,GAAAD,EAAA5S,UAMCoG,UAAA,WACC,MAAA,IAAWrH,KAAKyM,UAAhB,KAPFoH,EAAA,CAAoCtH,GAWvB0H,EAAb,SAAAC,GACC,SAAAD,IH0qCG,IAAIE,EAKJ,OG9qCFA,EAAAD,EAAA7R,KAAArC,KAAM,KAAM,uBAAZA,MACK0M,SAAW7D,EAAAA,WAAWuL,uBAC3BD,EAAK1E,WAAa,GH4qCT0E,EGhrCX,OAAAjT,EAAA+S,EAAAC,GAAAD,EAAA,CAAwC9E,GAqQ3BkF,EAAb,SAAAC,GAuFC,SAAAD,IH03BG,IAAIE,EAMJ,OG/3BFA,EAAAD,EAAAjS,KAAArC,KAAM,KAAM,cAAZA,MAvFO0L,UAAuBvB,EAAWqB,SAwFzC+I,EAAK7H,SAAW7D,EAAAA,WAAW2L,cAC3BD,EAAK9E,WAAa,GH63BT8E,EGv9BXrT,EAAAmT,EAAAC,GAAA,IAAAG,EAAAJ,EAAApT,UAAA,OAAAwT,EA4FCC,gBAAA,aA5FDD,EA8FCE,kBAAA,aA9FDF,EAgGCG,mBAAA,aAhGDH,EAkGCI,cAAA,SAAcpI,GACb,OAAO,IAAI4G,EAAU,KAAM5G,IAnG7BgI,EAsGCK,uBAAA,WACC,OAAO,IAAIb,GAvGbQ,EA0GCM,cAAA,SAAc1F,GACb,OAAO,IAAIF,EAAU,KAAME,IA3G7BoF,EA8GCO,gBAAA,SAAgB3F,GACf,OAAO,IAAIF,EAAU,KAAME,IA/G7BoF,EAkHCQ,YAAA,aAlHDR,EAoHCS,mBAAA,aApHDT,EAsHCU,4BAAA,SAA4B1I,GAC3B,OAAO,IAAIgH,EAAwB,KAAMhH,IAvH3CgI,EA0HCW,YAAA,aA1HDX,EA4HCY,eAAA,SAAe5I,GACd,OAAO,IAAIuD,EAAO,KAAMvD,IA7H1BgI,EAgICa,gBAAA,aAhIDb,EAkICc,iBAAA,aAlIDd,EAoICpN,UAAA,WACC,MAAA,GAAUrH,KAAKyP,WAAWhC,KAAI,SAAAuE,GAAC,OAAIA,EAAE3K,eAAaqG,KAAK,KArIzD7M,EAAAwT,EAAA,CAAA,CAAAzT,IAAA,WAAA8C,IAAA,WAGE,OAAO1D,KAAK0L,YAHd,CAAA9K,IAAA,MAAA8C,IAAA,WAME,OAAO1D,KAAK0L,UAAUV,OANxB,CAAApK,IAAA,SAAA8C,IAAA,WASE,OAAO,IATT,CAAA9C,IAAA,kBAAA8C,IAAA,WAYE,MAAO,cAZT,CAAA9C,IAAA,UAAA8C,IAAA,WAeE,OAAO1D,KAAKyP,WAAW+F,MAAK,SAAAxD,GAAC,OAAIyD,EAAiBzD,QAfpD,CAAApR,IAAA,OAAA8C,IAAA,WAmBE,IAAIgS,EAAyB1V,KAAK2V,gBAAgBlG,WAAW+F,MAAK,SAAAxD,GAAC,OAAIO,EAAYP,IAAqB,SAAfA,EAAE3C,YAK3F,OAJKqG,IACJA,EAAO,IAAIvG,EAAUnP,KAAK2V,gBAAiB,QAC3C3V,KAAK2V,gBAAgBhG,OAAO+F,IAEtBA,IAxBT,CAAA9U,IAAA,OAAA8C,IAAA,WA2BE,IAAIkS,EAAyB5V,KAAKyP,WAAW+F,MAAK,SAAAxD,GAAC,OAAIO,EAAYP,IAAqB,SAAfA,EAAE3C,YAK3E,OAJKuG,IACJA,EAAO,IAAIzG,EAAUnP,KAAK2V,gBAAiB,QAC3C3V,KAAK2V,gBAAgBhG,OAAOiG,IAEtBA,IAhCT,CAAAhV,IAAA,QAAA8C,IAAA,WAmCE,IAAM0I,EAAQpM,KAAK0V,KAAKjG,WAAW+F,MAAK,SAAAxD,GAAC,OAAIO,EAAYP,IAAqB,UAAfA,EAAE3C,YACjE,OAAIjD,EACIA,EAAMwG,UAEN,MAvCVjP,IAAA,SA0CW8I,GACT,IAAIL,EAA0BpM,KAAK0V,KAAKjG,WAAW+F,MAAK,SAAAxD,GAAC,OAAIO,EAAYP,IAAqB,UAAfA,EAAE3C,YAC5EjD,IACJA,EAAQ,IAAI+C,EAAUnP,KAAK0V,KAAM,UAElCtJ,EAAMwG,UAAYnG,IA/CpB,CAAA7L,IAAA,kBAAA8C,IAAA,WAkDE,IAAImS,EAA4B7V,KAAK8V,kBAIrC,OAHKD,IACJA,EAAU,IAAI1G,EAAUnP,KAAM,SAExB6V,MAtDTxB,EAAA,CAAgClF,GHunChC,SG9+BgBoD,EAAYP,GAC3B,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAW0G,aHg/BlC,SG7+BgBoD,EAASX,GACxB,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAW2J,UH++BlC,SG5+BgBuD,EAAY/D,GAC3B,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAW2K,aH8+BlC,SG3+BgBwC,EAAahE,GAC5B,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAW2L,cHg/BlC,SGz+BgBiB,EAAiBzD,GAChC,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAWmL,mBH8+BlC,SGv+BgB9M,EAAMuL,GACrB,IAEC3F,EAFKmJ,EAAM,IAAI5B,EACZ7H,EAAwByJ,EAEtBC,EAAS,IAAIC,EAAAA,OAClB,CACCC,UAAW,SAAC/G,EAAU9B,GAErBT,EAAO,IAAIqC,EAAU3C,EAAY6C,EAAU9B,GAC3Cf,EAAWiD,WAAW7M,KAAKkK,GAC3BN,EAAaM,GAMduJ,WAAY,SAAChH,GACR7C,EAAWA,aACdA,EAAaA,EAAWA,aAG1B8J,OAAQ,SAAC7J,GAGR,IAAM8J,EAAW,IAAIvG,EAAOxD,EAAYC,GACxCD,EAAWiD,WAAW7M,KAAK2T,IAG5BC,wBAAyB,SAACnH,EAAU5C,GAGlCK,EADgB,aAAbuC,EACI,IAAIwE,EAAerH,EAAYC,GAE/B,IAAIgH,EAAwBjH,EAAYC,GAEhDD,EAAWiD,WAAW7M,KAAKkK,IAE5B2J,UAAW,SAAAhK,GAEVK,EAAO,IAAIuG,EAAU7G,EAAYC,GACjCD,EAAWiD,WAAW7M,KAAKkK,IAG5B4J,aAAc,cA4Bf,CACCC,gBAAgB,EAChBC,eAAe,IAKjB,OAFAV,EAAOW,MAAMpE,GACbyD,EAAOY,MACAb,EH48BR,SGz8BgBtF,EAAWD,GAC1B,IAAMqG,EAAqB,GAyC3B,OAxCArG,EACExB,OACAD,MAAM,KACNpB,SAAQ,SAACmE,GACTA,EAAE9C,OACAD,MAAM,KACNpB,SAAQ,SAACmE,EAAG5R,GAOZ,IAJA,IAIA4W,EAFMC,EAAY,GAElBC,EAAA7S,EADgB2N,EAAEjE,SAHJ,mKAIdiJ,EAAAE,KAAAhS,MAA6B,CAAA,IAAlB8I,EAAkBgJ,EAAAnT,MACxBmK,EAAM,GACTiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAaqO,GAAIC,QAAQ,IAC1DpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAapG,MAAO0U,QAAQ,IAC7DpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAauO,UAAWD,QAAQ,IACjEpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAawO,QAASF,QAAQ,IAC/DpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAaqO,GAAIC,QAAQ,IAC1DpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAapG,MAAO0U,QAAQ,IAC7DpJ,EAAM,GAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAauO,UAAWD,QAAQ,IACjEpJ,EAAM,IAChBiJ,EAAUrU,KAAK,CAAE8N,SAAU1C,EAAM,GAAI9H,KAAM4C,EAAAA,aAAawO,QAASF,QAAQ,IAI3E,IAAM1G,EACLtQ,EAAI,EACD,CAAEsQ,SAAUsB,EAAGiF,UAAAA,EAAWM,OAAO,GACjC,CAAE7G,SAAUsB,EAAGiF,UAAAA,EAAWM,OAAO,GACrCR,EAAQnU,KAAKP,KAAK0U,EAASrG,SAGxBqG,EHg/BR,SG7+BgBS,EAAclG,EAAkBZ,GAC/C,OAAQA,EAASxK,MAChB,KAAK4C,EAAAA,aAAaqO,GACjB,OAA8B,KAAtBzG,EAASA,UAAmBY,EAAM/D,WAAWkK,KAAO/G,EAASA,YAAcA,EAAS0G,OAC7F,KAAKtO,EAAAA,aAAapG,MACjB,OAAwD,IAAhD4O,EAAM9B,UAAUjM,QAAQmN,EAASA,YAAsBA,EAAS0G,OACzE,KAAKtO,EAAAA,aAAauO,UACjB,OAAsE,IAA9D3W,OAAO+F,KAAK6K,EAAM/D,YAAYhK,QAAQmN,EAASA,YAAsBA,EAAS0G,OACvF,KAAKtO,EAAAA,aAAawO,QACjB,OAAQhG,EAAMjC,WAAaqB,EAASA,WAAcA,EAAS0G,OAC5D,QACC,OAAO,GHo/BV,SGh/BgBM,EAAepG,EAAkB2F,GAChD,OAAOA,EAAUU,QAAO,SAAU9V,EAAY6O,GAC7C,OAAO7O,GAAK2V,EAAclG,EAAOZ,MAC/B,GHm/BJ,SGh/BgBD,EAAiBsG,EAAoBtH,EAAsBmI,EAA8BpH,GACxG,QAD0EoH,IAAAA,IAAAA,EAAwB,WAAMpH,IAAAA,IAAAA,EAAqB,IACzHoH,GAASb,EAAQ1W,OAAQ,CAC5BuX,EAAQA,GAASb,EAAQc,QACzB,IAAA,IAAAC,EAAAC,EAAA1T,EAAkBoL,KAAlBqI,EAAAC,KAAA7S,MAA8B,CAAA,IAArBoM,EAAqBwG,EAAAjU,MAC7B,GAAIyN,aAAiBnC,EACpB,GAAIuI,EAAepG,EAAOsG,EAAMX,WAE/B,GAAIF,EAAQ1W,OAAQ,CACnB,IAAM2X,EAA8BvH,EAAiBsG,EAASzF,EAAM7B,YAChEuI,GACH5T,MAAMnD,UAAU2B,KAAKC,MAAM2N,EAAOwH,QAGnCxH,EAAM5N,KAAK0O,QAEN,IAAKsG,EAAML,MAAO,CACxB,IAAMS,EAA8BvH,EAAiBsG,EAASzF,EAAM7B,WAAYmI,GAC5EI,GACH5T,MAAMnD,UAAU2B,KAAKC,MAAM2N,EAAOwH,KAMvC,OAAOxH,EAAMnQ,OAASmQ,EAAQ,KHigC/B,SG9/BgBI,EAAcmG,EAAoBtH,EAAsBmI,QAAAA,IAAAA,IAAAA,EAAwB,MAC/F,IAAI9K,EAAO,KACX,GAAI8K,GAASb,EAAQ1W,OAAQ,CAC5BuX,EAAQA,GAASb,EAAQc,QACzB,IAAA,IAAAI,EAAAC,EAAA7T,EAAkBoL,KAAlBwI,EAAAC,KAAAhT,MAA8B,CAAA,IAArBoM,EAAqB2G,EAAApU,MAC7B,GAAIyN,aAAiBnC,EAAW,CAC/B,GAAIuI,EAAepG,EAAOsG,EAAMX,WAE/B,OAAIF,EAAQ1W,OACJuQ,EAAcmG,EAASzF,EAAM7B,YAE7B6B,EAEGsG,EAAML,QACjBzK,EAAO8D,EAAcmG,EAASzF,EAAM7B,WAAYmI,MAKpD,OAAO9K,EH0gCR,SGvgCgBH,EAAUwL,EAAgBvL,EAAuBJ,GAChE,IAAIM,EACJ,QAFyCF,IAAAA,IAAAA,GAAgB,QAAOJ,IAAAA,IAAAA,EAA+B,MAE3F+F,EAAY4F,GAAS,CACxB,IAAMC,EAAyB,IAAIjJ,EAClC3C,EACA2L,EAAO9I,SACP3O,OAAOoK,OAAO,GAAIqN,EAAO5K,aAEtBX,IACHwL,EAAY3I,WAAa0I,EAAO1I,WAAWhC,KAAI,SAAAuE,GAAC,OAAIrF,EAAU9J,MAAMmP,EAAG,CAACA,EAAGpF,EAAMwL,QAElFtL,EAAOsL,OACD,GAAyBD,EA3NvBzL,WAAa7D,EAAAA,WAAWuL,uBA2NQ,CACxC,IAAMiE,EAA2C,IAAIpE,EACjDrH,IACHyL,EAAqB5I,WAAa0I,EAAO1I,WAAWhC,KAAI,SAAAuE,GAAC,OAAIrF,EAAU9J,MAAMmP,EAAG,CAACA,EAAGpF,EAAMyL,QAE3FvL,EAAOuL,OACD,GAAI1F,EAASwF,GACnBrL,EAAO,IAAIkD,EAAOxD,EAAY2L,EAAO1L,gBAC/B,GAAIsJ,EAAYoC,GACtBrL,EAAO,IAAIuG,EAAU7G,EAAY2L,EAAO1L,eAClC,CAAA,IAAIuJ,EAAamC,GAOvB,MAAM,IAAI5G,MAAM,qBANhB,IAAMoE,EAA8B,IAAItB,EACpCzH,IACH+I,EAAgBlG,WAAa0I,EAAO1I,WAAWhC,KAAI,SAAAuE,GAAC,OAAIrF,EAAU9J,MAAMmP,EAAG,CAACA,EAAGpF,EAAM+I,QAEtF7I,EAAO6I,EAIR,OAAO7I,EGxuCR,IAAMvH,EAAKjG,QAAQ,MAwCNgZ,GAIZ,SAAY7S,GACPA,GACH/E,OAAOoK,OAAO9K,KAAMyF,GAErBzF,KAAKuY,KAAO7X,OAAOoK,OAAO,CACzBK,KAAM,wBACNE,KAAM,IACNmN,QAAS,OACTC,SAAQ,eACRC,UAAWtT,EAAUmB,OACrBoS,MAAO,WACPC,KAAM,mBACJ5Y,KAAKuY,MAAQ,KAILM,GAUZ,SAAYpT,GAFZzF,KAAA2F,OAAiB,KACjB3F,KAAA4F,aAAiCP,EAAAA,iBAAiBQ,OAE7CJ,GACH/E,OAAOoK,OAAO9K,KAAMyF,IAKVqT,GAMZ,SAAYrT,GACPA,GACH/E,OAAOoK,OAAO9K,KAAMyF,IAKFsT,GAAAA,SAAAA,GN0sEnB,SAASA,IACP,OAAOC,EAAUnW,MAAM7C,KAAMiD,YAAcjD,KA+G7C,OAlHAkB,EAAe6X,EAAQC,GAUvBD,EM5sEME,UAAP,SAAiBC,EAA+BC,GAC/C,IAAKC,EAAAA,iBACJ,MAAM,IAAIC,EAAAA,YAAY,mDAEvB,IAAKH,EACJ,MAAM,IAAIG,EAAAA,YAAY,yBAEvB,IAAKH,EAAcI,KAClB,MAAM,IAAID,EAAAA,YAAY,8BAEvB,IAAKH,EAAcI,KAAKL,UACvB,MAAM,IAAII,EAAAA,YAAY,qBAEvB,IAAKH,EAAcI,KAAKL,UAAUK,KACjC,MAAM,IAAID,EAAAA,YAAY,0BAEvB,IAAKH,EAAcI,KAAKL,UAAUK,KAAK5I,SACtC,MAAM,IAAI2I,EAAAA,YAAY,mCAEvB,KAAI,MAACF,OAAD,EAACA,EAASV,UACb,MAAM,IAAIY,EAAAA,YAAY,oBAgBvB,IAAME,EAAWvZ,KAAKwZ,eAAeL,GAC/BG,EAAOtZ,KAAKyZ,YAAYP,GAC9B,GAAII,EAAKxM,gBAAgBqC,EAAW,CAAA,IAAAuK,EAC7B5M,EAAkBwM,EAAKxM,KACvB6M,EAAgBL,EAAKK,cACrBC,EAAkB,CACvBlJ,SAAUwI,EAAcI,KAAKL,UAAUK,KAAK5I,SAC5CmJ,UAAWF,GAENG,EAAa,IAAI3K,EAAU,KAAM,UACjC4K,EAAa,IAAI/J,EAAO,KAAX,yBAA0C/I,KAAKsB,UAAUqR,GAAzD,KACnBE,EAAWnK,OAAOoK,GAClB,OAAAL,EAAA5M,EAAKN,aAALkN,EAAiBlI,aAAasI,EAAYhN,GAE3C,IAAMzN,EAAS,IAAI6Z,EACnB7Z,EAAOia,KAAOA,EACdA,EAAKU,QAAQnM,SAAQ,SAACqL,GACrBA,EAAcjY,UAAUK,YAAYe,KAAKhD,MAE1C,IAAM4a,EAAY5a,EAAO6a,QAAQZ,EAAKxM,KAAM,CAAEyM,SAAAA,IAI9C,OAHAla,EAAO4a,UAAYA,EACNA,EAAU,GAClBE,cACE9a,GN6tEP0Z,EM1tEM1R,UAAP,WAEC,GAAIrH,KAAKuZ,oBAAoBlF,EAG5B,OAFmBrU,KAAKuZ,SAASlS,YAIjC,MAAM,IAAIgS,EAAAA,YAAY,8CN8tEvBN,EMxtEgBS,eAAP,SAAsBL,GAC/B,IAAMpO,EAAcoO,EAAQpO,IACtBS,EAAsBrB,EAAWqB,SACvCA,EAASV,OAAOC,GAChBqP,OAAO5O,SAAWA,EAClB,IAAM6O,EAAoB1O,EAAU0O,QACpCA,EAAQhO,aAAa,KAAM,GAAIb,EAAS8O,QACxCF,OAAOC,QAAUA,EACjB,IAAME,EAAoCpB,EAAQV,SAC5Cc,EAA4D,iBAAnBgB,EAA8BrT,EAAMqT,GAAkBA,EAIrG,OAHAva,KAAKuZ,SAAWA,EAChBa,OAAOb,SAAWvZ,KAAKuZ,SACvBc,EAAQhO,aAAa,KAAMkN,EAASnN,OAAS,GAAIZ,EAAS8O,QACnDta,KAAKuZ,UN4tELR,EM1zEYA,CAAeyB,EAAAA,UN+zEpC,SMztEgBC,GAAQC,EAA0BC,GACjD,OAAO1S,EAAAA,WAAW5G,QAAO,SAAU6G,GAClC,IAAMiR,EAAyB,IAAIb,GAAcoC,GAC7CvB,EAAQZ,KAAKG,YAChBzS,EAAaG,KAAO+S,EAAQZ,KAAKG,WAE9BS,EAAQZ,KAAKI,QAChB1S,EAAayC,OAASyQ,EAAQZ,KAAKI,OAEpC,IAAMiC,EAAS3U,EAAavC,IAAI,SAAUyV,EAAQpO,KAElD,GADAzB,QAAQC,IAAI,2BAA4B,QAAS4P,EAAQpO,MAAO6P,GAC5DA,EAEH,OADA1S,EAAS/C,KAAKyV,GACP1S,EAASC,WAEjB0S,GAAU1B,GAAS2B,KAClBC,EAAAA,WAAU,SAACtC,GAGV,OADAU,EAAQV,SAAWA,EACZkC,EAAexB,OAEtB6B,WACD,SAACC,GACAhV,EAAatC,IAAI,SAAUwV,EAAQpO,IAAKkQ,EAAUA,EAAStV,OAAQsV,EAASrV,cAC5EsC,EAAS/C,KAAK8V,GACd/S,EAASC,cAEV,SAACX,GACAU,EAASV,MAAMA,SN8tEnB,SMxtEgBqT,GAAU1B,GACzB,OAAOlR,EAAAA,WAAW5G,QAAO,SAAU6G,GAClC,IAAMgT,EAAM/B,EAAQZ,KAAKE,SACzB,GAAIyC,EAAK,CACR,IAAMzC,EAAWxS,EAAavC,IAAI,WAAYwX,GAC9C5R,QAAQC,IAAI,6BAA8B,OAAQ2R,IAAOzC,GACrDA,IACHvQ,EAAS/C,KAAKsT,GACdvQ,EAASC,YAEV5C,EAAGsB,SAASqU,EAAK/B,EAAQZ,KAAKC,SAAS,SAAUhR,EAA8BiR,GAC1EjR,EACHU,EAASV,MAAMA,IAEfvB,EAAatC,IAAI,WAAYuX,EAAKzC,EAAU,MAC5CvQ,EAAS/C,KAAKsT,GACdvQ,EAASC,oBAIXD,EAASV,MAAM,IAAI+J,MAAM,qCN+tE5B,SM1tEgB4J,GAAWjC,EAA8BC,GAExD,OAAOlR,EAAAA,WAAW5G,QAAO,SAAU6G,GAClC,IAAKiR,EAAQV,SACZ,OAAOvQ,EAASV,MAAM,IAAI+J,MAAM,kCAEjC,IAECwH,GAAOE,UAAUC,EAAeC,GAEhCjR,EAAS/C,KAAK,IAAI0T,GAAenY,OAAOoK,OAAO,CAAEzD,UAD/B,WAAA,OAAM0R,GAAO1R,cAC+B8R,KAC9DjR,EAASC,WACR,MAAOX,GACRU,EAASV,MAAM,IAAIsR,GAAoBpY,OAAOoK,OAAO,CAAEtD,MAAAA,GAAS2R,SA7E3DJ,GAAAA,QAAU0B,GACV1B,GAAAA,UAAY8B,GACZ9B,GAAAA,WAAaoC,GClMrB,IAAMC,GAA8B,GAG9BC,GAAuB,GAoBRC,GAAAA,SAAAA,GPm/EnB,SAASA,IACP,OAAOC,EAAQ1Y,MAAM7C,KAAMiD,YAAcjD,KAG3C,OANAkB,EAAeoa,EAAcC,GAMtBD,EOv/EYA,CAAqBE,EAAAA,QAElCF,GAAAA,KAAoB,CAC1BG,aAAY,GAAA3N,OACRsN,GACAC,IAEJjc,QAAO,GAAA0O,OACHsN,GACAC,KAPEjc,EAAAoG,UAAAA,EAAApG,EAAA6G,aAAAA,EAAA7G,EAAA2J,YAAAA,EAAA3J,EAAA6T,QAAAA,EAAA7T,EAAAiU,UAAAA,EAAAjU,EAAAyK,gBAAAA,EAAAzK,EAAAiV,WAAAA,EAAAjV,EAAAyU,eAAAA,EAAAzU,EAAA+P,UAAAA,EAAA/P,EAAAuM,UAAAA,EAAAvM,EAAA+K,WAAAA,EAAA/K,EAAAmN,OAAAA,EAAAnN,EAAAqU,wBAAAA,EAAArU,EAAAsc,QJeP,SAAYjW,GAHZzF,KAAA0Q,SAAmB,GACnB1Q,KAAAiX,UAA0B,GAC1BjX,KAAAuX,OAAiB,EAEZ9R,GACH/E,OAAOoK,OAAO9K,KAAMyF,IIjBfrG,EAAAuc,WJIP,SAAYlW,GAHZzF,KAAA0Q,SAAmB,GACnB1Q,KAAAkG,KAAqB4C,EAAAA,aAAa8S,KAClC5b,KAAAoX,QAAkB,EAEb3R,GACH/E,OAAOoK,OAAO9K,KAAMyF,IINfrG,EAAA4Q,OAAAA,EAAA5Q,EAAA2Z,OAAAA,GAAA3Z,EAAAkc,aAAAA,GAAAlc,EAAAkZ,cAAAA,GAAAlZ,EAAAyZ,eAAAA,GAAAzZ,EAAA+b,WAAAA,GAAA/b,EAAAuN,UAAAkP,EAAAzc,EAAAuR,WAAAA,EAAAvR,EAAA2W,YAAAA,EAAA3W,EAAA4W,aAAAA,EAAA5W,EAAAqW,iBAAAA,EAAArW,EAAAmT,YAAAA,EAAAnT,EAAA0c,0BPq9DR,SGx+B0C9J,GACzC,OAAOA,EAAEtF,WAAa7D,EAAAA,WAAW+K,6BI9+B1BxU,EAAAuT,SAAAA,EAAAvT,EAAAoY,cAAAA,EAAApY,EAAAsY,eAAAA,EAAAtY,EAAA8H,MAAAA,EAAA9H,EAAAwR,cAAAmL,EAAA3c,EAAAqR,iBAAAuL,EAAA5c,EAAAqb,QAAAA,GAAArb,EAAAyb,UAAAA,GAAAna,OAAAC,eAAAvB,EAAA,aAAA,CAAAyE,OAAA","file":"dist\\umd\\rxcomp-server.min.js","sourcesContent":[null,"import { Observable, Observer } from \"rxjs\";\r\n\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nexport enum CacheMode {\r\n\tMemory = 'memory',\r\n\tFile = 'file',\r\n}\r\n\r\nexport enum CacheControlType {\r\n\tPublic = 'public', // The response may be stored by any cache, even if the response is normally non-cacheable.\r\n\tPrivate = 'private', // The response may be stored only by a browser's cache, even if the response is normally non-cacheable. If you mean to not store the response in any cache, use no-store instead. This directive is not effective in preventing caches from storing your response.\r\n\tNoCache = 'no-cache', // The response may be stored by any cache, even if the response is normally non-cacheable. However, the stored response MUST always go through validation with the origin server first before using it, therefore, you cannot use no-cache in-conjunction with immutable. If you mean to not store the response in any cache, use no-store instead. This directive is not effective in preventing caches from storing your response.\r\n\tNoStore = 'no-store', // The response may not be stored in any cache. Although other directives may be set, this alone is the only directive you need in preventing cached responses on modern browsers. max-age=0 is already implied. Setting must-revalidate does not make sense because in order to go through revalidation you need the response to be stored in a cache, which no-store prevents.\r\n}\r\n\r\nexport interface ICacheItem {\r\n\tvalue: any;\r\n\tdate?: Date,\r\n\tmaxAge?: number;\r\n\tcacheControl?: CacheControlType;\r\n}\r\n\r\nexport class CacheItem {\r\n\tvalue: any;\r\n\tdate: Date = new Date();\r\n\tmaxAge: number = 0;\r\n\tcacheControl: CacheControlType = CacheControlType.Public;\r\n\tget expired(): boolean {\r\n\t\treturn this.cacheControl === CacheControlType.NoStore\r\n\t\t\t|| this.maxAge === 0\r\n\t\t\t|| (this.date.getTime() + (this.maxAge * 1000) < Date.now());\r\n\t}\r\n\tconstructor(options?: ICacheItem) {\r\n\t\tif (options) {\r\n\t\t\tthis.value = options.value;\r\n\t\t\tthis.date = options.date ? new Date(options.date) : this.date;\r\n\t\t\tthis.maxAge = options.maxAge || this.maxAge;\r\n\t\t\tthis.cacheControl = options.cacheControl || this.cacheControl;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class CacheService {\r\n\tprivate static cache_: { [key: string]: string } = {};\r\n\tstatic mode: CacheMode = CacheMode.Memory;\r\n\tstatic folder: string;\r\n\r\n\tstatic has(type: string = 'cache', filename: string): boolean {\r\n\t\tlet has: boolean = false;\r\n\t\tswitch (this.mode) {\r\n\t\t\tcase CacheMode.File:\r\n\t\t\t\thas = this.hasFile(type, filename);\r\n\t\t\t\tbreak;\r\n\t\t\tcase CacheMode.Memory:\r\n\t\t\tdefault:\r\n\t\t\t\tconst key: string = this.getPath(type, filename);\r\n\t\t\t\thas = Object.keys(this.cache_).indexOf(key) !== -1;\r\n\t\t}\r\n\t\treturn has;\r\n\t}\r\n\r\n\tstatic get(type: string = 'cache', filename: string): any {\r\n\t\tlet value = null, cacheItem: CacheItem | null;\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\tswitch (this.mode) {\r\n\t\t\tcase CacheMode.File:\r\n\t\t\t\tif (this.hasFile(type, filename)) {\r\n\t\t\t\t\tcacheItem = this.readFile(type, filename);\r\n\t\t\t\t\tif (cacheItem) {\r\n\t\t\t\t\t\tif (cacheItem.expired) {\r\n\t\t\t\t\t\t\tthis.unlinkFile(type, filename);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvalue = cacheItem?.value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase CacheMode.Memory:\r\n\t\t\tdefault:\r\n\t\t\t\tif (Object.keys(this.cache_).indexOf(key) !== -1) {\r\n\t\t\t\t\tconst data: string | undefined = this.cache_[key];\r\n\t\t\t\t\tif (data) {\r\n\t\t\t\t\t\tcacheItem = new CacheItem(JSON.parse(data));\r\n\t\t\t\t\t\tif (cacheItem) {\r\n\t\t\t\t\t\t\tif (cacheItem.expired) {\r\n\t\t\t\t\t\t\t\tdelete this.cache_[key];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tvalue = cacheItem.value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic set(type: string = 'cache', filename: string, value: any, maxAge: number = 0, cacheControl: CacheControlType = CacheControlType.Public): any {\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\tconst cacheItem: CacheItem = new CacheItem({ value, maxAge, cacheControl });\r\n\t\tswitch (this.mode) {\r\n\t\t\tcase CacheMode.File:\r\n\t\t\t\tthis.writeFile(type, filename, cacheItem);\r\n\t\t\t\tbreak;\r\n\t\t\tcase CacheMode.Memory:\r\n\t\t\tdefault:\r\n\t\t\t\tconst serialized: string = this.serialize(cacheItem);\r\n\t\t\t\tthis.cache_[key] = serialized;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tstatic delete(type: string = 'cache', filename: string): void {\r\n\t\tswitch (this.mode) {\r\n\t\t\tcase CacheMode.File:\r\n\t\t\t\tthis.unlinkFile(type, filename);\r\n\t\t\t\tbreak;\r\n\t\t\tcase CacheMode.Memory:\r\n\t\t\tdefault:\r\n\t\t\t\tconst key: string = this.getPath(type, filename);\r\n\t\t\t\tif (Object.keys(this.cache_).indexOf(key) !== -1) {\r\n\t\t\t\t\tdelete this.cache_[key];\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static hasFile(type: string = 'cache', filename: string): boolean {\r\n\t\tlet has: boolean = false;\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\ttry {\r\n\t\t\tif (fs.existsSync(key)) {\r\n\t\t\t\thas = true;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn has;\r\n\t}\r\n\r\n\tprotected static readFile(type: string = 'cache', filename: string): CacheItem | null {\r\n\t\tlet cacheItem: CacheItem | null = null;\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\ttry {\r\n\t\t\tconst dirname: string = path.dirname(key);\r\n\t\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\t\treturn cacheItem;\r\n\t\t\t}\r\n\t\t\tconst json: string = fs.readFileSync(key, 'utf8');\r\n\t\t\tcacheItem = new CacheItem(JSON.parse(json));\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn cacheItem;\r\n\t}\r\n\r\n\tprotected static writeFile(type: string = 'cache', filename: string, cacheItem: CacheItem): CacheItem {\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\ttry {\r\n\t\t\tconst json: string = this.serialize(cacheItem);\r\n\t\t\tconst dirname: string = path.dirname(key);\r\n\t\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\t\tfs.mkdirSync(dirname);\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(key, json, 'utf8');\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t\treturn cacheItem;\r\n\t}\r\n\r\n\tprotected static unlinkFile(type: string = 'cache', filename: string): void {\r\n\t\tconst key: string = this.getPath(type, filename);\r\n\t\ttry {\r\n\t\t\tif (fs.existsSync(key)) {\r\n\t\t\t\tfs.unlinkSync(key);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static readFile$(type: string = 'cache', filename: string): Observable<CacheItem> {\r\n\t\tconst service = this;\r\n\t\treturn Observable.create(function (observer: Observer<CacheItem>) {\r\n\t\t\tconst key: string = service.getPath(type, filename);\r\n\t\t\tconst dirname: string = path.dirname(key);\r\n\t\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\t\tobserver.error(`ENOENT: no such file or directory`);\r\n\t\t\t}\r\n\t\t\tfs.readFile(key, 'utf8', function (error: NodeJS.ErrnoException, json: string) {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tobserver.error(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst cacheItem: CacheItem = new CacheItem(JSON.parse(json));\r\n\t\t\t\t\tobserver.next(cacheItem);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static writeFile$(type: string = 'cache', filename: string, cacheItem: CacheItem): Observable<CacheItem> {\r\n\t\tconst service = this;\r\n\t\treturn Observable.create(function (observer: Observer<CacheItem>) {\r\n\t\t\tconst key: string = service.getPath(type, filename);\r\n\t\t\tconst json: string = service.serialize(cacheItem);\r\n\t\t\tconst dirname: string = path.dirname(key);\r\n\t\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\t\tfs.mkdirSync(dirname);\r\n\t\t\t}\r\n\t\t\tfs.writeFile(key, json, 'utf8', function (error: NodeJS.ErrnoException) {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tobserver.error(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobserver.next(cacheItem);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static serialize(item: any): string {\r\n\t\tconst pool: Map<any, boolean> = new Map<any, boolean>();\r\n\t\tconst serialized: string = JSON.stringify(item, (key: string, value: any) => {\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\tif (pool.has(value)) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tpool.set(value, true);\r\n\t\t\t}\r\n\t\t\treturn value;\r\n\t\t}, 0);\r\n\t\tpool.clear();\r\n\t\treturn serialized;\r\n\t}\r\n\r\n\tprotected static getPath(type: string = 'cache', filename: string): string {\r\n\t\tconst key: string = this.getKey(type, filename);\r\n\t\treturn `${this.folder}${key}`;\r\n\t}\r\n\r\n\tprotected static getKey(type: string = 'cache', filename: string): string {\r\n\t\tlet key: string = `${type}-${filename}`.toLowerCase();\r\n\t\tkey = key.replace(/(\\s+)|(\\W+)/g, function (...matches) { return matches[1] ? '' : '_' });\r\n\t\treturn key;\r\n\t}\r\n}\r\n\r\n/*\r\nCache-Control: max-age=0, private, must-revalidate\r\nDate: Fri, 14 Aug 2020 20:09:02 GMT\r\nExpect-CT: max-age=2592000, report-uri=\"https://api.github.com/_private/browser/errors\"\r\nStatus: 200 OK\r\nStrict-Transport-Security: max-age=31536000; includeSubdomains; preload\r\nCache-Control: no-cache\r\nConnection: keep-alive\r\nPragma: no-cache\r\n*/\r\n","import { Observable, Observer } from \"rxjs\";\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nexport default class FileService {\r\n\r\n\tprotected static exists(pathname: string): boolean {\r\n\t\treturn fs.existsSync(pathname);\r\n\t}\r\n\r\n\tprotected static exists$(pathname: string): Observable<boolean> {\r\n\t\treturn Observable.create((observer: Observer<boolean>) => {\r\n\t\t\ttry {\r\n\t\t\t\tfs.access(pathname, fs.constants.F_OK, (error: Error) => {\r\n\t\t\t\t\tconst exists: boolean = !error;\r\n\t\t\t\t\tobserver.next(exists);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('FileService.exists$.error', error);\r\n\t\t\t\tobserver.next(false);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t\t// observer.error(error);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static readFile(pathname: string): string | null {\r\n\t\tconst dirname: string = path.dirname(pathname);\r\n\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn fs.readFileSync(pathname, 'utf8');\r\n\t}\r\n\r\n\tprotected static readFile$(pathname: string): Observable<string | null> {\r\n\t\treturn Observable.create((observer: Observer<string | null>) => {\r\n\t\t\ttry {\r\n\t\t\t\tfs.readFile(pathname, 'utf8', (error: Error, data: string) => {\r\n\t\t\t\t\t// return observer.error(error);\r\n\t\t\t\t\tobserver.next(error ? null : data);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t});\r\n\t\t\t\t// sync\r\n\t\t\t\t// observer.next(this.readFile(pathname));\r\n\t\t\t\t// observer.complete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('FileService.readFile$.error', error);\r\n\t\t\t\tobserver.next(null);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t\t// observer.error(error);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static writeFile(pathname: string, content: string): boolean {\r\n\t\ttry {\r\n\t\t\tconst dirname: string = path.dirname(pathname);\r\n\t\t\tif (!fs.existsSync(dirname)) {\r\n\t\t\t\tfs.mkdirSync(dirname);\r\n\t\t\t}\r\n\t\t\tfs.writeFileSync(pathname, content, 'utf8');\r\n\t\t\treturn true;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('FileService.writeFile.error', error);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static writeFile$(pathname: string, content: string): Observable<boolean> {\r\n\t\treturn Observable.create((observer: Observer<boolean>) => {\r\n\t\t\ttry {\r\n\t\t\t\tconst dirname: string = path.dirname(pathname);\r\n\t\t\t\tfs.mkdir(dirname, { recursive: true }, (error: Error) => {\r\n\t\t\t\t\tif (error) {\r\n\t\t\t\t\t\tobserver.next(false);\r\n\t\t\t\t\t\tobserver.complete();\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t// return observer.error(error);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfs.writeFile(pathname, content, 'utf8', (error: Error) => {\r\n\t\t\t\t\t\tobserver.next(!error);\r\n\t\t\t\t\t\tobserver.complete();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\t// sync\r\n\t\t\t\t// this.writeFile(pathname, content);\r\n\t\t\t\t// observer.next(true);\r\n\t\t\t\t// observer.complete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('FileService.writeFile$.error', error);\r\n\t\t\t\tobserver.next(false);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t\t// observer.error(error);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected static unlinkFile(pathname: string): boolean {\r\n\t\ttry {\r\n\t\t\tif (fs.existsSync(pathname)) {\r\n\t\t\t\tfs.unlinkSync(pathname);\r\n\t\t\t\treturn true;\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log('FileService.unlinkFile.error', error);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static unlinkFile$(pathname: string): Observable<boolean> {\r\n\t\treturn Observable.create((observer: Observer<boolean>) => {\r\n\t\t\ttry {\r\n\t\t\t\tfs.unlink(pathname, (error: Error) => {\r\n\t\t\t\t\tobserver.next(!error);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t\t// return observer.error(error);\r\n\t\t\t\t});\r\n\t\t\t\t// sync\r\n\t\t\t\t// this.unlinkFile(pathname);\r\n\t\t\t\t// observer.next(true);\r\n\t\t\t\t// observer.complete();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log('FileService.unlinkFile$.error', error);\r\n\t\t\t\tobserver.next(false);\r\n\t\t\t\t// observer.error(error);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n}\r\n","import { Parser } from 'htmlparser2';\nimport { ILocation, RxLocation } from '../location/location';\n\n// export const NO_CHILDS = ['title','base','meta','link','img','br','input',];\n// const SKIP = ['html','head','title','base','meta','script','link','body',];\n// document.createComment = nodeValue => { return new RxComment(null, nodeValue); };\n// document.createTextNode = nodeValue => { return new RxText(null, nodeValue); };\n\nexport enum RxNodeType {\n\tELEMENT_NODE = 1, //\tUn nodo Element come <p> o <div>.\n\tTEXT_NODE = 3, //\tL'attuale Text dentro un Element o Attr.\n\tCDATA_SECTION_NODE = 4, //\tUna CDATASection, ad esempio <!CDATA[[ … ]]>.\n\tPROCESSING_INSTRUCTION_NODE = 7, //\tUna ProcessingInstruction di un documento XML, come <?xml-stylesheet … ?>.\n\tCOMMENT_NODE = 8, //\tUn nodo Comment, come <!-- … -->.\n\tDOCUMENT_NODE = 9, //\tUn nodo Document.\n\tDOCUMENT_TYPE_NODE = 10, //\tUn nodo DocumentType, come <!DOCTYPE html>.\n\tDOCUMENT_FRAGMENT_NODE = 11, //\tUn nodo DocumentFragment.\n}\n\nexport enum SelectorType {\n\tNone = -1,\n\tId = 0,\n\tClass = 1,\n\tAttribute = 2,\n\tTagName = 3,\n}\n\nexport class RxSelector {\n\tselector: string = '';\n\ttype: SelectorType = SelectorType.None;\n\tnegate: boolean = false;\n\tconstructor(options: RxSelector) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class RxQuery {\n\tselector: string = '';\n\tselectors: RxSelector[] = [];\n\tinner: boolean = false;\n\tconstructor(options: RxQuery) {\n\t\tif (options) {\n\t\t\tObject.assign(this, options);\n\t\t}\n\t}\n}\n\nexport class RxNode {\n\tparentNode: RxElement | null;\n\tnodeType: RxNodeType;\n\tnodeValue: string | null = null;\n\n\tconstructor(parentNode: RxElement | null = null) {\n\t\tthis.parentNode = parentNode;\n\t\tthis.nodeType = -1;\n\t}\n\tcloneNode(deep: boolean = false) {\n\t\treturn cloneNode.apply(this, [this, deep]);\n\t}\n\tserialize(): string {\n\t\treturn ``;\n\t}\n}\n\nexport class RxStyle {\n\t[key: string]: any;\n\titem(index: number): string | undefined {\n\t\tconst keys = Object.keys(this);\n\t\tif (keys.length > index) {\n\t\t\treturn keys[index];\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\tgetPropertyPriority(key: string): string {\n\t\tconst value = this[key];\n\t\tif (value && value.indexOf('!important')) {\n\t\t\treturn 'important';\n\t\t} else {\n\t\t\treturn '';\n\t\t}\n\t}\n\tgetPropertyValue(key: string): string {\n\t\treturn this[key];\n\t}\n\tsetProperty(key: string, value: string, important: 'important' | '' | undefined) {\n\t\tthis[key] = value + (important === 'important' ? '!important' : '');\n\t\tthis.serialize_();\n\t}\n\tremoveProperty(key: string) {\n\t\tdelete this[key];\n\t\tthis.serialize_();\n\t}\n\tprivate serialize_() {\n\t\tthis.node.attributes.style = Object.keys(this).map(key => {\n\t\t\treturn `${key}: ${this[key]};`;\n\t\t}).join(' ');\n\t}\n\tinit() {\n\t\tconst keys = Object.keys(this);\n\t\tkeys.forEach(key => delete this[key]);\n\t\tif (this.node.attributes?.style) {\n\t\t\tconst regex: RegExp = /([^:]+):([^;]+);?\\s*/gm\n\t\t\tconst matches: RegExpMatchArray[] = [...this.node.attributes.style.matchAll(regex)];\n\t\t\tmatches.forEach((match: RegExpMatchArray) => {\n\t\t\t\tconst key: string = match[1];\n\t\t\t\tconst value: string = match[2];\n\t\t\t\tthis[key] = value;\n\t\t\t});\n\t\t}\n\t}\n\tconstructor(node: RxElement) {\n\t\tObject.defineProperty(this, 'node', {\n\t\t\tvalue: node,\n\t\t\twritable: false,\n\t\t\tenumerable: false\n\t\t});\n\t\tthis.init();\n\t}\n}\n\nexport class RxClassList extends Array<string> {\n\tnode: RxElement;\n\titem(index: number) {\n\t\treturn this[index];\n\t}\n\tcontains(name: string): boolean {\n\t\treturn this.indexOf(name) !== -1;\n\t}\n\tadd(...names: string[]) {\n\t\tnames.forEach(name => {\n\t\t\tif (this.indexOf(name) !== -1) {\n\t\t\t\tthis.push(name);\n\t\t\t}\n\t\t});\n\t\tthis.serialize_();\n\t}\n\tremove(...names: string[]) {\n\t\tnames.forEach(name => {\n\t\t\tconst index: number = this.indexOf(name);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.splice(index, 1);\n\t\t\t}\n\t\t});\n\t\tthis.serialize_();\n\t}\n\ttoggle(name: string, force?: boolean): boolean {\n\t\tconst index: number = this.indexOf(name);\n\t\tif (force === false) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis.serialize_();\n\t\t\treturn false;\n\t\t} else if (force === true) {\n\t\t\tthis.push(name);\n\t\t\tthis.serialize_();\n\t\t\treturn true;\n\t\t} else if (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t\tthis.serialize_();\n\t\t\treturn false;\n\t\t} else {\n\t\t\tthis.push(name);\n\t\t\tthis.serialize_();\n\t\t\treturn true;\n\t\t}\n\t}\n\treplace(oldClass: string, newClass: string) {\n\t\tconst index: number = this.indexOf(oldClass);\n\t\tif (index !== -1) {\n\t\t\tthis.splice(index, 1);\n\t\t}\n\t\tthis.push(newClass);\n\t\tthis.serialize_();\n\t}\n\tprivate serialize_() {\n\t\tthis.node.attributes.class = this.join(' ');\n\t}\n\tinit() {\n\t\tthis.length = 0;\n\t\tif (this.node.attributes?.class) {\n\t\t\tArray.prototype.push.apply(this, this.node.attributes.class.split(' ').map(name => name.trim()));\n\t\t}\n\t}\n\tconstructor(node: RxElement) {\n\t\tsuper();\n\t\tthis.node = node;\n\t\tthis.init();\n\t}\n}\n\nexport class RxElement extends RxNode {\n\tnodeName: string;\n\tchildNodes: RxNode[];\n\tattributes: { [key: string]: string | null } = {};\n\tstyle: RxStyle;\n\tclassList: RxClassList;\n\tget children(): RxElement[] {\n\t\tlet children: RxElement[] = [],\n\t\t\ti = 0,\n\t\t\tnode,\n\t\t\tnodes = this.childNodes;\n\t\tnode = nodes[i++];\n\t\twhile (node) {\n\t\t\tnode = nodes[i++];\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\n\t\t\t\tchildren.push(node as RxElement);\n\t\t\t}\n\t\t}\n\t\treturn children;\n\t}\n\tget childElementCount(): number {\n\t\tlet i = 0,\n\t\t\tcount = 0,\n\t\t\tnode,\n\t\t\tnodes = this.childNodes;\n\t\tnode = nodes[i++];\n\t\twhile (node) {\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tnode = nodes[i++];\n\t\t}\n\t\treturn count;\n\t}\n\tget firstChild(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.childNodes.length) {\n\t\t\tnode = this.childNodes[0];\n\t\t}\n\t\treturn node;\n\t}\n\tget firstElementChild(): RxElement | null {\n\t\tfor (let node of this.childNodes) {\n\t\t\tif (isRxElement(node)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tget lastChild(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.childNodes.length) {\n\t\t\tnode = this.childNodes[this.childNodes.length - 1];\n\t\t}\n\t\treturn node;\n\t}\n\tget lastElementChild(): RxElement | null {\n\t\tconst nodes = this.childNodes;\n\t\tfor (let i = nodes.length - 1; i > -1; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (isRxElement(node)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\tget previousSibling(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.parentNode) {\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\n\t\t\tif (index > 0) {\n\t\t\t\tnode = this.parentNode.childNodes[index - 1];\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\tget nextSibling(): RxNode | null {\n\t\tlet node = null;\n\t\tif (this.parentNode) {\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\n\t\t\tif (index !== -1 && index < this.parentNode.childNodes.length - 1) {\n\t\t\t\tnode = this.parentNode.childNodes[index];\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\tget wholeText() {\n\t\tlet nodeValue;\n\t\tif (this.nodeType === RxNodeType.TEXT_NODE) {\n\t\t\treturn this.nodeValue;\n\t\t}\n\t\treturn nodeValue;\n\t}\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tset innerText(nodeValue: string | null) {\n\t\tthis.childNodes = [new RxText(this, nodeValue)];\n\t}\n\tget innerText(): string | null {\n\t\t// return this.childNodes.filter((n): n is RxText => isRxText(n)).map(n => n.innerText).join('');\n\t\treturn this.childNodes.filter((n): n is RxText | RxElement => isRxText(n) || isRxElement(n)).map(n => n.innerText).join('');\n\t}\n\tset textContent(nodeValue: string | null) {\n\t\tthis.innerText = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.innerText;\n\t}\n\tget innerHTML(): string {\n\t\treturn this.childNodes.map(x => x.serialize()).join('');\n\t}\n\tset innerHTML(html: string) {\n\t\tconst doc = parse(html);\n\t\tconst childNodes = doc.childNodes.map(n => {\n\t\t\tn.parentNode = this;\n\t\t\treturn n;\n\t\t});\n\t\tthis.childNodes = childNodes;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeName: string, attributes: { [key: string]: string | null } | null = null) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.ELEMENT_NODE;\n\t\tthis.nodeName = nodeName;\n\t\tif (attributes && typeof attributes === 'object') {\n\t\t\tthis.attributes = attributes;\n\t\t}\n\t\tthis.style = new RxStyle(this);\n\t\tthis.classList = new RxClassList(this);\n\t\tthis.childNodes = [];\n\t\t/*\n\t\t\tif (SKIP.indexOf(nodeName) === -1) {\n\t\t\t\tconsole.log(parentNode.nodeName, '>', nodeName);\n\t\t}\n\t\t*/\n\t}\n\tappend(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\n\t\t\tlet node;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tArray.prototype.push.apply(this.childNodes, nodesOrDOMStrings);\n\t\t/*\n\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\n\t\t\t\tlet node;\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t\t} else {\n\t\t\t\t\tnode = nodeOrDomString;\n\t\t\t\t}\n\t\t\t\tthis.childNodes.push(node);\n\t\t}\n\t\t*/\n\t}\n\tprepend(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\n\t\t\tlet node;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tArray.prototype.unshift.apply(this.childNodes, nodesOrDOMStrings);\n\t\t/*\n\t\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\n\t\t\t\tlet node;\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t\t} else {\n\t\t\t\t\tnode = nodeOrDomString;\n\t\t\t\t}\n\t\t\t\tthis.childNodes.unshift(node);\n\t\t}\n\t\t*/\n\t}\n\treplaceChildren(...nodesOrDOMStrings: (RxNode | string)[]) {\n\t\tconst nodes: RxNode[] = nodesOrDOMStrings.map((nodeOrDomString) => {\n\t\t\tlet node: RxNode;\n\t\t\tif (typeof nodeOrDomString === 'string') {\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\n\t\t\t} else {\n\t\t\t\tnode = nodeOrDomString as RxNode;\n\t\t\t\tnode.parentNode = this;\n\t\t\t}\n\t\t\treturn node;\n\t\t});\n\t\tthis.childNodes = nodes;\n\t}\n\tquerySelectorAll(selector: string): RxNode[] | null {\n\t\tconst queries = getQueries(selector);\n\t\tconst nodes = querySelectorAll(queries, this.childNodes);\n\t\treturn (nodes && nodes.length) ? nodes : null;\n\t}\n\tquerySelector(selector: string): RxNode | null {\n\t\tconst queries = getQueries(selector);\n\t\tconst node = querySelector(queries, this.childNodes);\n\t\treturn node;\n\t}\n\thasAttribute(attribute: string): boolean {\n\t\treturn Object.keys(this.attributes).indexOf(attribute.toLowerCase()) !== -1;\n\t}\n\tgetAttribute(attribute: string): string | null {\n\t\treturn this.attributes[attribute.toLowerCase()] || null;\n\t}\n\tsetAttribute(attribute: string, value: any) {\n\t\tthis.attributes[attribute.toLowerCase()] = value.toString();\n\t\tif (attribute === 'style') {\n\t\t\tthis.style.init();\n\t\t} else if (attribute === 'class') {\n\t\t\tthis.classList.init();\n\t\t}\n\t}\n\tremoveAttribute(attribute: string) {\n\t\tdelete this.attributes[attribute];\n\t\tif (attribute === 'style') {\n\t\t\tthis.style.init();\n\t\t} else if (attribute === 'class') {\n\t\t\tthis.classList.init();\n\t\t}\n\t}\n\treplaceChild(newChild: RxNode, oldChild: RxNode): RxNode {\n\t\tconst index = this.childNodes.indexOf(oldChild);\n\t\tif (index !== -1) {\n\t\t\tthis.childNodes[index] = newChild;\n\t\t\tnewChild.parentNode = this;\n\t\t}\n\t\t// console.log('replaceChild', this, newChild, oldChild);\n\t\treturn oldChild;\n\t}\n\tremoveChild(child: RxNode): RxNode {\n\t\tif (!(child instanceof RxNode)) {\n\t\t\tthrow new Error(`Uncaught TypeError: Failed to execute 'removeChild' on 'Node': parameter 1 is not of type 'Node'.`);\n\t\t}\n\t\tconst index = this.childNodes.indexOf(child);\n\t\tif (index === -1) {\n\t\t\tthrow new Error(`Uncaught NotFoundError: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.`);\n\t\t}\n\t\tthis.childNodes.splice(index, 1);\n\t\t// console.log('removeChild', this.childNodes.length);\n\t\treturn child;\n\t}\n\tinsertBefore(newNode: RxNode, referenceNode: RxNode | null = null): RxNode {\n\t\tconst index = referenceNode\n\t\t\t? this.childNodes.indexOf(referenceNode)\n\t\t\t: this.childNodes.length;\n\t\tif (index !== -1) {\n\t\t\tthis.childNodes.splice(index, 0, newNode);\n\t\t\tnewNode.parentNode = this;\n\t\t}\n\t\t// console.log('insertBefore', this, newNode, referenceNode);\n\t\treturn newNode;\n\t}\n\tcloneNode(deep: boolean = false): RxNode {\n\t\treturn cloneNode.apply(this, [this, deep]);\n\t}\n\taddListener(eventName: string, handler: (e: any) => {}) { }\n\tremoveListener(eventName: string, handler: (e: any) => {}) { }\n\tserialize(): string {\n\t\treturn `<${\n\t\t\tthis.nodeName\n\t\t\t}${this.serializeAttributes()}>${this.childNodes\n\t\t\t\t.map(x => x.serialize())\n\t\t\t\t.join('')}</${this.nodeName}>`;\n\t}\n\tserializeAttributes(): string {\n\t\tlet attributes = '';\n\t\tconst keys = Object.keys(this.attributes);\n\t\tif (keys.length) {\n\t\t\tattributes =\n\t\t\t\t' ' +\n\t\t\t\tkeys\n\t\t\t\t\t.map(k => {\n\t\t\t\t\t\treturn `${k}=\"${this.attributes[k]}\"`;\n\t\t\t\t\t})\n\t\t\t\t\t.join(' ');\n\t\t}\n\t\treturn attributes;\n\t}\n}\n\nexport class RxText extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.TEXT_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t\t// console.log('RxText', nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn this.nodeValue;\n\t}\n}\n\nexport class RxCData extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.CDATA_SECTION_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn this.nodeValue;\n\t}\n}\n\nexport class RxComment extends RxNode {\n\tnodeValue: string;\n\tget outerHTML(): string | null {\n\t\tlet html = null;\n\t\tif (this.parentNode) {\n\t\t\thtml = this.parentNode.serialize();\n\t\t}\n\t\treturn html;\n\t}\n\tget wholeText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset innerText(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget innerText(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tset textContent(nodeValue) {\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tget textContent(): string | null {\n\t\treturn this.nodeValue;\n\t}\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.COMMENT_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<!--${this.nodeValue}-->`;\n\t}\n}\n\nexport class RxProcessingInstruction extends RxNode {\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.PROCESSING_INSTRUCTION_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<${this.nodeValue}>`;\n\t}\n}\n\nexport class RxDocumentType extends RxNode {\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\n\t\tsuper(parentNode);\n\t\tthis.nodeType = RxNodeType.DOCUMENT_TYPE_NODE;\n\t\tthis.nodeValue = String(nodeValue);\n\t}\n\tserialize(): string {\n\t\treturn `<${this.nodeValue}>`;\n\t}\n}\n\nexport class RxDocumentFragment extends RxElement {\n\tconstructor() {\n\t\tsuper(null, '#document-fragment');\n\t\tthis.nodeType = RxNodeType.DOCUMENT_FRAGMENT_NODE;\n\t\tthis.childNodes = [];\n\t}\n}\n\n// !!! TODO\n// Any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.//\n// interface Document extends Node, DocumentAndElementEventHandlers, DocumentOrShadowRoot, GlobalEventHandlers, NonElementParentNode, ParentNode, XPathEvaluatorBase {\nexport interface IDocument extends Document {\n\t/*\n\treadonly URL: string; // Sets or gets the URL for the current document.\n\treadonly characterSet: string; // Returns document's encoding.\n\treadonly charset: string; // Gets or sets the character set used to encode the object.\n\treadonly compatMode: string; // Gets a value that indicates whether standards-compliant mode is switched on for the object.\n\treadonly contentType: string; // Returns document's content type.\n\treadonly currentScript: HTMLOrSVGScriptElement | null; // Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\treadonly defaultView: (WindowProxy & typeof globalThis) | null; // Returns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.\n\treadonly doctype: DocumentType | null; // Gets an object representing the document type declaration associated with the current document.\n\treadonly documentElement: HTMLElement; // Gets a reference to the root node of the document.\n\treadonly documentURI: string; // Returns document's URL.\n\treadonly embeds: HTMLCollectionOf<HTMLEmbedElement>; // Retrieves a collection of all embed objects in the document.\n\treadonly forms: HTMLCollectionOf<HTMLFormElement>; // Retrieves a collection, in source order, of all form objects in the document.\n\treadonly fullscreenEnabled: boolean; // Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.\n\treadonly head: HTMLHeadElement; // Returns the head element.\n\treadonly hidden: boolean;\n\treadonly images: HTMLCollectionOf<HTMLImageElement>; // Retrieves a collection, in source order, of img objects in the document.\n\treadonly implementation: DOMImplementation; // Gets the implementation object of the current document.\n\treadonly inputEncoding: string; // Returns the character encoding used to create the webpage that is loaded into the document object.\n\treadonly lastModified: string; // Gets the date that the page was last modified, if the page supplies one.\n\treadonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>; // Retrieves a collection of all a objects that specify the href property and all area objects in the document.\n\treadonly origin: string; // Returns document's origin.\n\treadonly ownerDocument: null;\n\treadonly plugins: HTMLCollectionOf<HTMLEmbedElement>; // Return an HTMLCollection of the embed elements in the Document.\n\treadonly readyState: DocumentReadyState; // Retrieves a value that indicates the current state of the object.\n\treadonly referrer: string; // Gets the URL of the location that referred the user to the current page.\n\treadonly scripts: HTMLCollectionOf<HTMLScriptElement>; // Retrieves a collection of all script objects in the document.\n\treadonly scrollingElement: Element | null;\n\treadonly timeline: DocumentTimeline;\n\treadonly visibilityState: VisibilityState;\n\tbody: HTMLElement; // Specifies the beginning and end of the document body.\n\tcookie: string; // Returns the HTTP cookies that apply to the Document. If there are no cookies or cookies can't be applied to this resource, the empty string will be returned.\n\t// Can be set, to add a new cookie to the element's set of HTTP cookies.\n\t// If the contents are sandboxed into a unique origin (e.g. in an iframe with the sandbox attribute), a \"SecurityError\" DOMException will be thrown on getting and setting.\n\tdesignMode: string; // Sets or gets a value that indicates whether the document can be edited.\n\tdir: string; // Sets or retrieves a value that indicates the reading order of the object.\n\tdomain: string; // Sets or gets the security domain of the document.\n\tlocation: Location; // Contains information about the current URL.\n\ttitle: string; // Contains the title of the document.\n\t// METHODS\n\tonfullscreenchange: ((this: Document, ev: Event) => any) | null;\n\tonfullscreenerror: ((this: Document, ev: Event) => any) | null;\n\tonpointerlockchange: ((this: Document, ev: Event) => any) | null;\n\tonpointerlockerror: ((this: Document, ev: Event) => any) | null;\n\tonreadystatechange: ((this: Document, ev: Event) => any) | null; // Fires when the state of the object has changed.\n\t// @param ev The event\n\tonvisibilitychange: ((this: Document, ev: Event) => any) | null;\n\tadoptNode<T extends Node>(source: T): T; // Moves node from another document and returns it.\n\t// If node is a document, throws a \"NotSupportedError\" DOMException or, if node is a shadow root, throws a \"HierarchyRequestError\" DOMException.\n\tcaretPositionFromPoint(x: number, y: number): CaretPosition | null;\n\tclose(): void; // Closes an output stream and forces the sent data to display.\n\tcreateAttribute(localName: string): Attr; // Creates an attribute object with a specified name.\n\t// @param name String that sets the attribute object's name.\n\tcreateAttributeNS(namespace: string | null, qualifiedName: string): Attr;\n\tcreateCDATASection(data: string): CDATASection; // Returns a CDATASection node whose data is data.\n\tcreateComment(data: string): Comment; // Creates a comment object with the specified data.\n\t// @param data Sets the comment object's data.\n\tcreateDocumentFragment(): DocumentFragment; // Creates a new document.\n\tcreateElement<K extends keyof HTMLElementTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementTagNameMap[K]; // Creates an instance of the element for the specified tag.\n\t// @param tagName The name of an element.\n\t// @deprecated\n\t// createElement<K extends keyof HTMLElementDeprecatedTagNameMap>(tagName: K, options?: ElementCreationOptions): HTMLElementDeprecatedTagNameMap[K];\n\tcreateElement(tagName: string, options?: ElementCreationOptions): HTMLElement;\n\tcreateElementNS(namespaceURI: 'http://www.w3.org/1999/xhtml', qualifiedName: string): HTMLElement;\n\tcreateElementNS<K extends keyof SVGElementTagNameMap>(namespaceURI: 'http://www.w3.org/2000/svg', qualifiedName: K): SVGElementTagNameMap[K];\n\tcreateElementNS(namespaceURI: 'http://www.w3.org/2000/svg', qualifiedName: string): SVGElement;\n\tcreateElementNS(namespaceURI: string | null, qualifiedName: string, options?: ElementCreationOptions): Element;\n\tcreateElementNS(namespace: string | null, qualifiedName: string, options?: string | ElementCreationOptions): Element; // Returns an element with namespace namespace. Its namespace prefix will be everything before \":\" (U+003E) in qualifiedName or null. Its local name will be everything after \":\" (U+003E) in qualifiedName or qualifiedName.\n\t// If localName does not match the Name production an 'InvalidCharacterError' DOMException will be thrown.\n\t// If one of the following conditions is true a 'NamespaceError' DOMException will be thrown:\n\t// localName does not match the QName production.\n\t// Namespace prefix is not null and namespace is the empty string.\n\t// Namespace prefix is 'xml' and namespace is not the XML namespace.\n\t// qualifiedName or namespace prefix is 'xmlns' and namespace is not the XMLNS namespace.\n\t// namespace is the XMLNS namespace and neither qualifiedName nor namespace prefix is 'xmlns'.\n\t// When supplied, options's is can be used to create a customized built-in element.\n\tcreateEvent(eventInterface: 'AnimationEvent'): AnimationEvent;\n\tcreateEvent(eventInterface: 'AnimationPlaybackEvent'): AnimationPlaybackEvent;\n\tcreateEvent(eventInterface: 'AudioProcessingEvent'): AudioProcessingEvent;\n\tcreateEvent(eventInterface: 'BeforeUnloadEvent'): BeforeUnloadEvent;\n\tcreateEvent(eventInterface: 'ClipboardEvent'): ClipboardEvent;\n\tcreateEvent(eventInterface: 'CloseEvent'): CloseEvent;\n\tcreateEvent(eventInterface: 'CompositionEvent'): CompositionEvent;\n\tcreateEvent(eventInterface: 'CustomEvent'): CustomEvent;\n\tcreateEvent(eventInterface: 'DeviceLightEvent'): DeviceLightEvent;\n\tcreateEvent(eventInterface: 'DeviceMotionEvent'): DeviceMotionEvent;\n\tcreateEvent(eventInterface: 'DeviceOrientationEvent'): DeviceOrientationEvent;\n\tcreateEvent(eventInterface: 'DragEvent'): DragEvent;\n\tcreateEvent(eventInterface: 'ErrorEvent'): ErrorEvent;\n\tcreateEvent(eventInterface: 'Event'): Event;\n\tcreateEvent(eventInterface: 'Events'): Event;\n\tcreateEvent(eventInterface: 'FocusEvent'): FocusEvent;\n\tcreateEvent(eventInterface: 'FocusNavigationEvent'): FocusNavigationEvent;\n\tcreateEvent(eventInterface: 'GamepadEvent'): GamepadEvent;\n\tcreateEvent(eventInterface: 'HashChangeEvent'): HashChangeEvent;\n\tcreateEvent(eventInterface: 'IDBVersionChangeEvent'): IDBVersionChangeEvent;\n\tcreateEvent(eventInterface: 'InputEvent'): InputEvent;\n\tcreateEvent(eventInterface: 'KeyboardEvent'): KeyboardEvent;\n\tcreateEvent(eventInterface: 'ListeningStateChangedEvent'): ListeningStateChangedEvent;\n\tcreateEvent(eventInterface: 'MSGestureEvent'): MSGestureEvent;\n\tcreateEvent(eventInterface: 'MSMediaKeyMessageEvent'): MSMediaKeyMessageEvent;\n\tcreateEvent(eventInterface: 'MSMediaKeyNeededEvent'): MSMediaKeyNeededEvent;\n\tcreateEvent(eventInterface: 'MSPointerEvent'): MSPointerEvent;\n\tcreateEvent(eventInterface: 'MediaEncryptedEvent'): MediaEncryptedEvent;\n\tcreateEvent(eventInterface: 'MediaKeyMessageEvent'): MediaKeyMessageEvent;\n\tcreateEvent(eventInterface: 'MediaQueryListEvent'): MediaQueryListEvent;\n\tcreateEvent(eventInterface: 'MediaStreamErrorEvent'): MediaStreamErrorEvent;\n\tcreateEvent(eventInterface: 'MediaStreamEvent'): MediaStreamEvent;\n\tcreateEvent(eventInterface: 'MediaStreamTrackEvent'): MediaStreamTrackEvent;\n\tcreateEvent(eventInterface: 'MessageEvent'): MessageEvent;\n\tcreateEvent(eventInterface: 'MouseEvent'): MouseEvent;\n\tcreateEvent(eventInterface: 'MouseEvents'): MouseEvent;\n\tcreateEvent(eventInterface: 'MutationEvent'): MutationEvent;\n\tcreateEvent(eventInterface: 'MutationEvents'): MutationEvent;\n\tcreateEvent(eventInterface: 'OfflineAudioCompletionEvent'): OfflineAudioCompletionEvent;\n\tcreateEvent(eventInterface: 'OverflowEvent'): OverflowEvent;\n\tcreateEvent(eventInterface: 'PageTransitionEvent'): PageTransitionEvent;\n\tcreateEvent(eventInterface: 'PaymentRequestUpdateEvent'): PaymentRequestUpdateEvent;\n\tcreateEvent(eventInterface: 'PermissionRequestedEvent'): PermissionRequestedEvent;\n\tcreateEvent(eventInterface: 'PointerEvent'): PointerEvent;\n\tcreateEvent(eventInterface: 'PopStateEvent'): PopStateEvent;\n\tcreateEvent(eventInterface: 'ProgressEvent'): ProgressEvent;\n\tcreateEvent(eventInterface: 'PromiseRejectionEvent'): PromiseRejectionEvent;\n\tcreateEvent(eventInterface: 'RTCDTMFToneChangeEvent'): RTCDTMFToneChangeEvent;\n\tcreateEvent(eventInterface: 'RTCDataChannelEvent'): RTCDataChannelEvent;\n\tcreateEvent(eventInterface: 'RTCDtlsTransportStateChangedEvent'): RTCDtlsTransportStateChangedEvent;\n\tcreateEvent(eventInterface: 'RTCErrorEvent'): RTCErrorEvent;\n\tcreateEvent(eventInterface: 'RTCIceCandidatePairChangedEvent'): RTCIceCandidatePairChangedEvent;\n\tcreateEvent(eventInterface: 'RTCIceGathererEvent'): RTCIceGathererEvent;\n\tcreateEvent(eventInterface: 'RTCIceTransportStateChangedEvent'): RTCIceTransportStateChangedEvent;\n\tcreateEvent(eventInterface: 'RTCPeerConnectionIceErrorEvent'): RTCPeerConnectionIceErrorEvent;\n\tcreateEvent(eventInterface: 'RTCPeerConnectionIceEvent'): RTCPeerConnectionIceEvent;\n\tcreateEvent(eventInterface: 'RTCSsrcConflictEvent'): RTCSsrcConflictEvent;\n\tcreateEvent(eventInterface: 'RTCStatsEvent'): RTCStatsEvent;\n\tcreateEvent(eventInterface: 'RTCTrackEvent'): RTCTrackEvent;\n\tcreateEvent(eventInterface: 'SVGZoomEvent'): SVGZoomEvent;\n\tcreateEvent(eventInterface: 'SVGZoomEvents'): SVGZoomEvent;\n\tcreateEvent(eventInterface: 'SecurityPolicyViolationEvent'): SecurityPolicyViolationEvent;\n\tcreateEvent(eventInterface: 'ServiceWorkerMessageEvent'): ServiceWorkerMessageEvent;\n\tcreateEvent(eventInterface: 'SpeechRecognitionEvent'): SpeechRecognitionEvent;\n\tcreateEvent(eventInterface: 'SpeechSynthesisErrorEvent'): SpeechSynthesisErrorEvent;\n\tcreateEvent(eventInterface: 'SpeechSynthesisEvent'): SpeechSynthesisEvent;\n\tcreateEvent(eventInterface: 'StorageEvent'): StorageEvent;\n\tcreateEvent(eventInterface: 'TextEvent'): TextEvent;\n\tcreateEvent(eventInterface: 'TouchEvent'): TouchEvent;\n\tcreateEvent(eventInterface: 'TrackEvent'): TrackEvent;\n\tcreateEvent(eventInterface: 'TransitionEvent'): TransitionEvent;\n\tcreateEvent(eventInterface: 'UIEvent'): UIEvent;\n\tcreateEvent(eventInterface: 'UIEvents'): UIEvent;\n\tcreateEvent(eventInterface: 'VRDisplayEvent'): VRDisplayEvent;\n\tcreateEvent(eventInterface: 'VRDisplayEvent '): VRDisplayEvent;\n\tcreateEvent(eventInterface: 'WebGLContextEvent'): WebGLContextEvent;\n\tcreateEvent(eventInterface: 'WheelEvent'): WheelEvent;\n\tcreateEvent(eventInterface: string): Event;\n\tcreateNodeIterator(root: Node, whatToShow?: number, filter?: NodeFilter | null): NodeIterator; // Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n\t// @param root The root element or node to start traversing on.\n\t// @param whatToShow The type of nodes or elements to appear in the node list\n\t// @param filter A custom NodeFilter function to use. For more information, see filter. Use null for no filter.\n\t// @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\n\tcreateProcessingInstruction(target: string, data: string): ProcessingInstruction; // Returns a ProcessingInstruction node whose target is target and data is data. If target does not match the Name production an 'InvalidCharacterError' DOMException will be thrown. If data contains \"?>\" an \"InvalidCharacterError\" DOMException will be thrown.\n\tcreateRange(): Range; // Returns an empty range object that has both of its boundary points positioned at the beginning of the document.\n\tcreateTextNode(data: string): Text; // Creates a text string from the specified value.\n\t// @param data String that specifies the nodeValue property of the text node.\n\tcreateTreeWalker(root: Node, whatToShow?: number, filter?: NodeFilter | null): TreeWalker; // Creates a TreeWalker object that you can use to traverse filtered lists of nodes or elements in a document.\n\t// @param root The root element or node to start traversing on.\n\t// @param whatToShow The type of nodes or elements to appear in the node list. For more information, see whatToShow.\n\t// @param filter A custom NodeFilter function to use.\n\t// @param entityReferenceExpansion A flag that specifies whether entity reference nodes are expanded.\n\t// @deprecated\n\t// createTreeWalker(root: Node, whatToShow: number, filter: NodeFilter | null, entityReferenceExpansion?: boolean): TreeWalker;\n\telementFromPoint(x: number, y: number): Element | null; // Returns the element for the specified x coordinate and the specified y coordinate.\n\t// @param x The x-offset\n\t// @param y The y-offset\n\telementsFromPoint(x: number, y: number): Element[];\n\texecCommand(commandId: string, showUI?: boolean, value?: string): boolean; // Executes a command on the current document, current selection, or the given range.\n\t// @param commandId String that specifies the command to execute. This command can be any of the command identifiers that can be executed in script.\n\t// @param showUI Display the user interface, defaults to false.\n\t// @param value Value to assign.\n\texitFullscreen(): Promise<void>; // Stops document's fullscreen element from being displayed fullscreen and resolves promise when done.\n\texitPointerLock(): void;\n\tgetAnimations(): Animation[];\n\tgetElementById(elementId: string): HTMLElement | null; // Returns a reference to the first object with the specified value of the ID or NAME attribute.\n\t// @param elementId String that specifies the ID value. Case-insensitive.\n\tgetElementsByClassName(classNames: string): HTMLCollectionOf<Element>; // Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.\n\tgetElementsByName(elementName: string): NodeListOf<HTMLElement>; // Gets a collection of objects based on the value of the NAME or ID attribute.\n\t// @param elementName Gets a collection of objects based on the value of the NAME or ID attribute.\n\tgetElementsByTagName<K extends keyof HTMLElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<HTMLElementTagNameMap[K]>;\n\tgetElementsByTagName<K extends keyof SVGElementTagNameMap>(qualifiedName: K): HTMLCollectionOf<SVGElementTagNameMap[K]>;\n\tgetElementsByTagName(qualifiedName: string): HTMLCollectionOf<Element>; // Retrieves a collection of objects based on the specified element name.\n\t// @param name Specifies the name of an element.\n\tgetElementsByTagNameNS(namespaceURI: 'http://www.w3.org/1999/xhtml', localName: string): HTMLCollectionOf<HTMLElement>;\n\tgetElementsByTagNameNS(namespaceURI: 'http://www.w3.org/2000/svg', localName: string): HTMLCollectionOf<SVGElement>;\n\tgetElementsByTagNameNS(namespaceURI: string, localName: string): HTMLCollectionOf<Element>; // If namespace and localName are '*' returns a HTMLCollection of all descendant elements.\n\t// If only namespace is '*' returns a HTMLCollection of all descendant elements whose local name is localName.\n\t// If only localName is '*' returns a HTMLCollection of all descendant elements whose namespace is namespace.\n\t// Otherwise, returns a HTMLCollection of all descendant elements whose namespace is namespace and local name is localName.\n\tgetSelection(): Selection | null; // Returns an object representing the current selection of the document that is loaded into the object displaying a webpage.\n\thasFocus(): boolean; // Gets a value indicating whether the object currently has focus.\n\timportNode<T extends Node>(importedNode: T, deep: boolean): T; // Returns a copy of node. If deep is true, the copy also includes the node's descendants.\n\t// If node is a document or a shadow root, throws a 'NotSupportedError' DOMException.\n\topen(url?: string, name?: string, features?: string, replace?: boolean): Document; // Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the url parameter and the name parameter to collect the output of the write method and the writeln method.\n\t// @param url Specifies a MIME type for the document.\n\t// @param name Specifies the name of the window. This name is used as the value for the TARGET attribute on a form or an anchor element.\n\t// @param features Contains a list of items separated by commas. Each item consists of an option and a value, separated by an equals sign (for example, \"fullscreen=yes, toolbar=yes\"). The following values are supported.\n\t// @param replace Specifies whether the existing entry for the document is replaced in the history list.\n\tqueryCommandEnabled(commandId: string): boolean; // Returns a Boolean value that indicates whether a specified command can be successfully executed using execCommand, given the current state of the document.\n\t// @param commandId Specifies a command identifier.\n\tqueryCommandIndeterm(commandId: string): boolean; // Returns a Boolean value that indicates whether the specified command is in the indeterminate state.\n\t// @param commandId String that specifies a command identifier.\n\tqueryCommandState(commandId: string): boolean; // Returns a Boolean value that indicates the current state of the command.\n\t// @param commandId String that specifies a command identifier.\n\tqueryCommandSupported(commandId: string): boolean; // Returns a Boolean value that indicates whether the current command is supported on the current range.\n\t// @param commandId Specifies a command identifier.\n\tqueryCommandValue(commandId: string): string; // Returns the current value of the document, range, or current selection for the given command.\n\t// @param commandId String that specifies a command identifier.\n\twrite(...text: string[]): void; // Writes one or more HTML expressions to a document in the specified window.\n\t// @param content Specifies the text and HTML tags to write.\n\twriteln(...text: string[]): void; // Writes one or more HTML expressions, followed by a carriage return, to a document in the specified window.\n\t// @param content The text and HTML tags to write.\n\taddEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;\n\taddEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;\n\tremoveEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;\n\tremoveEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;\n\t// DEPRECATED !!!\n\t// Sets or gets the color of all active links in the document.\n\t// @deprecated\n\t// alinkColor: string; // Returns a reference to the collection of elements contained by the object.\n\t// @deprecated\n\t// readonly all: HTMLAllCollection; // Retrieves a collection of all a objects that have a name and/or id property. Objects in this collection are in HTML source order.\n\t// @deprecated\n\t// readonly anchors: HTMLCollectionOf<HTMLAnchorElement>; // Retrieves a collection of all applet objects in the document.\n\t// @deprecated\n\t// readonly applets: HTMLCollectionOf<HTMLAppletElement>; // Deprecated. Sets or retrieves a value that indicates the background color behind the object.\n\t// @deprecated\n\t// bgColor: string; // Sets or gets the foreground (text) color of the document.\n\t// @deprecated\n\t// fgColor: string; // @deprecated\n\t// readonly fullscreen: boolean; // Sets or gets the color of the document links.\n\t// @deprecated\n\t// linkColor: string; // Sets or gets the color of the links that the user has visited.\n\t// @deprecated\n\t// vlinkColor: string; // @deprecated\n\t// captureEvents(): void; // @deprecated\n\t// caretRangeFromPoint(x: number, y: number): Range; // @deprecated\n\t// clear(): void; // @deprecated\n\t// releaseEvents(): void;\n\t*/\n}\n\nexport class RxDocument extends RxElement {\n\tprivate location_: ILocation = RxLocation.location;\n\tget location() {\n\t\treturn this.location_;\n\t}\n\tget URL(): string {\n\t\treturn this.location_.href;\n\t}\n\tget hidden(): true {\n\t\treturn true;\n\t}\n\tget visibilityState(): 'prerender' {\n\t\treturn 'prerender';\n\t}\n\tget doctype(): RxDocumentType | null {\n\t\treturn this.childNodes.find(x => isRxDocumentType(x)) as RxDocumentType;\n\t}\n\tget head(): RxElement {\n\t\t// console.log('childNodes', this.childNodes);\n\t\tlet head: RxElement | null = this.documentElement.childNodes.find(x => isRxElement(x) && x.nodeName === 'head') as RxElement;\n\t\tif (!head) {\n\t\t\thead = new RxElement(this.documentElement, 'head');\n\t\t\tthis.documentElement.append(head);\n\t\t}\n\t\treturn head;\n\t}\n\tget body(): RxElement | null {\n\t\tlet body: RxElement | null = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'body') as RxElement;\n\t\tif (!body) {\n\t\t\tbody = new RxElement(this.documentElement, 'body');\n\t\t\tthis.documentElement.append(body);\n\t\t}\n\t\treturn body;\n\t}\n\tget title(): string | null {\n\t\tconst title = this.head.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\n\t\tif (title) {\n\t\t\treturn title.innerText;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\tset title(nodeValue: string | null) {\n\t\tlet title: RxElement | null = this.head.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement | null;\n\t\tif (!title) {\n\t\t\ttitle = new RxElement(this.head, 'title');\n\t\t}\n\t\ttitle.innerText = nodeValue;\n\t}\n\tget documentElement(): RxElement {\n\t\tlet element: RxElement | null = this.firstElementChild;\n\t\tif (!element) {\n\t\t\telement = new RxElement(this, 'html');\n\t\t}\n\t\treturn element;\n\t}\n\n\t/*\n\t\treadonly characterSet: string; // Returns document's encoding.\n\t\treadonly charset: string; // Gets or sets the character set used to encode the object.\n\t\treadonly compatMode: string; // Gets a value that indicates whether standards-compliant mode is switched on for the object.\n\t\treadonly contentType: string; // Returns document's content type.\n\t\treadonly currentScript: HTMLOrSVGScriptElement | null; // Returns the script element, or the SVG script element, that is currently executing, as long as the element represents a classic script. In the case of reentrant script execution, returns the one that most recently started executing amongst those that have not yet finished executing.\n\t\treadonly defaultView: (WindowProxy & typeof globalThis) | null; // Returns null if the Document is not currently executing a script or SVG script element (e.g., because the running script is an event handler, or a timeout), or if the currently executing script or SVG script element represents a module script.\n\t\treadonly documentElement: HTMLElement; // Gets a reference to the root node of the document.\n\t\treadonly documentURI: string; // Returns document's URL.\n\t\treadonly embeds: HTMLCollectionOf<HTMLEmbedElement>; // Retrieves a collection of all embed objects in the document.\n\t\treadonly forms: HTMLCollectionOf<HTMLFormElement>; // Retrieves a collection, in source order, of all form objects in the document.\n\t\treadonly fullscreenEnabled: boolean; // Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.\n\t\treadonly head: HTMLHeadElement; // Returns the head element.\n\t\treadonly hidden: boolean;\n\t\treadonly images: HTMLCollectionOf<HTMLImageElement>; // Retrieves a collection, in source order, of img objects in the document.\n\t\treadonly implementation: DOMImplementation; // Gets the implementation object of the current document.\n\t\treadonly inputEncoding: string; // Returns the character encoding used to create the webpage that is loaded into the document object.\n\t\treadonly lastModified: string; // Gets the date that the page was last modified, if the page supplies one.\n\t\treadonly links: HTMLCollectionOf<HTMLAnchorElement | HTMLAreaElement>; // Retrieves a collection of all a objects that specify the href property and all area objects in the document.\n\t\treadonly origin: string; // Returns document's origin.\n\t\treadonly ownerDocument: null;\n\t\treadonly plugins: HTMLCollectionOf<HTMLEmbedElement>; // Return an HTMLCollection of the embed elements in the Document.\n\t\treadonly readyState: DocumentReadyState; // Retrieves a value that indicates the current state of the object.\n\t\treadonly referrer: string; // Gets the URL of the location that referred the user to the current page.\n\t\treadonly scripts: HTMLCollectionOf<HTMLScriptElement>; // Retrieves a collection of all script objects in the document.\n\t\treadonly scrollingElement: Element | null;\n\t\treadonly timeline: DocumentTimeline;\n\t\treadonly visibilityState: VisibilityState;\n\t\t*/\n\n\tconstructor() {\n\t\tsuper(null, '#document');\n\t\tthis.nodeType = RxNodeType.DOCUMENT_NODE;\n\t\tthis.childNodes = [];\n\t}\n\tcreateAttribute() { }\n\t// Creates a new Attr object and returns it.\n\tcreateAttributeNS() { }\n\t// Creates a new attribute node in a given namespace and returns it.\n\tcreateCDATASection() { }\n\t// Creates a new CDATA node and returns it.\n\tcreateComment(nodeValue: string) {\n\t\treturn new RxComment(null, nodeValue);\n\t}\n\t// Creates a new comment node and returns it.\n\tcreateDocumentFragment() {\n\t\treturn new RxDocumentFragment();\n\t}\n\t// Creates a new document fragment.\n\tcreateElement(nodeName: string): RxElement {\n\t\treturn new RxElement(null, nodeName);\n\t}\n\t// Creates a new element with the given tag name.\n\tcreateElementNS(nodeName: string): RxElement {\n\t\treturn new RxElement(null, nodeName);\n\t}\n\t// Creates a new element with the given tag name and namespace URI.\n\tcreateEvent() { }\n\t// Creates an event object.\n\tcreateNodeIterator() { }\n\t// Creates a NodeIterator object.\n\tcreateProcessingInstruction(nodeValue: string) {\n\t\treturn new RxProcessingInstruction(null, nodeValue);\n\t}\n\t// Creates a new ProcessingInstruction object.\n\tcreateRange() { }\n\t// Creates a Range object.\n\tcreateTextNode(nodeValue: string) {\n\t\treturn new RxText(null, nodeValue);\n\t}\n\t// Creates a text node.\n\tcreateTouchList() { }\n\t// Creates a TouchList object.\n\tcreateTreeWalker() { }\n\t// Creates a TreeWalker object.\n\tserialize(): string {\n\t\treturn `${this.childNodes.map(x => x.serialize()).join('')}`;\n\t}\n}\n\nexport function isRxElement(x: RxNode): x is RxElement {\n\treturn x.nodeType === RxNodeType.ELEMENT_NODE;\n}\n\nexport function isRxText(x: RxNode): x is RxText {\n\treturn x.nodeType === RxNodeType.TEXT_NODE;\n}\n\nexport function isRxComment(x: RxNode): x is RxComment {\n\treturn x.nodeType === RxNodeType.COMMENT_NODE;\n}\n\nexport function isRxDocument(x: RxNode): x is RxDocument {\n\treturn x.nodeType === RxNodeType.DOCUMENT_NODE;\n}\n\nexport function isRxDocumentFragment(x: RxNode): x is RxDocumentFragment {\n\treturn x.nodeType === RxNodeType.DOCUMENT_FRAGMENT_NODE;\n}\n\nexport function isRxDocumentType(x: RxNode): x is RxDocumentType {\n\treturn x.nodeType === RxNodeType.DOCUMENT_TYPE_NODE;\n}\n\nexport function isRxProcessingInstruction(x: RxNode): x is RxProcessingInstruction {\n\treturn x.nodeType === RxNodeType.PROCESSING_INSTRUCTION_NODE;\n}\n\nexport function parse(html: string) {\n\tconst doc = new RxDocument();\n\tlet parentNode: RxElement = doc,\n\t\tnode;\n\tconst parser = new Parser(\n\t\t{\n\t\t\tonopentag: (nodeName, attributes) => {\n\t\t\t\t// console.log(nodeName);\n\t\t\t\tnode = new RxElement(parentNode, nodeName, attributes);\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t\tparentNode = node;\n\t\t\t\t// if (NO_CHILDS.indexOf(nodeName) === -1) {\n\t\t\t\t//\tconsole.log(nodeName);\n\t\t\t\t//\tparentNode = node;\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonclosetag: (nodeName) => {\n\t\t\t\tif (parentNode.parentNode) {\n\t\t\t\t\tparentNode = parentNode.parentNode;\n\t\t\t\t}\n\t\t\t},\n\t\t\tontext: (nodeValue) => {\n\t\t\t\t// console.log('ontext', nodeValue);\n\t\t\t\t// if (nodeValue.length) {\n\t\t\t\tconst textNode = new RxText(parentNode, nodeValue);\n\t\t\t\tparentNode.childNodes.push(textNode);\n\t\t\t\t// }\n\t\t\t},\n\t\t\tonprocessinginstruction: (nodeName, nodeValue) => {\n\t\t\t\t// console.log('onprocessinginstruction', nodeName, nodeValue);\n\t\t\t\tif (nodeName === '!doctype') {\n\t\t\t\t\tnode = new RxDocumentType(parentNode, nodeValue);\n\t\t\t\t} else {\n\t\t\t\t\tnode = new RxProcessingInstruction(parentNode, nodeValue);\n\t\t\t\t}\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t},\n\t\t\toncomment: nodeValue => {\n\t\t\t\t// console.log('oncomment', nodeValue);\n\t\t\t\tnode = new RxComment(parentNode, nodeValue);\n\t\t\t\tparentNode.childNodes.push(node);\n\t\t\t\t// parentNode = node;\n\t\t\t},\n\t\t\toncommentend: () => {\n\t\t\t\t// console.log('oncommentend');\n\t\t\t\t// parentNode = parentNode.parentNode;\n\t\t\t},\n\t\t\t/*\n\t\t\toncdatastart: () => {\n\t\t\t\tconsole.log('oncdatastart');\n\t\t\t},\n\t\t\toncdataend: () => {\n\t\t\t\tconsole.log('oncdataend');\n\t\t\t},\n\t\t\tonerror: error => {\n\t\t\t\tconsole.log('error', error);\n\t\t\t},\n\t\t\tonopentagname: (name) => {\n\t\t\t\tconsole.log('onopentagname', name);\n\t\t\t},\n\t\t\tonattribute: (name, value) => {\n\t\t\t\tconsole.log('onattribute', name, value);\n\t\t\t},\n\t\t\tonreset: () => {\n\t\t\t\tconsole.log('reset');\n\t\t\t},\n\t\t\tonend: () => {\n\t\t\t\tconsole.log('end');\n\t\t\t},\n\t\t\t*/\n\t\t},\n\t\t{\n\t\t\tdecodeEntities: false,\n\t\t\tlowerCaseTags: true,\n\t\t}\n\t);\n\tparser.write(html);\n\tparser.end();\n\treturn doc;\n}\n\nexport function getQueries(selector: string): RxQuery[] {\n\tconst queries: RxQuery[] = [];\n\tselector\n\t\t.trim()\n\t\t.split(' ')\n\t\t.forEach((x: string) => {\n\t\t\tx.trim()\n\t\t\t\t.split('>')\n\t\t\t\t.forEach((x, i) => {\n\t\t\t\t\t// const regex = /\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)/g;\n\t\t\t\t\t// const regex = /\\#([^\\.[#]+)|\\.([^\\.[#]+)|\\[([^\\.\\[#]+)\\]|([^\\.\\[#\\]]+)/g;\n\t\t\t\t\tconst regex = /\\:not\\(\\#([^\\.[#:]+)\\)|\\:not\\(\\.([^\\.[#:]+)\\)|\\:not\\(\\[([^\\.\\[#:]+)\\]\\)|\\:not\\(([^\\.\\[#:\\]]+)\\)|\\#([^\\.[#:]+)|\\.([^\\.[#:]+)|\\[([^\\.\\[#:]+)\\]|([^\\.\\[#:\\]]+)/g;\n\t\t\t\t\t/* eslint no-useless-escape: \"off\" */\n\t\t\t\t\tconst selectors = [];\n\t\t\t\t\tconst matches = x.matchAll(regex);\n\t\t\t\t\tfor (const match of matches) {\n\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[1], type: SelectorType.Id, negate: true });\n\t\t\t\t\t\t} else if (match[2]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[2], type: SelectorType.Class, negate: true });\n\t\t\t\t\t\t} else if (match[3]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[3], type: SelectorType.Attribute, negate: true });\n\t\t\t\t\t\t} else if (match[4]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[4], type: SelectorType.TagName, negate: true });\n\t\t\t\t\t\t} else if (match[5]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[5], type: SelectorType.Id, negate: false });\n\t\t\t\t\t\t} else if (match[6]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[6], type: SelectorType.Class, negate: false });\n\t\t\t\t\t\t} else if (match[7]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[7], type: SelectorType.Attribute, negate: false });\n\t\t\t\t\t\t} else if (match[8]) {\n\t\t\t\t\t\t\tselectors.push({ selector: match[8], type: SelectorType.TagName, negate: false });\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// console.log('match', match);\n\t\t\t\t\t}\n\t\t\t\t\tconst selector =\n\t\t\t\t\t\ti > 0\n\t\t\t\t\t\t\t? { selector: x, selectors, inner: true }\n\t\t\t\t\t\t\t: { selector: x, selectors, inner: false };\n\t\t\t\t\tqueries.push.call(queries, selector);\n\t\t\t\t});\n\t\t});\n\treturn queries;\n}\n\nexport function matchSelector(child: RxElement, selector: RxSelector): boolean {\n\tswitch (selector.type) {\n\t\tcase SelectorType.Id:\n\t\t\treturn (selector.selector !== '' && child.attributes.id === selector.selector) !== selector.negate;\n\t\tcase SelectorType.Class:\n\t\t\treturn (child.classList.indexOf(selector.selector) !== -1) !== selector.negate;\n\t\tcase SelectorType.Attribute:\n\t\t\treturn (Object.keys(child.attributes).indexOf(selector.selector) !== -1) !== selector.negate;\n\t\tcase SelectorType.TagName:\n\t\t\treturn (child.nodeName === selector.selector) !== selector.negate;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nexport function matchSelectors(child: RxElement, selectors: RxSelector[]): boolean {\n\treturn selectors.reduce(function (p: boolean, selector: RxSelector) {\n\t\treturn p && matchSelector(child, selector);\n\t}, true);\n}\n\nexport function querySelectorAll(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null, nodes: RxElement[] = []): RxElement[] | null {\n\tif (query || queries.length) {\n\t\tquery = query || queries.shift() as RxQuery;\n\t\tfor (let child of childNodes) {\n\t\t\tif (child instanceof RxElement) {\n\t\t\t\tif (matchSelectors(child, query.selectors)) {\n\t\t\t\t\t// console.log(query);\n\t\t\t\t\tif (queries.length) {\n\t\t\t\t\t\tconst results: RxElement[] | null = querySelectorAll(queries, child.childNodes);\n\t\t\t\t\t\tif (results) {\n\t\t\t\t\t\t\tArray.prototype.push.apply(nodes, results);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodes.push(child);\n\t\t\t\t\t}\n\t\t\t\t} else if (!query.inner) {\n\t\t\t\t\tconst results: RxElement[] | null = querySelectorAll(queries, child.childNodes, query);\n\t\t\t\t\tif (results) {\n\t\t\t\t\t\tArray.prototype.push.apply(nodes, results);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn nodes.length ? nodes : null;\n}\n\nexport function querySelector(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null): RxElement | null {\n\tlet node = null;\n\tif (query || queries.length) {\n\t\tquery = query || queries.shift() as RxQuery;\n\t\tfor (let child of childNodes) {\n\t\t\tif (child instanceof RxElement) {\n\t\t\t\tif (matchSelectors(child, query.selectors)) {\n\t\t\t\t\t// console.log(query);\n\t\t\t\t\tif (queries.length) {\n\t\t\t\t\t\treturn querySelector(queries, child.childNodes);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn child;\n\t\t\t\t\t}\n\t\t\t\t} else if (!query.inner) {\n\t\t\t\t\tnode = querySelector(queries, child.childNodes, query);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn node;\n}\n\nexport function cloneNode(source: RxNode, deep: boolean = false, parentNode: RxElement | null = null): RxNode {\n\tlet node: RxNode;\n\tif (isRxElement(source)) {\n\t\tconst nodeElement: RxElement = new RxElement(\n\t\t\tparentNode,\n\t\t\tsource.nodeName,\n\t\t\tObject.assign({}, source.attributes),\n\t\t);\n\t\tif (deep) {\n\t\t\tnodeElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeElement]));\n\t\t}\n\t\tnode = nodeElement;\n\t} else if (isRxDocumentFragment(source)) {\n\t\tconst nodeDocumentFragment: RxDocumentFragment = new RxDocumentFragment();\n\t\tif (deep) {\n\t\t\tnodeDocumentFragment.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeDocumentFragment]));\n\t\t}\n\t\tnode = nodeDocumentFragment;\n\t} else if (isRxText(source)) {\n\t\tnode = new RxText(parentNode, source.nodeValue);\n\t} else if (isRxComment(source)) {\n\t\tnode = new RxComment(parentNode, source.nodeValue);\n\t} else if (isRxDocument(source)) {\n\t\tconst documentElement: RxDocument = new RxDocument();\n\t\tif (deep) {\n\t\t\tdocumentElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, documentElement]));\n\t\t}\n\t\tnode = documentElement;\n\t} else {\n\t\tthrow new Error('Invalid node type');\n\t}\n\treturn node;\n}\n","import { getLocationComponents, ILocationInit } from \"rxcomp\";\r\n\r\nexport interface IDOMStringList extends DOMStringList {\r\n\t// Returns the number of strings in strings.\r\n\treadonly length: number;\r\n\t// Returns true if strings contains string, and false otherwise.\r\n\tcontains(string: string): boolean;\r\n\t// Returns the string with index index from strings.\r\n\titem(index: number): string | null;\r\n\t[index: number]: string;\r\n}\r\n\r\nexport class RxDOMStringList extends Array<string> implements IDOMStringList {\r\n\t/*\r\n\tprivate list_: string[] = [];\r\n\tget length(): number {\r\n\t\treturn this.list_.length;\r\n\t}\r\n\t*/\r\n\tcontains(string: string): boolean {\r\n\t\t// return this.list_.indexOf(string) !== -1;\r\n\t\treturn this.indexOf(string) !== -1;\r\n\t}\r\n\titem(index: number): string | null {\r\n\t\t// if (index > 0 && index < this.list_.length) {\r\n\t\tif (index > 0 && index < this.length) {\r\n\t\t\t// return this.list_[index];\r\n\t\t\treturn this[index];\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\t// [index: number]: string;\r\n}\r\n\r\nexport interface ILocation extends Location {\r\n\t/*\r\n\thash: string; // Returns the Location object's URL's fragment (includes leading \"#\" if non-empty). Can be set, to navigate to the same URL with a changed fragment (ignores leading \"#\").\r\n\thost: string; // Returns the Location object's URL's host and port (if different from the default port for the scheme). Can be set, to navigate to the same URL with a changed host and port.\r\n\thostname: string; // Returns the Location object's URL's host. Can be set, to navigate to the same URL with a changed host.\r\n\tpathname: string; // Returns the Location object's URL's path. Can be set, to navigate to the same URL with a changed path.\r\n\tport: string; // Returns the Location object's URL's port. Can be set, to navigate to the same URL with a changed port.\r\n\tprotocol: string; // Returns the Location object's URL's scheme. Can be set, to navigate to the same URL with a changed scheme.\r\n\tsearch: string; // Returns the Location object's URL's query (includes leading \"?\" if non-empty). Can be set, to navigate to the same URL with a changed query (ignores leading \"?\").\r\n\thref: string; // Returns the Location object's URL. Can be set, to navigate to the given URL.\r\n\treadonly origin: string; // Returns the Location object's URL's origin.\r\n\treadonly ancestorOrigins: DOMStringList; // Returns a DOMStringList object listing the origins of the ancestor browsing contexts, from the parent browsing context to the top-level browsing context.\r\n\tassign(url: string): void; // Navigates to the given URL.\r\n\treload(): void; // reload(forcedReload: boolean): void; // @deprecated\r\n\treplace(url: string): void; // Removes the current page from the session history and navigates to the given URL.\r\n\ttoString(): string;\r\n\t*/\r\n}\r\n\r\nexport class RxLocation implements ILocation {\r\n\t/*\r\n\thash: string = '';\r\n\thost: string = '';\r\n\thostname: string = '';\r\n\tpathname: string = '';\r\n\tport: string = '';\r\n\tprotocol: string = '';\r\n\tsearch: string = '';\r\n\t*/\r\n\r\n\tprivate hash_: string = '';\r\n\tget hash(): string { return this.hash_; }\r\n\tset hash(hash: string) { this.hash_ = hash; this.href = this.href; }\r\n\r\n\tprivate host_: string = '';\r\n\tget host(): string { return this.host_; }\r\n\tset host(host: string) { this.host_ = host; this.href = this.href; }\r\n\r\n\tprivate hostname_: string = '';\r\n\tget hostname(): string { return this.hostname_; }\r\n\tset hostname(hostname: string) { this.hostname_ = hostname; this.href = this.href; }\r\n\r\n\tprivate pathname_: string = '';\r\n\tget pathname(): string { return this.pathname_; }\r\n\tset pathname(pathname: string) { this.pathname_ = pathname; this.href = this.href; }\r\n\r\n\tprivate port_: string = '';\r\n\tget port(): string { return this.port_; }\r\n\tset port(port: string) { this.port_ = port; this.href = this.href; }\r\n\r\n\tprivate protocol_: string = '';\r\n\tget protocol(): string { return this.protocol_; }\r\n\tset protocol(protocol: string) { this.protocol_ = protocol; this.href = this.href; }\r\n\r\n\tprivate search_: string = '';\r\n\tget search(): string { return this.search_; }\r\n\tset search(search: string) { this.search_ = search; this.href = this.href; }\r\n\r\n\tprivate href_: string = '';\r\n\tget href(): string {\r\n\t\tconst href: string = `${this.protocol}//${this.host}${this.port.length ? `:${this.port}` : ``}${this.pathname}${this.search}${this.hash}`;\r\n\t\tthis.href_ = href;\r\n\t\treturn href;\r\n\t}\r\n\tset href(href: string) {\r\n\t\tif (this.href_ !== href) {\r\n\t\t\tthis.href_ = href;\r\n\t\t\tconst location: ILocationInit = getLocationComponents(href);\r\n\t\t\tthis.protocol_ = location.protocol;\r\n\t\t\tthis.host_ = location.host;\r\n\t\t\tthis.hostname_ = location.hostname;\r\n\t\t\tthis.port_ = location.port;\r\n\t\t\tthis.pathname_ = location.pathname;\r\n\t\t\tthis.search_ = location.search;\r\n\t\t\tthis.hash_ = location.hash;\r\n\t\t}\r\n\t}\r\n\tget origin(): string {\r\n\t\treturn `${this.protocol}//${this.host}${this.port.length ? `:${this.port}` : ``}`;\r\n\t}\r\n\tprivate ancestorOrigins_: IDOMStringList = new RxDOMStringList();\r\n\tget ancestorOrigins(): DOMStringList {\r\n\t\treturn this.ancestorOrigins_;\r\n\t}\r\n\tassign(url: string): void {\r\n\t\tthis.href = url;\r\n\t}\r\n\treload(): void { }\r\n\treplace(url: string): void {\r\n\t\tthis.href = url;\r\n\t}\r\n\ttoString(): string {\r\n\t\treturn this.href;\r\n\t}\r\n\tprivate static location_: ILocation;\r\n\tstatic get location(): ILocation {\r\n\t\tif (this.location_) {\r\n\t\t\treturn this.location_;\r\n\t\t} else {\r\n\t\t\treturn this.location_ = new RxLocation();\r\n\t\t}\r\n\t}\r\n}\r\n","import { RxLocation } from \"../location/location\";\r\n\r\nexport interface IHistoryItem {\r\n\tdata: any;\r\n\ttitle: string;\r\n\turl?: string | null;\r\n}\r\n\r\nexport interface IHistory extends History {\r\n\t/*\r\n\treadonly length: number;\r\n    scrollRestoration: ScrollRestoration;\r\n    readonly state: any;\r\n    back(): void;\r\n    forward(): void;\r\n    go(delta?: number): void;\r\n    pushState(data: any, title: string, url?: string | null): void;\r\n\treplaceState(data: any, title: string, url?: string | null): void;\r\n\t*/\r\n}\r\n\r\nexport class RxHistory implements IHistory {\r\n\tprivate currentIndex_: number = 0;\r\n\tprivate history_: IHistoryItem[] = [];\r\n\tget length(): number {\r\n\t\treturn this.history_.length;\r\n\t}\r\n\tscrollRestoration: ScrollRestoration = 'auto';\r\n\tstate: any;\r\n\tback(): void {\r\n\t\tif (this.currentIndex_ > 0) {\r\n\t\t\tthis.currentIndex_--;\r\n\t\t\tconst item: IHistoryItem = this.history_[this.currentIndex_];\r\n\t\t\tif (item.url) RxLocation.location.href = item.url;\r\n\t\t}\r\n\t};\r\n\tforward(): void {\r\n\t\tif (this.currentIndex_ < this.history_.length - 1) {\r\n\t\t\tthis.currentIndex_++;\r\n\t\t\tconst item: IHistoryItem = this.history_[this.currentIndex_];\r\n\t\t\tif (item.url) RxLocation.location.href = item.url;\r\n\t\t}\r\n\t};\r\n\tgo(delta?: number): void {\r\n\t\tif (typeof delta === 'number') {\r\n\t\t\tconst index: number = this.currentIndex_ + delta;\r\n\t\t\tif (index > 0 && index < this.history_.length) {\r\n\t\t\t\tconst item: IHistoryItem = this.history_[index];\r\n\t\t\t\tif (item.url) RxLocation.location.href = item.url;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tpushState(data: any, title: string, url?: string | null): void {\r\n\t\tthis.history_.push({ data, title, url });\r\n\t\tthis.currentIndex_ = this.history_.length - 1;\r\n\t};\r\n\treplaceState(data: any, title: string, url?: string | null): void {\r\n\t\tif (this.history_.length) {\r\n\t\t\tthis.history_.splice(this.history_.length - 1, 1, { data, title, url });\r\n\t\t} else {\r\n\t\t\tthis.history_.push({ data, title, url });\r\n\t\t}\r\n\t\tthis.currentIndex_ = this.history_.length - 1;\r\n\t};\r\n\tprivate static history_: History;\r\n\tstatic get history(): IHistory {\r\n\t\tif (this.history_) {\r\n\t\t\treturn this.history_;\r\n\t\t} else {\r\n\t\t\treturn this.history_ = new RxHistory();\r\n\t\t}\r\n\t}\r\n}\r\n","import { isPlatformServer, Module, ModuleError, Platform } from 'rxcomp';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport CacheService, { CacheControlType, CacheMode } from '../cache/cache.service';\r\nimport { IHistory, RxHistory } from '../history/history';\r\nimport { ILocation, RxLocation } from '../location/location';\r\nimport { parse, RxDocument, RxElement, RxText } from '../nodes/nodes';\r\nconst fs = require('fs');\r\n\r\nexport interface IServerVars {\r\n\tname?: string;\r\n\thost?: string;\r\n\tport?: number;\r\n\tcharset?: string;\r\n\ttemplate?: string;\r\n\tcacheMode?: CacheMode;\r\n\tcache?: string;\r\n\troot?: string;\r\n\tresource?: string;\r\n\tapi?: string;\r\n\tstatic?: boolean;\r\n\tdevelopment?: boolean;\r\n\tproduction?: boolean;\r\n\t[key: string]: any;\r\n}\r\n\r\nexport interface IServerRequest {\r\n\turl: string;\r\n\ttemplate?: string;\r\n\tvars?: IServerVars;\r\n}\r\n\r\nexport interface IServerResponse extends IServerRequest {\r\n\tserialize: () => string;\r\n\tbody?: string;\r\n\tstatusCode?: number;\r\n\tstatusMessage?: string;\r\n\tmaxAge?: number;\r\n\tcacheControl?: CacheControlType;\r\n}\r\n\r\nexport interface IServerErrorResponse extends IServerRequest {\r\n\terror: Error;\r\n\tstatusCode?: number;\r\n\tstatusMessage?: string;\r\n}\r\n\r\nexport class ServerRequest implements IServerRequest {\r\n\turl!: string;\r\n\ttemplate!: string;\r\n\tvars!: IServerVars;\r\n\tconstructor(options?: IServerRequest) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t\tthis.vars = Object.assign({\r\n\t\t\thost: 'http://localhost:5000',\r\n\t\t\tport: 5000,\r\n\t\t\tcharset: 'utf8',\r\n\t\t\ttemplate: `./index.html`,\r\n\t\t\tcacheMode: CacheMode.Memory,\r\n\t\t\tcache: './cache/',\r\n\t\t\troot: './dist/browser/',\r\n\t\t}, this.vars || {});\r\n\t}\r\n}\r\n\r\nexport class ServerResponse implements IServerResponse {\r\n\turl!: string;\r\n\ttemplate!: string;\r\n\tvars!: IServerVars;\r\n\tserialize!: () => string;\r\n\tbody!: string;\r\n\tstatusCode?: number;\r\n\tstatusMessage?: string;\r\n\tmaxAge: number = 3600;\r\n\tcacheControl: CacheControlType = CacheControlType.Public;\r\n\tconstructor(options?: IServerResponse) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ServerErrorResponse implements IServerErrorResponse {\r\n\turl!: string;\r\n\tvars!: IServerVars;\r\n\terror!: Error;\r\n\tstatusCode?: number;\r\n\tstatusMessage?: string;\r\n\tconstructor(options?: IServerErrorResponse) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class Server extends Platform {\r\n\r\n\t/**\r\n\t * @param moduleFactory\r\n\t * @description This method returns a Server compiled module\r\n\t */\r\n\tstatic bootstrap(moduleFactory?: typeof Module, request?: ServerRequest) {\r\n\t\tif (!isPlatformServer) {\r\n\t\t\tthrow new ModuleError('missing platform server, node process not found');\r\n\t\t}\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow new ModuleError('missing moduleFactory meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow new ModuleError('missing bootstrap');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta');\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow new ModuleError('missing bootstrap meta selector');\r\n\t\t}\r\n\t\tif (!request?.template) {\r\n\t\t\tthrow new ModuleError('missing template');\r\n\t\t}\r\n\t\t/*\r\n\t\tif (typeof ((ReadableStream.prototype as any)[Symbol.asyncIterator]) === 'undefined') {\r\n\t\t\t(ReadableStream.prototype as any)[Symbol.asyncIterator] = async function* () {\r\n\t\t\t\tconst reader = this.getReader()\r\n\t\t\t\twhile (1) {\r\n\t\t\t\t\tconst r = await reader.read();\r\n\t\t\t\t\tif (r.done) {\r\n\t\t\t\t\t\treturn r.value;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tyield r.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t\tconst document = this.resolveGlobals(request);\r\n\t\tconst meta = this.resolveMeta(moduleFactory);\r\n\t\tif (meta.node instanceof RxElement) {\r\n\t\t\tconst node: RxElement = meta.node as RxElement;\r\n\t\t\tconst nodeInnerHTML = meta.nodeInnerHTML;\r\n\t\t\tconst rxcomp_hydrate_ = {\r\n\t\t\t\tselector: moduleFactory.meta.bootstrap.meta.selector,\r\n\t\t\t\tinnerHTML: nodeInnerHTML,\r\n\t\t\t};\r\n\t\t\tconst scriptNode = new RxElement(null, 'script');\r\n\t\t\tconst scriptText = new RxText(null, `var rxcomp_hydrate_ = ${JSON.stringify(rxcomp_hydrate_)};`);\r\n\t\t\tscriptNode.append(scriptText);\r\n\t\t\tnode.parentNode?.insertBefore(scriptNode, node);\r\n\t\t}\r\n\t\tconst module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tmeta.imports.forEach((moduleFactory: typeof Module) => {\r\n\t\t\tmoduleFactory.prototype.constructor.call(module);\r\n\t\t});\r\n\t\tconst instances = module.compile(meta.node, { document } as Window);\r\n\t\tmodule.instances = instances;\r\n\t\tconst root = instances[0];\r\n\t\troot.pushChanges();\r\n\t\treturn module;\r\n\t}\r\n\r\n\tstatic serialize(): string {\r\n\t\t// console.log('Server.serialize');\r\n\t\tif (this.document instanceof RxDocument) {\r\n\t\t\tconst serialized = this.document.serialize();\r\n\t\t\t// console.log('serialized', serialized);\r\n\t\t\treturn serialized;\r\n\t\t} else {\r\n\t\t\tthrow new ModuleError('document is not an instance of RxDocument');\r\n\t\t}\r\n\t}\r\n\r\n\tprotected static document: Document | RxDocument;\r\n\r\n\tprotected static resolveGlobals(request: ServerRequest): Document | RxDocument {\r\n\t\tconst url: string = request.url;\r\n\t\tconst location: ILocation = RxLocation.location;\r\n\t\tlocation.assign(url);\r\n\t\tglobal.location = location;\r\n\t\tconst history: IHistory = RxHistory.history;\r\n\t\thistory.replaceState(null, '', location.origin);\r\n\t\tglobal.history = history;\r\n\t\tconst documentOrHtml: Document | string = request.template!;\r\n\t\tconst document: Document | RxDocument = typeof documentOrHtml === 'string' ? parse(documentOrHtml) : documentOrHtml;\r\n\t\tthis.document = document as unknown as Document; // !!!\r\n\t\tglobal.document = this.document;\r\n\t\thistory.replaceState(null, document.title || '', location.origin);\r\n\t\treturn this.document;\r\n\t}\r\n\r\n\tstatic render$ = render$;\r\n\tstatic template$ = template$;\r\n\tstatic bootstrap$ = bootstrap$;\r\n}\r\n\r\nexport function render$(iRequest: IServerRequest, renderRequest$: (request: ServerRequest) => Observable<ServerResponse>): Observable<ServerResponse> {\r\n\treturn Observable.create(function (observer: Observer<ServerResponse>) {\r\n\t\tconst request: ServerRequest = new ServerRequest(iRequest);\r\n\t\tif (request.vars.cacheMode) {\r\n\t\t\tCacheService.mode = request.vars.cacheMode;\r\n\t\t}\r\n\t\tif (request.vars.cache) {\r\n\t\t\tCacheService.folder = request.vars.cache;\r\n\t\t}\r\n\t\tconst render = CacheService.get('render', request.url);\r\n\t\tconsole.log('Server.render$.fromCache', 'route', request.url, !!render);\r\n\t\tif (render) {\r\n\t\t\tobserver.next(render);\r\n\t\t\treturn observer.complete();\r\n\t\t}\r\n\t\ttemplate$(request).pipe(\r\n\t\t\tswitchMap((template: string) => {\r\n\t\t\t\t// console.log('template!', template);\r\n\t\t\t\trequest.template = template;\r\n\t\t\t\treturn renderRequest$(request);\r\n\t\t\t})\r\n\t\t).subscribe(\r\n\t\t\t(response: ServerResponse) => {\r\n\t\t\t\tCacheService.set('render', request.url, response, response.maxAge, response.cacheControl);\r\n\t\t\t\tobserver.next(response);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tobserver.error(error);\r\n\t\t\t}\r\n\t\t);\r\n\t});\r\n}\r\n\r\nexport function template$(request: ServerRequest): Observable<string> {\r\n\treturn Observable.create(function (observer: Observer<string>) {\r\n\t\tconst src = request.vars.template;\r\n\t\tif (src) {\r\n\t\t\tconst template = CacheService.get('template', src);\r\n\t\t\tconsole.log('Server.template$.fromCache', 'path', src, !!template);\r\n\t\t\tif (template) {\r\n\t\t\t\tobserver.next(template);\r\n\t\t\t\tobserver.complete();\r\n\t\t\t}\r\n\t\t\tfs.readFile(src, request.vars.charset, function (error: NodeJS.ErrnoException, template: string) {\r\n\t\t\t\tif (error) {\r\n\t\t\t\t\tobserver.error(error);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tCacheService.set('template', src, template, 3600);\r\n\t\t\t\t\tobserver.next(template);\r\n\t\t\t\t\tobserver.complete();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tobserver.error(new Error('ServerError: missing template'));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function bootstrap$(moduleFactory: typeof Module, request: ServerRequest): Observable<ServerResponse> {\r\n\t// console.log('Server.bootstrap$', request);\r\n\treturn Observable.create(function (observer: Observer<ServerResponse>) {\r\n\t\tif (!request.template) {\r\n\t\t\treturn observer.error(new Error('ServerError: missing template'));\r\n\t\t}\r\n\t\ttry {\r\n\t\t\t// const module = Server.bootstrap(moduleFactory, request.template);\r\n\t\t\tServer.bootstrap(moduleFactory, request);\r\n\t\t\tconst serialize = () => Server.serialize();\r\n\t\t\tobserver.next(new ServerResponse(Object.assign({ serialize }, request) as IServerResponse));\r\n\t\t\tobserver.complete();\r\n\t\t} catch (error) {\r\n\t\t\tobserver.error(new ServerErrorResponse(Object.assign({ error }, request) as IServerErrorResponse));\r\n\t\t}\r\n\t});\r\n}\r\n","import { Factory, IModuleMeta, Module, Pipe } from 'rxcomp';\n\nconst factories: typeof Factory[] = [\n];\n\nconst pipes: typeof Pipe[] = [\n];\n\n/**\n *  ServerModule Class.\n * @example\n * export default class AppModule extends Module {}\n *\n * AppModule.meta = {\n *  imports: [\n *   CoreModule,\n *    ServerModule\n *  ],\n *  declarations: [\n *   ErrorsComponent\n *  ],\n *  bootstrap: AppComponent,\n * };\n * @extends Module\n */\nexport default class ServerModule extends Module {\n\n\tstatic meta: IModuleMeta = {\n\t\tdeclarations: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t],\n\t\texports: [\n\t\t\t...factories,\n\t\t\t...pipes,\n\t\t]\n\t};\n\n}\n"]}