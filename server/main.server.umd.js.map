{"version":3,"file":"test/js/main.server.ts","sources":["../src/renderer/node.ts","../src/renderer/renderer.ts","../src/platform/server.ts","../test/js/http/http.service.ts","../test/js/app.component.ts","../test/js/app.module.ts","../test/js/main.server.ts"],"sourcesContent":["import { Parser } from 'htmlparser2';\r\n\r\n/*\r\nexport const NO_CHILDS = [\r\n\t'title',\r\n\t'base',\r\n\t'meta',\r\n\t'link',\r\n\t'img',\r\n\t'br',\r\n\t'input',\r\n];\r\n\r\nconst SKIP = [\r\n\t'html',\r\n\t'head',\r\n\t'title',\r\n\t'base',\r\n\t'meta',\r\n\t'script',\r\n\t'link',\r\n\t'body',\r\n];\r\n*/\r\n\r\n///\r\n/*\r\nif (true) {\r\n\tdocument.createComment = nodeValue => {\r\n\t\treturn new RxComment(null, nodeValue);\r\n\t};\r\n\tdocument.createTextNode = nodeValue => {\r\n\t\treturn new RxText(null, nodeValue);\r\n\t};\r\n}\r\n*/\r\n///\r\n\r\nexport enum RxNodeType {\r\n\tELEMENT_NODE = 1, //\tUn nodo Element come <p> o <div>.\r\n\tTEXT_NODE = 3, //\tL'attuale Text dentro un Element o Attr.\r\n\tCDATA_SECTION_NODE = 4, //\tUna CDATASection, ad esempio <!CDATA[[ … ]]>.\r\n\tPROCESSING_INSTRUCTION_NODE = 7, //\tUna ProcessingInstruction di un documento XML, come <?xml-stylesheet … ?>.\r\n\tCOMMENT_NODE = 8, //\tUn nodo Comment, come <!-- … -->.\r\n\tDOCUMENT_NODE = 9, //\tUn nodo Document.\r\n\tDOCUMENT_TYPE_NODE = 10, //\tUn nodo DocumentType, come <!DOCTYPE html>.\r\n\tDOCUMENT_FRAGMENT_NODE = 11, //\tUn nodo DocumentFragment.\r\n}\r\n\r\nexport enum SelectorType {\r\n\tNone = -1,\r\n\tId = 0,\r\n\tClass = 1,\r\n\tAttribute = 2,\r\n\tTagName = 3,\r\n}\r\n\r\nexport function isRxElement(x: RxNode): x is RxElement {\r\n\treturn x.nodeType === RxNodeType.ELEMENT_NODE;\r\n}\r\nexport function isRxText(x: RxNode): x is RxText {\r\n\treturn x.nodeType === RxNodeType.TEXT_NODE;\r\n}\r\nexport function isRxComment(x: RxNode): x is RxComment {\r\n\treturn x.nodeType === RxNodeType.COMMENT_NODE;\r\n}\r\nexport function isRxDocument(x: RxNode): x is RxDocument {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_NODE;\r\n}\r\nexport function isRxDocumentFragment(x: RxNode): x is RxDocumentFragment {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_FRAGMENT_NODE;\r\n}\r\nexport function isRxDocumentType(x: RxNode): x is RxDocumentType {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_TYPE_NODE;\r\n}\r\nexport function isRxProcessingInstruction(x: RxNode): x is RxProcessingInstruction {\r\n\treturn x.nodeType === RxNodeType.PROCESSING_INSTRUCTION_NODE;\r\n}\r\n\r\nexport function parse(html: string) {\r\n\tconst doc = new RxDocument();\r\n\tlet parentNode: RxElement = doc,\r\n\t\tnode;\r\n\tconst parser = new Parser(\r\n\t\t{\r\n\t\t\tonopentag: (nodeName, attributes) => {\r\n\t\t\t\t// console.log(nodeName);\r\n\t\t\t\tnode = new RxElement(parentNode, nodeName, attributes);\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t\tparentNode = node;\r\n\t\t\t\t// if (NO_CHILDS.indexOf(nodeName) === -1) {\r\n\t\t\t\t//\tconsole.log(nodeName);\r\n\t\t\t\t//\tparentNode = node;\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tonclosetag: (nodeName) => {\r\n\t\t\t\tif (parentNode.parentNode) {\r\n\t\t\t\t\tparentNode = parentNode.parentNode;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tontext: (nodeValue) => {\r\n\t\t\t\t// console.log('ontext', nodeValue);\r\n\t\t\t\t// if (nodeValue.length) {\r\n\t\t\t\tconst textNode = new RxText(parentNode, nodeValue);\r\n\t\t\t\tparentNode.childNodes.push(textNode);\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tonprocessinginstruction: (nodeName, nodeValue) => {\r\n\t\t\t\t// console.log('onprocessinginstruction', nodeName, nodeValue);\r\n\t\t\t\tif (nodeName === '!doctype') {\r\n\t\t\t\t\tnode = new RxDocumentType(parentNode, nodeValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = new RxProcessingInstruction(parentNode, nodeValue);\r\n\t\t\t\t}\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t},\r\n\t\t\toncomment: nodeValue => {\r\n\t\t\t\t// console.log('oncomment', nodeValue);\r\n\t\t\t\tnode = new RxComment(parentNode, nodeValue);\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t\t// parentNode = node;\r\n\t\t\t},\r\n\t\t\toncommentend: () => {\r\n\t\t\t\t// console.log('oncommentend');\r\n\t\t\t\t// parentNode = parentNode.parentNode;\r\n\t\t\t},\r\n\t\t\toncdatastart: () => {\r\n\t\t\t\tconsole.log('oncdatastart');\r\n\t\t\t},\r\n\t\t\toncdataend: () => {\r\n\t\t\t\tconsole.log('oncdataend');\r\n\t\t\t},\r\n\t\t\tonerror: error => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t},\r\n\t\t\t/*\r\n\t\t\tonopentagname: (name) => {\r\n\t\t\t\tconsole.log('onopentagname', name);\r\n\t\t\t},\r\n\t\t\tonattribute: (name, value) => {\r\n\t\t\t\tconsole.log('onattribute', name, value);\r\n\t\t\t},\r\n\t\t\tonreset: () => {\r\n\t\t\t\tconsole.log('reset');\r\n\t\t\t},\r\n\t\t\tonend: () => {\r\n\t\t\t\tconsole.log('end');\r\n\t\t\t},\r\n\t\t\t*/\r\n\t\t},\r\n\t\t{\r\n\t\t\tdecodeEntities: false,\r\n\t\t\tlowerCaseTags: true,\r\n\t\t}\r\n\t);\r\n\tparser.write(html);\r\n\tparser.end();\r\n\treturn doc;\r\n}\r\n\r\nexport function getQueries(selector: string): RxQuery[] {\r\n\tconst queries: RxQuery[] = [];\r\n\tselector\r\n\t\t.trim()\r\n\t\t.split(' ')\r\n\t\t.forEach((x: string) => {\r\n\t\t\tx.trim()\r\n\t\t\t\t.split('>')\r\n\t\t\t\t.forEach((x, i) => {\r\n\t\t\t\t\tconst regex = /\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)/g;\r\n\t\t\t\t\t/*eslint no-useless-escape: \"off\"*/\r\n\t\t\t\t\t// const regex = new RegExp(`\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)`, 'g');\r\n\t\t\t\t\tconst selectors = [];\r\n\t\t\t\t\tconst matches = x.matchAll(regex);\r\n\t\t\t\t\tfor (const match of matches) {\r\n\t\t\t\t\t\tif (match[1]) {\r\n\t\t\t\t\t\t\tselectors.push({ selector: match[1], type: SelectorType.Class });\r\n\t\t\t\t\t\t} else if (match[2]) {\r\n\t\t\t\t\t\t\tselectors.push({\r\n\t\t\t\t\t\t\t\tselector: match[2],\r\n\t\t\t\t\t\t\t\ttype: SelectorType.Attribute,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (match[3]) {\r\n\t\t\t\t\t\t\tselectors.push({\r\n\t\t\t\t\t\t\t\tselector: match[3],\r\n\t\t\t\t\t\t\t\ttype: SelectorType.TagName,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log('match', match);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst selector =\r\n\t\t\t\t\t\ti > 0\r\n\t\t\t\t\t\t\t? { selector: x, selectors, inner: true }\r\n\t\t\t\t\t\t\t: { selector: x, selectors, inner: false };\r\n\t\t\t\t\tqueries.push.call(queries, selector);\r\n\t\t\t\t});\r\n\t\t});\r\n\treturn queries;\r\n}\r\n\r\nexport function querySelectorAll(queries: RxQuery[], childNodes: RxNode[], nodes = []): RxElement[] | null {\r\n\treturn null;\r\n}\r\n\r\nexport function querySelector(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null): RxElement | null {\r\n\tlet node = null;\r\n\tconst match = (child: RxElement, selector: RxSelector) => {\r\n\t\tswitch (selector.type) {\r\n\t\t\tcase SelectorType.Class:\r\n\t\t\t\treturn child.classList.indexOf(selector.selector) !== -1;\r\n\t\t\tcase SelectorType.Attribute:\r\n\t\t\t\treturn Object.keys(child.attributes).indexOf(selector.selector) !== -1;\r\n\t\t\tcase SelectorType.TagName:\r\n\t\t\t\treturn child.nodeName === selector.selector;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\tif (query || queries.length) {\r\n\t\tquery = query || queries.shift() as RxQuery;\r\n\t\tfor (let child of childNodes) {\r\n\t\t\tif (child instanceof RxElement) {\r\n\t\t\t\tlet has = query.selectors.reduce((p, selector, i) => {\r\n\t\t\t\t\treturn p && match(child as RxElement, selector);\r\n\t\t\t\t}, true);\r\n\t\t\t\tif (has) {\r\n\t\t\t\t\t// console.log(query);\r\n\t\t\t\t\tif (queries.length) {\r\n\t\t\t\t\t\treturn querySelector(queries, child.childNodes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn child;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!query.inner) {\r\n\t\t\t\t\tnode = querySelector(queries, child.childNodes, query);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function cloneNode(source: RxNode, deep: boolean = false, parentNode: RxElement | null = null): RxNode {\r\n\tlet node: RxNode;\r\n\tif (isRxElement(source)) {\r\n\t\tconst nodeElement: RxElement = new RxElement(\r\n\t\t\tparentNode,\r\n\t\t\tsource.nodeName,\r\n\t\t\tObject.assign({}, source.attributes)\r\n\t\t);\r\n\t\tif (deep) {\r\n\t\t\tnodeElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeElement]));\r\n\t\t}\r\n\t\tnode = nodeElement;\r\n\t} else if (isRxDocumentFragment(source)) {\r\n\t\tconst nodeDocumentFragment: RxDocumentFragment = new RxDocumentFragment();\r\n\t\tif (deep) {\r\n\t\t\tnodeDocumentFragment.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeDocumentFragment]));\r\n\t\t}\r\n\t\tnode = nodeDocumentFragment;\r\n\t} else if (isRxText(source)) {\r\n\t\tnode = new RxText(parentNode, source.nodeValue);\r\n\t} else if (isRxComment(source)) {\r\n\t\tnode = new RxComment(parentNode, source.nodeValue);\r\n\t} else if (isRxDocument(source)) {\r\n\t\tconst documentElement: RxDocument = new RxDocument();\r\n\t\tif (deep) {\r\n\t\t\tdocumentElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, documentElement]));\r\n\t\t}\r\n\t\tnode = documentElement;\r\n\t} else {\r\n\t\tthrow ('Invalid node type');\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport class RxSelector {\r\n\tselector: string = '';\r\n\ttype: SelectorType = SelectorType.None;\r\n\tconstructor(options: RxSelector) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class RxQuery {\r\n\tselector: string = '';\r\n\tselectors: RxSelector[] = [];\r\n\tinner: boolean = false;\r\n\tconstructor(options: RxQuery) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class RxNode {\r\n\tparentNode: RxElement | null;\r\n\tnodeType: RxNodeType;\r\n\tnodeValue: string | null = null;\r\n\r\n\tconstructor(parentNode: RxElement | null = null) {\r\n\t\tthis.parentNode = parentNode;\r\n\t\tthis.nodeType = -1;\r\n\t}\r\n\tcloneNode(deep: boolean = false) {\r\n\t\treturn cloneNode.apply(this, [this, deep]);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn ``;\r\n\t}\r\n}\r\n\r\nexport class RxElement extends RxNode {\r\n\tnodeName: string;\r\n\tchildNodes: RxNode[];\r\n\tattributes: { [key: string]: string | null };\r\n\tget children(): RxElement[] {\r\n\t\tlet children: RxElement[] = [],\r\n\t\t\ti = 0,\r\n\t\t\tnode,\r\n\t\t\tnodes = this.childNodes;\r\n\t\tnode = nodes[i++];\r\n\t\twhile (node) {\r\n\t\t\tnode = nodes[i++];\r\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\r\n\t\t\t\tchildren.push(node as RxElement);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn children;\r\n\t}\r\n\tget childElementCount(): number {\r\n\t\tlet i = 0,\r\n\t\t\tcount = 0,\r\n\t\t\tnode,\r\n\t\t\tnodes = this.childNodes;\r\n\t\tnode = nodes[i++];\r\n\t\twhile (node) {\r\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tnode = nodes[i++];\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\tget firstChild(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.childNodes.length) {\r\n\t\t\tnode = this.childNodes[0];\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget firstElementChild(): RxElement | null {\r\n\t\tfor (let node of this.childNodes) {\r\n\t\t\tif (isRxElement(node)) {\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tget lastElementChild(): RxElement | null {\r\n\t\tconst nodes = this.childNodes;\r\n\t\tfor (let i = nodes.length - 1; i > -1; i--) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (isRxElement(node)) {\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tget previousSibling(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tnode = this.parentNode.childNodes[index - 1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget nextSibling(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\r\n\t\t\tif (index !== -1 && index < this.parentNode.childNodes.length - 1) {\r\n\t\t\t\tnode = this.parentNode.childNodes[index];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget wholeText() {\r\n\t\tlet nodeValue;\r\n\t\tif (this.nodeType === RxNodeType.TEXT_NODE) {\r\n\t\t\treturn this.nodeValue;\r\n\t\t}\r\n\t\treturn nodeValue;\r\n\t}\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget classList(): string[] {\r\n\t\tconst classList: string[] = this.attributes.class\r\n\t\t\t? this.attributes.class.split(' ').map(c => c.trim())\r\n\t\t\t: [];\r\n\t\treturn classList;\r\n\t}\r\n\tset innerText(nodeValue: string | null) {\r\n\t\tthis.childNodes = [new RxText(this, nodeValue)];\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\t// return this.childNodes.filter((n): n is RxText => isRxText(n)).map(n => n.innerText).join('');\r\n\t\treturn this.childNodes.filter((n): n is RxText | RxElement => isRxText(n) || isRxElement(n)).map(n => n.innerText).join('');\r\n\t}\r\n\tset textContent(nodeValue: string | null) {\r\n\t\tthis.innerText = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.innerText;\r\n\t}\r\n\tset innerHTML(html: string) {\r\n\t\tconst doc = parse(html);\r\n\t\tconst childNodes = doc.childNodes.map(n => {\r\n\t\t\tn.parentNode = this;\r\n\t\t\treturn n;\r\n\t\t});\r\n\t\tthis.childNodes = childNodes;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeName: string, attributes: { [key: string]: string | null } | null = null) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.ELEMENT_NODE;\r\n\t\tthis.nodeName = nodeName;\r\n\t\tthis.attributes = attributes || {};\r\n\t\tthis.childNodes = [];\r\n\t\t/*\r\n\t\t\tif (SKIP.indexOf(nodeName) === -1) {\r\n\t\t\t\tconsole.log(parentNode.nodeName, '>', nodeName);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\tappend(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\r\n\t\t\tlet node;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tArray.prototype.push.apply(this.childNodes, nodesOrDOMStrings);\r\n\t\t/*\r\n\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\r\n\t\t\t\tlet node;\r\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\t}\r\n\t\t\t\tthis.childNodes.push(node);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\tprepend(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\r\n\t\t\tlet node;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tArray.prototype.unshift.apply(this.childNodes, nodesOrDOMStrings);\r\n\t\t/*\r\n\t\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\r\n\t\t\t\tlet node;\r\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\t}\r\n\t\t\t\tthis.childNodes.unshift(node);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\treplaceChildren(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tconst nodes: RxNode[] = nodesOrDOMStrings.map((nodeOrDomString) => {\r\n\t\t\tlet node: RxNode;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString as RxNode;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tthis.childNodes = nodes;\r\n\t}\r\n\tquerySelectorAll(selector: string): RxNode[] | null {\r\n\t\tconst queries = getQueries(selector);\r\n\t\tconst nodes = this.childNodes.filter(x => {\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tconsole.log(queries);\r\n\t\treturn nodes.length ? nodes : null;\r\n\t}\r\n\tquerySelector(selector: string): RxNode | null {\r\n\t\tconst queries = getQueries(selector);\r\n\t\tconst node = querySelector(queries, this.childNodes);\r\n\t\treturn node;\r\n\t}\r\n\thasAttribute(attribute: string): boolean {\r\n\t\treturn Object.keys(this.attributes).indexOf(attribute.toLowerCase()) !== -1;\r\n\t}\r\n\tgetAttribute(attribute: string): string | null {\r\n\t\treturn this.attributes[attribute.toLowerCase()] || null;\r\n\t}\r\n\tsetAttribute(attribute: string, value: any) {\r\n\t\tthis.attributes[attribute.toLowerCase()] = value.toString();\r\n\t}\r\n\tremoveAttribute(attribute: string) {\r\n\t\tdelete this.attributes[attribute];\r\n\t}\r\n\treplaceChild(newChild: RxNode, oldChild: RxNode): RxNode {\r\n\t\tconst index = this.childNodes.indexOf(oldChild);\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.childNodes[index] = newChild;\r\n\t\t\tnewChild.parentNode = this;\r\n\t\t}\r\n\t\t// console.log('replaceChild', this, newChild, oldChild);\r\n\t\treturn oldChild;\r\n\t}\r\n\tremoveChild(child: RxNode): RxNode {\r\n\t\tif (!(child instanceof RxNode)) {\r\n\t\t\tthrow (`Uncaught TypeError: Failed to execute 'removeChild' on 'Node': parameter 1 is not of type 'Node'.`);\r\n\t\t}\r\n\t\tconst index = this.childNodes.indexOf(child);\r\n\t\tif (index === -1) {\r\n\t\t\tthrow (`Uncaught NotFoundError: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.`);\r\n\t\t}\r\n\t\tthis.childNodes.splice(index, 1);\r\n\t\t// console.log('removeChild', this.childNodes.length);\r\n\t\treturn child;\r\n\t}\r\n\tinsertBefore(newNode: RxNode, referenceNode: RxNode | null = null): RxNode {\r\n\t\tconst index = referenceNode\r\n\t\t\t? this.childNodes.indexOf(referenceNode)\r\n\t\t\t: this.childNodes.length;\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.childNodes.splice(index, 0, newNode);\r\n\t\t\tnewNode.parentNode = this;\r\n\t\t}\r\n\t\t// console.log('insertBefore', this, newNode, referenceNode);\r\n\t\treturn newNode;\r\n\t}\r\n\tcloneNode(deep: boolean = false) {\r\n\t\treturn cloneNode.apply(this, [this, deep]);\r\n\t}\r\n\taddListener(eventName: string, handler: (e: any) => {}) { }\r\n\tremoveListener(eventName: string, handler: (e: any) => {}) { }\r\n\tserialize(): string {\r\n\t\treturn `<${\r\n\t\t\tthis.nodeName\r\n\t\t\t}${this.serializeAttributes()}>${this.childNodes\r\n\t\t\t\t.map(x => x.serialize())\r\n\t\t\t\t.join('')}</${this.nodeName}>`;\r\n\t}\r\n\tserializeAttributes(): string {\r\n\t\tlet attributes = '';\r\n\t\tconst keys = Object.keys(this.attributes);\r\n\t\tif (keys.length) {\r\n\t\t\tattributes =\r\n\t\t\t\t' ' +\r\n\t\t\t\tkeys\r\n\t\t\t\t\t.map(k => {\r\n\t\t\t\t\t\treturn `${k}=\"${this.attributes[k]}\"`;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(' ');\r\n\t\t}\r\n\t\treturn attributes;\r\n\t}\r\n}\r\n\r\nexport class RxText extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.TEXT_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t\t// console.log('RxText', nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n}\r\n\r\nexport class RxCData extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.CDATA_SECTION_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n}\r\n\r\nexport class RxComment extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.COMMENT_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<!--${this.nodeValue}-->`;\r\n\t}\r\n}\r\n\r\nexport class RxProcessingInstruction extends RxNode {\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.PROCESSING_INSTRUCTION_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<${this.nodeValue}>`;\r\n\t}\r\n}\r\n\r\nexport class RxDocumentType extends RxNode {\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_TYPE_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<${this.nodeValue}>`;\r\n\t}\r\n}\r\n\r\nexport class RxDocumentFragment extends RxElement {\r\n\tconstructor() {\r\n\t\tsuper(null, '#document-fragment');\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_FRAGMENT_NODE;\r\n\t\tthis.childNodes = [];\r\n\t}\r\n}\r\n\r\nexport class RxDocument extends RxElement {\r\n\tget hidden(): true {\r\n\t\treturn true;\r\n\t}\r\n\tget visibilityState(): 'prerender' {\r\n\t\treturn 'prerender';\r\n\t}\r\n\tget doctype(): RxDocumentType | null {\r\n\t\treturn this.childNodes.find(x => isRxDocumentType(x)) as RxDocumentType;\r\n\t}\r\n\tget body(): RxElement | null {\r\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'body') as RxElement;\r\n\t}\r\n\tget head(): RxElement | null {\r\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'head') as RxElement;\r\n\t}\r\n\tget title(): string | null {\r\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\r\n\t\tif (title) {\r\n\t\t\treturn title.innerText;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tset title(nodeValue: string | null) {\r\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\r\n\t\tif (title) {\r\n\t\t\ttitle.innerText = nodeValue;\r\n\t\t}\r\n\t}\r\n\tget documentElement(): RxElement | null {\r\n\t\treturn this.firstElementChild;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(null, '#document');\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_NODE;\r\n\t\tthis.childNodes = [];\r\n\t}\r\n\tcreateAttribute() { }\r\n\t// Creates a new Attr object and returns it.\r\n\tcreateAttributeNS() { }\r\n\t// Creates a new attribute node in a given namespace and returns it.\r\n\tcreateCDATASection() { }\r\n\t// Creates a new CDATA node and returns it.\r\n\tcreateComment(nodeValue: string) {\r\n\t\treturn new RxComment(null, nodeValue);\r\n\t}\r\n\t// Creates a new comment node and returns it.\r\n\tcreateDocumentFragment() {\r\n\t\treturn new RxDocumentFragment();\r\n\t}\r\n\t// Creates a new document fragment.\r\n\tcreateElement(nodeName: string): RxElement {\r\n\t\treturn new RxElement(null, nodeName);\r\n\t}\r\n\t// Creates a new element with the given tag name.\r\n\tcreateElementNS(nodeName: string): RxElement {\r\n\t\treturn new RxElement(null, nodeName);\r\n\t}\r\n\t// Creates a new element with the given tag name and namespace URI.\r\n\tcreateEvent() { }\r\n\t// Creates an event object.\r\n\tcreateNodeIterator() { }\r\n\t// Creates a NodeIterator object.\r\n\tcreateProcessingInstruction(nodeValue: string) {\r\n\t\treturn new RxProcessingInstruction(null, nodeValue);\r\n\t}\r\n\t// Creates a new ProcessingInstruction object.\r\n\tcreateRange() { }\r\n\t// Creates a Range object.\r\n\tcreateTextNode(nodeValue: string) {\r\n\t\treturn new RxText(null, nodeValue);\r\n\t}\r\n\t// Creates a text node.\r\n\tcreateTouchList() { }\r\n\t// Creates a TouchList object.\r\n\tcreateTreeWalker() { }\r\n\t// Creates a TreeWalker object.\r\n\tserialize(): string {\r\n\t\treturn `${this.childNodes.map(x => x.serialize()).join('')}`;\r\n\t}\r\n}\r\n","import { parse, RxDocument } from './node';\r\n\r\nexport default class Renderer {\r\n\tstatic document: Document | RxDocument;\r\n\tstatic bootstrap(documentOrHtml: Document | string) {\r\n\t\tif (typeof documentOrHtml === 'string') {\r\n\t\t\tthis.document = parse(documentOrHtml);\r\n\t\t} else {\r\n\t\t\tthis.document = documentOrHtml;\r\n\t\t}\r\n\t\tif (typeof process !== 'undefined') {\r\n\t\t\tglobal.document = this.document as Document;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic querySelector(selector: string) {\r\n\t\treturn this.document.querySelector(selector);\r\n\t}\r\n}\r\n","import { IElement, Module, Platform } from 'rxcomp';\r\nimport { RxDocument } from '../renderer/node';\r\nimport Renderer from '../renderer/renderer';\r\n\r\nexport default class Server extends Platform {\r\n\tstatic bootstrap(moduleFactory?: typeof Module, html?: string) {\r\n\t\tif (!html) {\r\n\t\t\tthrow 'missing html template';\r\n\t\t}\r\n\t\tRenderer.bootstrap(html);\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow 'missing moduleFactory';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow 'missing moduleFactory meta';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow 'missing bootstrap';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow 'missing bootstrap meta';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow 'missing bootstrap meta selector';\r\n\t\t}\r\n\t\tconst meta = this.resolveMeta(moduleFactory);\r\n\t\tconst module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tconst instances = module.compile(meta.node, {} as Window);\r\n\t\tmodule.instances = instances;\r\n\t\tconst root = instances[0];\r\n\t\troot.pushChanges();\r\n\t\treturn module;\r\n\t}\r\n\r\n\tstatic querySelector(selector: string): IElement | null {\r\n\t\treturn Renderer.document.querySelector(selector) as IElement;\r\n\t}\r\n\r\n\tstatic serialize(): string {\r\n\t\tconsole.log('Server.serialize');\r\n\t\tif (Renderer.document instanceof RxDocument) {\r\n\t\t\tconst serialized = Renderer.document.serialize();\r\n\t\t\t// console.log('serialized', serialized);\r\n\t\t\treturn serialized;\r\n\t\t} else {\r\n\t\t\tthrow ('Renderer.document is not an instance of RxDocument');\r\n\t\t}\r\n\t}\r\n}\r\n","import fetch from 'cross-fetch';\r\nimport { BehaviorSubject, from, Observable, throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\n\r\nexport class HttpResponse {\r\n\r\n\tdata?: any;\r\n\turl: string = '';\r\n\tstatus: number = 0;\r\n\tstatusText: string = '';\r\n\tok: boolean = false;\r\n\tredirected: boolean = false;\r\n\r\n\tget static() {\r\n\t\treturn this.url!.indexOf('.json') === this.url!.length - 5;\r\n\t}\r\n\r\n\tconstructor(response: Response) {\r\n\t\tthis.data = null;\r\n\t\tif (response) {\r\n\t\t\tthis.url = response.url;\r\n\t\t\tthis.status = response.status;\r\n\t\t\tthis.statusText = response.statusText;\r\n\t\t\tthis.ok = response.ok;\r\n\t\t\tthis.redirected = response.redirected;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class HttpService {\r\n\r\n\tstatic pendingRequests$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n\r\n\tstatic http$(method: string, url: string, data?: any, format: string = 'json'): Observable<any> {\r\n\t\tmethod = url.indexOf('.json') !== -1 ? 'GET' : method;\r\n\t\tconst methods = ['POST', 'PUT', 'PATCH'];\r\n\t\tlet response_: HttpResponse | null = null;\r\n\t\tthis.pendingRequests$.next(this.pendingRequests$.getValue() + 1);\r\n\t\treturn from(fetch(url, {\r\n\t\t\tmethod: method,\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: methods.indexOf(method) !== -1 ? JSON.stringify(data) : undefined\r\n\t\t}).then((response: Response) => {\r\n\t\t\tresponse_ = new HttpResponse(response);\r\n\t\t\tif (typeof (response as any)[format] === 'function') {\r\n\t\t\t\treturn (response as any)[format]().then((json: any) => {\r\n\t\t\t\t\tresponse_!.data = json;\r\n\t\t\t\t\tif (response.ok) {\r\n\t\t\t\t\t\treturn Promise.resolve(response_);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Promise.reject(response_);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.reject(response_);\r\n\t\t\t}\r\n\t\t})).pipe(\r\n\t\t\tcatchError(error => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t\treturn throwError(this.getError(error, response_));\r\n\t\t\t}),\r\n\t\t\tfinalize(() => {\r\n\t\t\t\tthis.pendingRequests$.next(this.pendingRequests$.getValue() - 1);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tstatic get$(url: string, data?: any, format?: string): Observable<any> {\r\n\t\tconst query = this.query(data);\r\n\t\treturn this.http$('GET', `${url}${query}`, undefined, format);\r\n\t}\r\n\r\n\tstatic delete$(url: string): Observable<any> {\r\n\t\treturn this.http$('DELETE', url);\r\n\t}\r\n\r\n\tstatic post$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('POST', url, data);\r\n\t}\r\n\r\n\tstatic put$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('PUT', url, data);\r\n\t}\r\n\r\n\tstatic patch$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('PATCH', url, data);\r\n\t}\r\n\r\n\tstatic query(data: any): string {\r\n\t\treturn ''; // todo\r\n\t}\r\n\r\n\tstatic getError(object: any, response: HttpResponse | null): any {\r\n\t\tlet error = typeof object === 'object' ? object : {};\r\n\t\tif (!error.statusCode) {\r\n\t\t\terror.statusCode = response ? response.status : 0;\r\n\t\t}\r\n\t\tif (!error.statusMessage) {\r\n\t\t\terror.statusMessage = response ? response.statusText : object;\r\n\t\t}\r\n\t\t// console.log('HttpService.getError', error, object);\r\n\t\treturn error;\r\n\t}\r\n\r\n}\r\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { first } from 'rxjs/operators';\r\nimport HttpService from './http/http.service';\r\n\r\nexport default class AppComponent extends Component {\r\n\r\n\tonInit() {\r\n\t\tthis.items = new Array(4).fill(0).map((x, i) => {\r\n\t\t\treturn { title: `item ${i + 1}`, completed: Math.random() > 0.75 };\r\n\t\t});\r\n\t\tthis.flag = true;\r\n\t\tthis.active = false;\r\n\t\t// console.log('AppComponent.onInit', this);\r\n\t\tHttpService.get$('https://jsonplaceholder.typicode.com/users/1/todos').pipe(\r\n\t\t\tfirst(),\r\n\t\t).subscribe(response => {\r\n\t\t\tconsole.log('AppComponent.items', response);\r\n\t\t\tthis.items = response.data;\r\n\t\t\tthis.pushChanges();\r\n\t\t});\r\n\t}\r\n\r\n\tonClick(item: { title: string, completed: boolean }) {\r\n\t\tconsole.log('onClick', item);\r\n\t}\r\n\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[app-component]',\r\n\t};\r\n\r\n}\r\n","import { CoreModule, IModuleMeta, Module } from 'rxcomp';\r\nimport AppComponent from './app.component';\r\n\r\nexport default class AppModule extends Module {\r\n\r\n\tstatic meta: IModuleMeta = {\r\n\t\timports: [\r\n\t\t\tCoreModule,\r\n\t\t],\r\n\t\tdeclarations: [\r\n\t\t],\r\n\t\tbootstrap: AppComponent,\r\n\t};\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { Server } from '../../src/rxcomp-server';\r\nimport AppModule from './app.module';\r\nimport HttpService from './http/http.service';\r\n\r\nexport function renderServer(html: string): Observable<string> {\r\n\t// console.log(html);\r\n\t// const doc = Renderer.parse(html);\r\n\t// const serialized = doc.serialize();\r\n\t// console.log(doc);\r\n\t// console.log(serialized);\r\n\t// document.getElementById('app').innerHTML = serialized;\r\n\tconst module = Server.bootstrap(AppModule, html);\r\n\tif (false) {\r\n\t\tconsole.log('module', module);\r\n\t}\r\n\treturn HttpService.pendingRequests$.pipe(\r\n\t\tfilter(x => x === 0),\r\n\t\tmap(x => Server.serialize()),\r\n\t\tfirst(),\r\n\t);\r\n}\r\n"],"names":["RxNodeType","SelectorType","isRxElement","x","nodeType","ELEMENT_NODE","isRxText","TEXT_NODE","isRxComment","COMMENT_NODE","isRxDocument","DOCUMENT_NODE","isRxDocumentFragment","DOCUMENT_FRAGMENT_NODE","isRxDocumentType","DOCUMENT_TYPE_NODE","parse","html","doc","RxDocument","parentNode","node","parser","Parser","onopentag","nodeName","attributes","RxElement","childNodes","push","onclosetag","ontext","nodeValue","textNode","RxText","onprocessinginstruction","RxDocumentType","RxProcessingInstruction","oncomment","RxComment","oncommentend","oncdatastart","console","log","oncdataend","onerror","error","decodeEntities","lowerCaseTags","write","end","getQueries","selector","queries","trim","split","forEach","i","regex","selectors","matches","matchAll","match","type","Class","Attribute","TagName","inner","call","querySelector","query","child","classList","indexOf","Object","keys","length","shift","has","reduce","p","cloneNode","source","deep","nodeElement","assign","map","apply","nodeDocumentFragment","RxDocumentFragment","documentElement","RxNode","serialize","append","nodesOrDOMStrings","nodeOrDomString","Array","prototype","prepend","unshift","replaceChildren","nodes","querySelectorAll","filter","hasAttribute","attribute","toLowerCase","getAttribute","setAttribute","value","toString","removeAttribute","replaceChild","newChild","oldChild","index","removeChild","splice","insertBefore","newNode","referenceNode","addListener","eventName","handler","removeListener","serializeAttributes","join","k","children","count","class","c","n","innerText","String","PROCESSING_INSTRUCTION_NODE","find","title","firstElementChild","createAttribute","createAttributeNS","createCDATASection","createComment","createDocumentFragment","createElement","createElementNS","createEvent","createNodeIterator","createProcessingInstruction","createRange","createTextNode","createTouchList","createTreeWalker","Renderer","bootstrap","documentOrHtml","document","process","global","Server","moduleFactory","meta","resolveMeta","module","instances","compile","root","pushChanges","serialized","Platform","HttpResponse","response","data","url","status","statusText","ok","redirected","HttpService","http$","method","format","methods","response_","pendingRequests$","next","getValue","from","fetch","headers","body","JSON","stringify","undefined","then","json","Promise","resolve","reject","pipe","catchError","throwError","getError","finalize","get$","delete$","post$","put$","patch$","object","statusCode","statusMessage","BehaviorSubject","AppComponent","onInit","items","fill","completed","Math","random","flag","active","first","subscribe","onClick","item","Component","AppModule","Module","imports","CoreModule","declarations","renderServer"],"mappings":"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"}