{"version":3,"sources":["test/js/main.server.ts","../src/renderer/node.ts","../src/renderer/renderer.ts","../src/platform/server.ts","../node_modules/node-fetch/lib/index.mjs","../node_modules/cross-fetch/dist/node-ponyfill.js","../test/js/http/http.service.ts","../test/js/app.component.ts","../test/js/app.module.ts","../test/js/main.server.ts"],"names":["g","f","exports","module","require","define","amd","globalThis","self","main","server","umd","rxjs","operators","rxcomp","htmlparser2","Stream","http","Url","https","zlib","this","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","isArray","minLen","n","toString","call","slice","name","from","test","_unsupportedIterableToArray","done","value","TypeError","next","bind","RxNodeType","SelectorType","isRxElement","x","nodeType","ELEMENT_NODE","isRxText","TEXT_NODE","parse","html","node","doc","RxDocument","parentNode","parser","Parser","onopentag","nodeName","attributes","RxElement","childNodes","push","onclosetag","ontext","nodeValue","textNode","RxText","onprocessinginstruction","RxDocumentType","RxProcessingInstruction","oncomment","RxComment","oncommentend","oncdatastart","console","log","oncdataend","onerror","error","decodeEntities","lowerCaseTags","write","end","getQueries","selector","queries","trim","split","forEach","_step","selectors","_iterator","matchAll","match","type","Class","Attribute","TagName","inner","querySelector","query","shift","_step2","_loop","child","reduce","p","classList","indexOf","keys","v","_iterator2","_ret","cloneNode","source","deep","nodeElement","assign","map","apply","DOCUMENT_FRAGMENT_NODE","nodeDocumentFragment","RxDocumentFragment","COMMENT_NODE","isRxComment","DOCUMENT_NODE","isRxDocument","documentElement","hasOwnProperty","RxNode","_proto","serialize","_RxNode","_this","_proto2","append","_this2","_len","arguments","nodesOrDOMStrings","nodeOrDomString","prepend","_this3","_len2","unshift","replaceChildren","_this4","_len3","nodes","querySelectorAll","filter","hasAttribute","attribute","toLowerCase","getAttribute","setAttribute","removeAttribute","replaceChild","newChild","oldChild","index","removeChild","splice","insertBefore","newNode","referenceNode","addListener","eventName","handler","removeListener","serializeAttributes","join","_this5","k","get","children","count","_step3","_iterator3","class","c","set","innerText","String","_this6","_RxNode2","_this7","_RxNode4","_this9","_RxNode5","_this10","PROCESSING_INSTRUCTION_NODE","_RxNode6","_this11","DOCUMENT_TYPE_NODE","_RxElement","_this12","_RxElement2","_this13","find","isRxDocumentType","title","firstElementChild","_proto8","createAttribute","createAttributeNS","createCDATASection","createComment","createDocumentFragment","createElement","createElementNS","createEvent","createNodeIterator","createProcessingInstruction","createRange","createTextNode","createTouchList","createTreeWalker","Renderer","bootstrap","documentOrHtml","document","process","global","Server","_Platform","moduleFactory","meta","resolveMeta","instances","compile","pushChanges","Platform","Readable","BUFFER","TYPE","Blob","[object Object]","blobParts","options","buffers","size","a","Number","element","buffer","Buffer","ArrayBuffer","isView","byteOffset","byteLength","concat","undefined","Promise","resolve","buf","ab","readable","_read","start","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","blob","FetchError","message","systemError","Error","code","errno","captureStackTrace","convert","defineProperties","toStringTag","e","INTERNALS","PassThrough","Body","body","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","isBuffer","disturbed","on","err","url","consumeBody","reject","alloc","stream","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","obj","delete","getAll","has","sort","arrayBuffer","clone","instance","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","ct","headers","JSON","res","str","charset","exec","pop","convertBody","json","text","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","method","pairs","pair","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","kind","entries","values","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","getPrototypeOf","_INTERNAL","exportNodeCompatibleHeaders","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","opts","status","contentType","statusText","counter","ok","redirected","INTERNALS$2","parse_url","format_url","format","streamDestructionSupported","isRequest","input","Request","parsedURL","href","toUpperCase","inputBody","signal","isAbortSignal","redirect","follow","compress","agent","AbortError","PassThrough$1","resolve_url","fetch","request","protocol","hostname","contentLengthValue","totalBytes","getNodeRequestOptions","send","response","destroy","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","socket","val","createHeadersLenient","isRedirect","statusCode","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createBrotliDecompress","createInflate","createInflateRaw","dest","writeToStream","nodeFetch","freeze","default","nodePonyfill","fn","path","basedir","base","commonjsRequire","createCommonjsModule","realFetch","HttpResponse","data","HttpService","http$","response_","pendingRequests$","getValue","Accept","Content-Type","stringify","catchError","throwError","getError","get$","delete$","post$","put$","patch$","object","BehaviorSubject","AppComponent","_Component","onInit","items","fill","completed","random","flag","active","first","subscribe","onClick","item","Component","AppModule","_Module","Module","imports","CoreModule","declarations","renderServer"],"mappings":"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","file":"server\\main.server.umd.min.js","sourcesContent":[null,"import { Parser } from 'htmlparser2';\r\n\r\n/*\r\nexport const NO_CHILDS = [\r\n\t'title',\r\n\t'base',\r\n\t'meta',\r\n\t'link',\r\n\t'img',\r\n\t'br',\r\n\t'input',\r\n];\r\n\r\nconst SKIP = [\r\n\t'html',\r\n\t'head',\r\n\t'title',\r\n\t'base',\r\n\t'meta',\r\n\t'script',\r\n\t'link',\r\n\t'body',\r\n];\r\n*/\r\n\r\n///\r\n/*\r\nif (true) {\r\n\tdocument.createComment = nodeValue => {\r\n\t\treturn new RxComment(null, nodeValue);\r\n\t};\r\n\tdocument.createTextNode = nodeValue => {\r\n\t\treturn new RxText(null, nodeValue);\r\n\t};\r\n}\r\n*/\r\n///\r\n\r\nexport enum RxNodeType {\r\n\tELEMENT_NODE = 1, //\tUn nodo Element come <p> o <div>.\r\n\tTEXT_NODE = 3, //\tL'attuale Text dentro un Element o Attr.\r\n\tCDATA_SECTION_NODE = 4, //\tUna CDATASection, ad esempio <!CDATA[[ … ]]>.\r\n\tPROCESSING_INSTRUCTION_NODE = 7, //\tUna ProcessingInstruction di un documento XML, come <?xml-stylesheet … ?>.\r\n\tCOMMENT_NODE = 8, //\tUn nodo Comment, come <!-- … -->.\r\n\tDOCUMENT_NODE = 9, //\tUn nodo Document.\r\n\tDOCUMENT_TYPE_NODE = 10, //\tUn nodo DocumentType, come <!DOCTYPE html>.\r\n\tDOCUMENT_FRAGMENT_NODE = 11, //\tUn nodo DocumentFragment.\r\n}\r\n\r\nexport enum SelectorType {\r\n\tNone = -1,\r\n\tId = 0,\r\n\tClass = 1,\r\n\tAttribute = 2,\r\n\tTagName = 3,\r\n}\r\n\r\nexport function isRxElement(x: RxNode): x is RxElement {\r\n\treturn x.nodeType === RxNodeType.ELEMENT_NODE;\r\n}\r\nexport function isRxText(x: RxNode): x is RxText {\r\n\treturn x.nodeType === RxNodeType.TEXT_NODE;\r\n}\r\nexport function isRxComment(x: RxNode): x is RxComment {\r\n\treturn x.nodeType === RxNodeType.COMMENT_NODE;\r\n}\r\nexport function isRxDocument(x: RxNode): x is RxDocument {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_NODE;\r\n}\r\nexport function isRxDocumentFragment(x: RxNode): x is RxDocumentFragment {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_FRAGMENT_NODE;\r\n}\r\nexport function isRxDocumentType(x: RxNode): x is RxDocumentType {\r\n\treturn x.nodeType === RxNodeType.DOCUMENT_TYPE_NODE;\r\n}\r\nexport function isRxProcessingInstruction(x: RxNode): x is RxProcessingInstruction {\r\n\treturn x.nodeType === RxNodeType.PROCESSING_INSTRUCTION_NODE;\r\n}\r\n\r\nexport function parse(html: string) {\r\n\tconst doc = new RxDocument();\r\n\tlet parentNode: RxElement = doc,\r\n\t\tnode;\r\n\tconst parser = new Parser(\r\n\t\t{\r\n\t\t\tonopentag: (nodeName, attributes) => {\r\n\t\t\t\t// console.log(nodeName);\r\n\t\t\t\tnode = new RxElement(parentNode, nodeName, attributes);\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t\tparentNode = node;\r\n\t\t\t\t// if (NO_CHILDS.indexOf(nodeName) === -1) {\r\n\t\t\t\t//\tconsole.log(nodeName);\r\n\t\t\t\t//\tparentNode = node;\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tonclosetag: (nodeName) => {\r\n\t\t\t\tif (parentNode.parentNode) {\r\n\t\t\t\t\tparentNode = parentNode.parentNode;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tontext: (nodeValue) => {\r\n\t\t\t\t// console.log('ontext', nodeValue);\r\n\t\t\t\t// if (nodeValue.length) {\r\n\t\t\t\tconst textNode = new RxText(parentNode, nodeValue);\r\n\t\t\t\tparentNode.childNodes.push(textNode);\r\n\t\t\t\t// }\r\n\t\t\t},\r\n\t\t\tonprocessinginstruction: (nodeName, nodeValue) => {\r\n\t\t\t\t// console.log('onprocessinginstruction', nodeName, nodeValue);\r\n\t\t\t\tif (nodeName === '!doctype') {\r\n\t\t\t\t\tnode = new RxDocumentType(parentNode, nodeValue);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = new RxProcessingInstruction(parentNode, nodeValue);\r\n\t\t\t\t}\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t},\r\n\t\t\toncomment: nodeValue => {\r\n\t\t\t\t// console.log('oncomment', nodeValue);\r\n\t\t\t\tnode = new RxComment(parentNode, nodeValue);\r\n\t\t\t\tparentNode.childNodes.push(node);\r\n\t\t\t\t// parentNode = node;\r\n\t\t\t},\r\n\t\t\toncommentend: () => {\r\n\t\t\t\t// console.log('oncommentend');\r\n\t\t\t\t// parentNode = parentNode.parentNode;\r\n\t\t\t},\r\n\t\t\toncdatastart: () => {\r\n\t\t\t\tconsole.log('oncdatastart');\r\n\t\t\t},\r\n\t\t\toncdataend: () => {\r\n\t\t\t\tconsole.log('oncdataend');\r\n\t\t\t},\r\n\t\t\tonerror: error => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t},\r\n\t\t\t/*\r\n\t\t\tonopentagname: (name) => {\r\n\t\t\t\tconsole.log('onopentagname', name);\r\n\t\t\t},\r\n\t\t\tonattribute: (name, value) => {\r\n\t\t\t\tconsole.log('onattribute', name, value);\r\n\t\t\t},\r\n\t\t\tonreset: () => {\r\n\t\t\t\tconsole.log('reset');\r\n\t\t\t},\r\n\t\t\tonend: () => {\r\n\t\t\t\tconsole.log('end');\r\n\t\t\t},\r\n\t\t\t*/\r\n\t\t},\r\n\t\t{\r\n\t\t\tdecodeEntities: false,\r\n\t\t\tlowerCaseTags: true,\r\n\t\t}\r\n\t);\r\n\tparser.write(html);\r\n\tparser.end();\r\n\treturn doc;\r\n}\r\n\r\nexport function getQueries(selector: string): RxQuery[] {\r\n\tconst queries: RxQuery[] = [];\r\n\tselector\r\n\t\t.trim()\r\n\t\t.split(' ')\r\n\t\t.forEach((x: string) => {\r\n\t\t\tx.trim()\r\n\t\t\t\t.split('>')\r\n\t\t\t\t.forEach((x, i) => {\r\n\t\t\t\t\tconst regex = /\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)/g;\r\n\t\t\t\t\t/*eslint no-useless-escape: \"off\"*/\r\n\t\t\t\t\t// const regex = new RegExp(`\\.([^\\.[]+)|\\[([^\\.\\[]+)\\]|([^\\.\\[\\]]+)`, 'g');\r\n\t\t\t\t\tconst selectors = [];\r\n\t\t\t\t\tconst matches = x.matchAll(regex);\r\n\t\t\t\t\tfor (const match of matches) {\r\n\t\t\t\t\t\tif (match[1]) {\r\n\t\t\t\t\t\t\tselectors.push({ selector: match[1], type: SelectorType.Class });\r\n\t\t\t\t\t\t} else if (match[2]) {\r\n\t\t\t\t\t\t\tselectors.push({\r\n\t\t\t\t\t\t\t\tselector: match[2],\r\n\t\t\t\t\t\t\t\ttype: SelectorType.Attribute,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t} else if (match[3]) {\r\n\t\t\t\t\t\t\tselectors.push({\r\n\t\t\t\t\t\t\t\tselector: match[3],\r\n\t\t\t\t\t\t\t\ttype: SelectorType.TagName,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// console.log('match', match);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst selector =\r\n\t\t\t\t\t\ti > 0\r\n\t\t\t\t\t\t\t? { selector: x, selectors, inner: true }\r\n\t\t\t\t\t\t\t: { selector: x, selectors, inner: false };\r\n\t\t\t\t\tqueries.push.call(queries, selector);\r\n\t\t\t\t});\r\n\t\t});\r\n\treturn queries;\r\n}\r\n\r\nexport function querySelectorAll(queries: RxQuery[], childNodes: RxNode[], nodes = []): RxElement[] | null {\r\n\treturn null;\r\n}\r\n\r\nexport function querySelector(queries: RxQuery[], childNodes: RxNode[], query: RxQuery | null = null): RxElement | null {\r\n\tlet node = null;\r\n\tconst match = (child: RxElement, selector: RxSelector) => {\r\n\t\tswitch (selector.type) {\r\n\t\t\tcase SelectorType.Class:\r\n\t\t\t\treturn child.classList.indexOf(selector.selector) !== -1;\r\n\t\t\tcase SelectorType.Attribute:\r\n\t\t\t\treturn Object.keys(child.attributes).indexOf(selector.selector) !== -1;\r\n\t\t\tcase SelectorType.TagName:\r\n\t\t\t\treturn child.nodeName === selector.selector;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\tif (query || queries.length) {\r\n\t\tquery = query || queries.shift() as RxQuery;\r\n\t\tfor (let child of childNodes) {\r\n\t\t\tif (child instanceof RxElement) {\r\n\t\t\t\tlet has = query.selectors.reduce((p, selector, i) => {\r\n\t\t\t\t\treturn p && match(child as RxElement, selector);\r\n\t\t\t\t}, true);\r\n\t\t\t\tif (has) {\r\n\t\t\t\t\t// console.log(query);\r\n\t\t\t\t\tif (queries.length) {\r\n\t\t\t\t\t\treturn querySelector(queries, child.childNodes);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn child;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!query.inner) {\r\n\t\t\t\t\tnode = querySelector(queries, child.childNodes, query);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport function cloneNode(source: RxNode, deep: boolean = false, parentNode: RxElement | null = null): RxNode {\r\n\tlet node: RxNode;\r\n\tif (isRxElement(source)) {\r\n\t\tconst nodeElement: RxElement = new RxElement(\r\n\t\t\tparentNode,\r\n\t\t\tsource.nodeName,\r\n\t\t\tObject.assign({}, source.attributes)\r\n\t\t);\r\n\t\tif (deep) {\r\n\t\t\tnodeElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeElement]));\r\n\t\t}\r\n\t\tnode = nodeElement;\r\n\t} else if (isRxDocumentFragment(source)) {\r\n\t\tconst nodeDocumentFragment: RxDocumentFragment = new RxDocumentFragment();\r\n\t\tif (deep) {\r\n\t\t\tnodeDocumentFragment.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, nodeDocumentFragment]));\r\n\t\t}\r\n\t\tnode = nodeDocumentFragment;\r\n\t} else if (isRxText(source)) {\r\n\t\tnode = new RxText(parentNode, source.nodeValue);\r\n\t} else if (isRxComment(source)) {\r\n\t\tnode = new RxComment(parentNode, source.nodeValue);\r\n\t} else if (isRxDocument(source)) {\r\n\t\tconst documentElement: RxDocument = new RxDocument();\r\n\t\tif (deep) {\r\n\t\t\tdocumentElement.childNodes = source.childNodes.map(x => cloneNode.apply(x, [x, deep, documentElement]));\r\n\t\t}\r\n\t\tnode = documentElement;\r\n\t} else {\r\n\t\tthrow ('Invalid node type');\r\n\t}\r\n\treturn node;\r\n}\r\n\r\nexport class RxSelector {\r\n\tselector: string = '';\r\n\ttype: SelectorType = SelectorType.None;\r\n\tconstructor(options: RxSelector) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class RxQuery {\r\n\tselector: string = '';\r\n\tselectors: RxSelector[] = [];\r\n\tinner: boolean = false;\r\n\tconstructor(options: RxQuery) {\r\n\t\tif (options) {\r\n\t\t\tObject.assign(this, options);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class RxNode {\r\n\tparentNode: RxElement | null;\r\n\tnodeType: RxNodeType;\r\n\tnodeValue: string | null = null;\r\n\r\n\tconstructor(parentNode: RxElement | null = null) {\r\n\t\tthis.parentNode = parentNode;\r\n\t\tthis.nodeType = -1;\r\n\t}\r\n\tcloneNode(deep: boolean = false) {\r\n\t\treturn cloneNode.apply(this, [this, deep]);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn ``;\r\n\t}\r\n}\r\n\r\nexport class RxElement extends RxNode {\r\n\tnodeName: string;\r\n\tchildNodes: RxNode[];\r\n\tattributes: { [key: string]: string | null };\r\n\tget children(): RxElement[] {\r\n\t\tlet children: RxElement[] = [],\r\n\t\t\ti = 0,\r\n\t\t\tnode,\r\n\t\t\tnodes = this.childNodes;\r\n\t\tnode = nodes[i++];\r\n\t\twhile (node) {\r\n\t\t\tnode = nodes[i++];\r\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\r\n\t\t\t\tchildren.push(node as RxElement);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn children;\r\n\t}\r\n\tget childElementCount(): number {\r\n\t\tlet i = 0,\r\n\t\t\tcount = 0,\r\n\t\t\tnode,\r\n\t\t\tnodes = this.childNodes;\r\n\t\tnode = nodes[i++];\r\n\t\twhile (node) {\r\n\t\t\tif (node.nodeType === RxNodeType.ELEMENT_NODE) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t\tnode = nodes[i++];\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\tget firstChild(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.childNodes.length) {\r\n\t\t\tnode = this.childNodes[0];\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget firstElementChild(): RxElement | null {\r\n\t\tfor (let node of this.childNodes) {\r\n\t\t\tif (isRxElement(node)) {\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tget lastElementChild(): RxElement | null {\r\n\t\tconst nodes = this.childNodes;\r\n\t\tfor (let i = nodes.length - 1; i > -1; i--) {\r\n\t\t\tconst node = nodes[i];\r\n\t\t\tif (isRxElement(node)) {\r\n\t\t\t\treturn node;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tget previousSibling(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\r\n\t\t\tif (index > 0) {\r\n\t\t\t\tnode = this.parentNode.childNodes[index - 1];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget nextSibling(): RxNode | null {\r\n\t\tlet node = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\tconst index = this.parentNode.childNodes.indexOf(this);\r\n\t\t\tif (index !== -1 && index < this.parentNode.childNodes.length - 1) {\r\n\t\t\t\tnode = this.parentNode.childNodes[index];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn node;\r\n\t}\r\n\tget wholeText() {\r\n\t\tlet nodeValue;\r\n\t\tif (this.nodeType === RxNodeType.TEXT_NODE) {\r\n\t\t\treturn this.nodeValue;\r\n\t\t}\r\n\t\treturn nodeValue;\r\n\t}\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget classList(): string[] {\r\n\t\tconst classList: string[] = this.attributes.class\r\n\t\t\t? this.attributes.class.split(' ').map(c => c.trim())\r\n\t\t\t: [];\r\n\t\treturn classList;\r\n\t}\r\n\tset innerText(nodeValue: string | null) {\r\n\t\tthis.childNodes = [new RxText(this, nodeValue)];\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\t// return this.childNodes.filter((n): n is RxText => isRxText(n)).map(n => n.innerText).join('');\r\n\t\treturn this.childNodes.filter((n): n is RxText | RxElement => isRxText(n) || isRxElement(n)).map(n => n.innerText).join('');\r\n\t}\r\n\tset textContent(nodeValue: string | null) {\r\n\t\tthis.innerText = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.innerText;\r\n\t}\r\n\tset innerHTML(html: string) {\r\n\t\tconst doc = parse(html);\r\n\t\tconst childNodes = doc.childNodes.map(n => {\r\n\t\t\tn.parentNode = this;\r\n\t\t\treturn n;\r\n\t\t});\r\n\t\tthis.childNodes = childNodes;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeName: string, attributes: { [key: string]: string | null } | null = null) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.ELEMENT_NODE;\r\n\t\tthis.nodeName = nodeName;\r\n\t\tthis.attributes = attributes || {};\r\n\t\tthis.childNodes = [];\r\n\t\t/*\r\n\t\t\tif (SKIP.indexOf(nodeName) === -1) {\r\n\t\t\t\tconsole.log(parentNode.nodeName, '>', nodeName);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\tappend(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\r\n\t\t\tlet node;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tArray.prototype.push.apply(this.childNodes, nodesOrDOMStrings);\r\n\t\t/*\r\n\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\r\n\t\t\t\tlet node;\r\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\t}\r\n\t\t\t\tthis.childNodes.push(node);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\tprepend(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tnodesOrDOMStrings = nodesOrDOMStrings.map(nodeOrDomString => {\r\n\t\t\tlet node;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tArray.prototype.unshift.apply(this.childNodes, nodesOrDOMStrings);\r\n\t\t/*\r\n\t\t\tfor (let nodeOrDomString of nodesOrDOMStrings) {\r\n\t\t\t\tlet node;\r\n\t\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode = nodeOrDomString;\r\n\t\t\t\t}\r\n\t\t\t\tthis.childNodes.unshift(node);\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\treplaceChildren(...nodesOrDOMStrings: (RxNode | string)[]) {\r\n\t\tconst nodes: RxNode[] = nodesOrDOMStrings.map((nodeOrDomString) => {\r\n\t\t\tlet node: RxNode;\r\n\t\t\tif (typeof nodeOrDomString === 'string') {\r\n\t\t\t\tnode = new RxText(this, nodeOrDomString);\r\n\t\t\t} else {\r\n\t\t\t\tnode = nodeOrDomString as RxNode;\r\n\t\t\t\tnode.parentNode = this;\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t});\r\n\t\tthis.childNodes = nodes;\r\n\t}\r\n\tquerySelectorAll(selector: string): RxNode[] | null {\r\n\t\tconst queries = getQueries(selector);\r\n\t\tconst nodes = this.childNodes.filter(x => {\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\tconsole.log(queries);\r\n\t\treturn nodes.length ? nodes : null;\r\n\t}\r\n\tquerySelector(selector: string): RxNode | null {\r\n\t\tconst queries = getQueries(selector);\r\n\t\tconst node = querySelector(queries, this.childNodes);\r\n\t\treturn node;\r\n\t}\r\n\thasAttribute(attribute: string): boolean {\r\n\t\treturn Object.keys(this.attributes).indexOf(attribute.toLowerCase()) !== -1;\r\n\t}\r\n\tgetAttribute(attribute: string): string | null {\r\n\t\treturn this.attributes[attribute.toLowerCase()] || null;\r\n\t}\r\n\tsetAttribute(attribute: string, value: any) {\r\n\t\tthis.attributes[attribute.toLowerCase()] = value.toString();\r\n\t}\r\n\tremoveAttribute(attribute: string) {\r\n\t\tdelete this.attributes[attribute];\r\n\t}\r\n\treplaceChild(newChild: RxNode, oldChild: RxNode): RxNode {\r\n\t\tconst index = this.childNodes.indexOf(oldChild);\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.childNodes[index] = newChild;\r\n\t\t\tnewChild.parentNode = this;\r\n\t\t}\r\n\t\t// console.log('replaceChild', this, newChild, oldChild);\r\n\t\treturn oldChild;\r\n\t}\r\n\tremoveChild(child: RxNode): RxNode {\r\n\t\tif (!(child instanceof RxNode)) {\r\n\t\t\tthrow (`Uncaught TypeError: Failed to execute 'removeChild' on 'Node': parameter 1 is not of type 'Node'.`);\r\n\t\t}\r\n\t\tconst index = this.childNodes.indexOf(child);\r\n\t\tif (index === -1) {\r\n\t\t\tthrow (`Uncaught NotFoundError: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node.`);\r\n\t\t}\r\n\t\tthis.childNodes.splice(index, 1);\r\n\t\t// console.log('removeChild', this.childNodes.length);\r\n\t\treturn child;\r\n\t}\r\n\tinsertBefore(newNode: RxNode, referenceNode: RxNode | null = null): RxNode {\r\n\t\tconst index = referenceNode\r\n\t\t\t? this.childNodes.indexOf(referenceNode)\r\n\t\t\t: this.childNodes.length;\r\n\t\tif (index !== -1) {\r\n\t\t\tthis.childNodes.splice(index, 0, newNode);\r\n\t\t\tnewNode.parentNode = this;\r\n\t\t}\r\n\t\t// console.log('insertBefore', this, newNode, referenceNode);\r\n\t\treturn newNode;\r\n\t}\r\n\tcloneNode(deep: boolean = false) {\r\n\t\treturn cloneNode.apply(this, [this, deep]);\r\n\t}\r\n\taddListener(eventName: string, handler: (e: any) => {}) { }\r\n\tremoveListener(eventName: string, handler: (e: any) => {}) { }\r\n\tserialize(): string {\r\n\t\treturn `<${\r\n\t\t\tthis.nodeName\r\n\t\t\t}${this.serializeAttributes()}>${this.childNodes\r\n\t\t\t\t.map(x => x.serialize())\r\n\t\t\t\t.join('')}</${this.nodeName}>`;\r\n\t}\r\n\tserializeAttributes(): string {\r\n\t\tlet attributes = '';\r\n\t\tconst keys = Object.keys(this.attributes);\r\n\t\tif (keys.length) {\r\n\t\t\tattributes =\r\n\t\t\t\t' ' +\r\n\t\t\t\tkeys\r\n\t\t\t\t\t.map(k => {\r\n\t\t\t\t\t\treturn `${k}=\"${this.attributes[k]}\"`;\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.join(' ');\r\n\t\t}\r\n\t\treturn attributes;\r\n\t}\r\n}\r\n\r\nexport class RxText extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.TEXT_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t\t// console.log('RxText', nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n}\r\n\r\nexport class RxCData extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.CDATA_SECTION_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n}\r\n\r\nexport class RxComment extends RxNode {\r\n\tnodeValue: string;\r\n\tget outerHTML(): string | null {\r\n\t\tlet html = null;\r\n\t\tif (this.parentNode) {\r\n\t\t\thtml = this.parentNode.serialize();\r\n\t\t}\r\n\t\treturn html;\r\n\t}\r\n\tget wholeText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset innerText(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget innerText(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tset textContent(nodeValue) {\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tget textContent(): string | null {\r\n\t\treturn this.nodeValue;\r\n\t}\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.COMMENT_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<!--${this.nodeValue}-->`;\r\n\t}\r\n}\r\n\r\nexport class RxProcessingInstruction extends RxNode {\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.PROCESSING_INSTRUCTION_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<${this.nodeValue}>`;\r\n\t}\r\n}\r\n\r\nexport class RxDocumentType extends RxNode {\r\n\tconstructor(parentNode: RxElement | null = null, nodeValue: any) {\r\n\t\tsuper(parentNode);\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_TYPE_NODE;\r\n\t\tthis.nodeValue = String(nodeValue);\r\n\t}\r\n\tserialize(): string {\r\n\t\treturn `<${this.nodeValue}>`;\r\n\t}\r\n}\r\n\r\nexport class RxDocumentFragment extends RxElement {\r\n\tconstructor() {\r\n\t\tsuper(null, '#document-fragment');\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_FRAGMENT_NODE;\r\n\t\tthis.childNodes = [];\r\n\t}\r\n}\r\n\r\nexport class RxDocument extends RxElement {\r\n\tget hidden(): true {\r\n\t\treturn true;\r\n\t}\r\n\tget visibilityState(): 'prerender' {\r\n\t\treturn 'prerender';\r\n\t}\r\n\tget doctype(): RxDocumentType | null {\r\n\t\treturn this.childNodes.find(x => isRxDocumentType(x)) as RxDocumentType;\r\n\t}\r\n\tget body(): RxElement | null {\r\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'body') as RxElement;\r\n\t}\r\n\tget head(): RxElement | null {\r\n\t\treturn this.childNodes.find(x => isRxElement(x) && x.nodeName === 'head') as RxElement;\r\n\t}\r\n\tget title(): string | null {\r\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\r\n\t\tif (title) {\r\n\t\t\treturn title.innerText;\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tset title(nodeValue: string | null) {\r\n\t\tconst title = this.childNodes.find(x => isRxElement(x) && x.nodeName === 'title') as RxElement;\r\n\t\tif (title) {\r\n\t\t\ttitle.innerText = nodeValue;\r\n\t\t}\r\n\t}\r\n\tget documentElement(): RxElement | null {\r\n\t\treturn this.firstElementChild;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper(null, '#document');\r\n\t\tthis.nodeType = RxNodeType.DOCUMENT_NODE;\r\n\t\tthis.childNodes = [];\r\n\t}\r\n\tcreateAttribute() { }\r\n\t// Creates a new Attr object and returns it.\r\n\tcreateAttributeNS() { }\r\n\t// Creates a new attribute node in a given namespace and returns it.\r\n\tcreateCDATASection() { }\r\n\t// Creates a new CDATA node and returns it.\r\n\tcreateComment(nodeValue: string) {\r\n\t\treturn new RxComment(null, nodeValue);\r\n\t}\r\n\t// Creates a new comment node and returns it.\r\n\tcreateDocumentFragment() {\r\n\t\treturn new RxDocumentFragment();\r\n\t}\r\n\t// Creates a new document fragment.\r\n\tcreateElement(nodeName: string): RxElement {\r\n\t\treturn new RxElement(null, nodeName);\r\n\t}\r\n\t// Creates a new element with the given tag name.\r\n\tcreateElementNS(nodeName: string): RxElement {\r\n\t\treturn new RxElement(null, nodeName);\r\n\t}\r\n\t// Creates a new element with the given tag name and namespace URI.\r\n\tcreateEvent() { }\r\n\t// Creates an event object.\r\n\tcreateNodeIterator() { }\r\n\t// Creates a NodeIterator object.\r\n\tcreateProcessingInstruction(nodeValue: string) {\r\n\t\treturn new RxProcessingInstruction(null, nodeValue);\r\n\t}\r\n\t// Creates a new ProcessingInstruction object.\r\n\tcreateRange() { }\r\n\t// Creates a Range object.\r\n\tcreateTextNode(nodeValue: string) {\r\n\t\treturn new RxText(null, nodeValue);\r\n\t}\r\n\t// Creates a text node.\r\n\tcreateTouchList() { }\r\n\t// Creates a TouchList object.\r\n\tcreateTreeWalker() { }\r\n\t// Creates a TreeWalker object.\r\n\tserialize(): string {\r\n\t\treturn `${this.childNodes.map(x => x.serialize()).join('')}`;\r\n\t}\r\n}\r\n","import { parse, RxDocument } from './node';\r\n\r\nexport default class Renderer {\r\n\tstatic document: Document | RxDocument;\r\n\tstatic bootstrap(documentOrHtml: Document | string) {\r\n\t\tif (typeof documentOrHtml === 'string') {\r\n\t\t\tthis.document = parse(documentOrHtml);\r\n\t\t} else {\r\n\t\t\tthis.document = documentOrHtml;\r\n\t\t}\r\n\t\tif (typeof process !== 'undefined') {\r\n\t\t\tglobal.document = this.document as Document;\r\n\t\t}\r\n\t}\r\n\r\n\tstatic querySelector(selector: string) {\r\n\t\treturn this.document.querySelector(selector);\r\n\t}\r\n}\r\n","import { IElement, Module, Platform } from 'rxcomp';\r\nimport { RxDocument } from '../renderer/node';\r\nimport Renderer from '../renderer/renderer';\r\n\r\nexport default class Server extends Platform {\r\n\tstatic bootstrap(moduleFactory?: typeof Module, html?: string) {\r\n\t\tif (!html) {\r\n\t\t\tthrow 'missing html template';\r\n\t\t}\r\n\t\tRenderer.bootstrap(html);\r\n\t\tif (!moduleFactory) {\r\n\t\t\tthrow 'missing moduleFactory';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta) {\r\n\t\t\tthrow 'missing moduleFactory meta';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap) {\r\n\t\t\tthrow 'missing bootstrap';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta) {\r\n\t\t\tthrow 'missing bootstrap meta';\r\n\t\t}\r\n\t\tif (!moduleFactory.meta.bootstrap.meta.selector) {\r\n\t\t\tthrow 'missing bootstrap meta selector';\r\n\t\t}\r\n\t\tconst meta = this.resolveMeta(moduleFactory);\r\n\t\tconst module = new moduleFactory();\r\n\t\tmodule.meta = meta;\r\n\t\tconst instances = module.compile(meta.node, {} as Window);\r\n\t\tmodule.instances = instances;\r\n\t\tconst root = instances[0];\r\n\t\troot.pushChanges();\r\n\t\treturn module;\r\n\t}\r\n\r\n\tstatic querySelector(selector: string): IElement | null {\r\n\t\treturn Renderer.document.querySelector(selector) as IElement;\r\n\t}\r\n\r\n\tstatic serialize(): string {\r\n\t\tconsole.log('Server.serialize');\r\n\t\tif (Renderer.document instanceof RxDocument) {\r\n\t\t\tconst serialized = Renderer.document.serialize();\r\n\t\t\t// console.log('serialized', serialized);\r\n\t\t\treturn serialized;\r\n\t\t} else {\r\n\t\t\tthrow ('Renderer.document is not an instance of RxDocument');\r\n\t\t}\r\n\t}\r\n}\r\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","var nodeFetch = require('node-fetch')\nvar realFetch = nodeFetch.default || nodeFetch\n\nvar fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","import fetch from 'cross-fetch';\r\nimport { BehaviorSubject, from, Observable, throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\n\r\nexport class HttpResponse {\r\n\r\n\tdata?: any;\r\n\turl: string = '';\r\n\tstatus: number = 0;\r\n\tstatusText: string = '';\r\n\tok: boolean = false;\r\n\tredirected: boolean = false;\r\n\r\n\tget static() {\r\n\t\treturn this.url!.indexOf('.json') === this.url!.length - 5;\r\n\t}\r\n\r\n\tconstructor(response: Response) {\r\n\t\tthis.data = null;\r\n\t\tif (response) {\r\n\t\t\tthis.url = response.url;\r\n\t\t\tthis.status = response.status;\r\n\t\t\tthis.statusText = response.statusText;\r\n\t\t\tthis.ok = response.ok;\r\n\t\t\tthis.redirected = response.redirected;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default class HttpService {\r\n\r\n\tstatic pendingRequests$: BehaviorSubject<number> = new BehaviorSubject<number>(0);\r\n\r\n\tstatic http$(method: string, url: string, data?: any, format: string = 'json'): Observable<any> {\r\n\t\tmethod = url.indexOf('.json') !== -1 ? 'GET' : method;\r\n\t\tconst methods = ['POST', 'PUT', 'PATCH'];\r\n\t\tlet response_: HttpResponse | null = null;\r\n\t\tthis.pendingRequests$.next(this.pendingRequests$.getValue() + 1);\r\n\t\treturn from(fetch(url, {\r\n\t\t\tmethod: method,\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: methods.indexOf(method) !== -1 ? JSON.stringify(data) : undefined\r\n\t\t}).then((response: Response) => {\r\n\t\t\tresponse_ = new HttpResponse(response);\r\n\t\t\tif (typeof (response as any)[format] === 'function') {\r\n\t\t\t\treturn (response as any)[format]().then((json: any) => {\r\n\t\t\t\t\tresponse_!.data = json;\r\n\t\t\t\t\tif (response.ok) {\r\n\t\t\t\t\t\treturn Promise.resolve(response_);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Promise.reject(response_);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\treturn Promise.reject(response_);\r\n\t\t\t}\r\n\t\t})).pipe(\r\n\t\t\tcatchError(error => {\r\n\t\t\t\tconsole.log('error', error);\r\n\t\t\t\treturn throwError(this.getError(error, response_));\r\n\t\t\t}),\r\n\t\t\tfinalize(() => {\r\n\t\t\t\tthis.pendingRequests$.next(this.pendingRequests$.getValue() - 1);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\r\n\tstatic get$(url: string, data?: any, format?: string): Observable<any> {\r\n\t\tconst query = this.query(data);\r\n\t\treturn this.http$('GET', `${url}${query}`, undefined, format);\r\n\t}\r\n\r\n\tstatic delete$(url: string): Observable<any> {\r\n\t\treturn this.http$('DELETE', url);\r\n\t}\r\n\r\n\tstatic post$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('POST', url, data);\r\n\t}\r\n\r\n\tstatic put$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('PUT', url, data);\r\n\t}\r\n\r\n\tstatic patch$(url: string, data?: any): Observable<any> {\r\n\t\treturn this.http$('PATCH', url, data);\r\n\t}\r\n\r\n\tstatic query(data: any): string {\r\n\t\treturn ''; // todo\r\n\t}\r\n\r\n\tstatic getError(object: any, response: HttpResponse | null): any {\r\n\t\tlet error = typeof object === 'object' ? object : {};\r\n\t\tif (!error.statusCode) {\r\n\t\t\terror.statusCode = response ? response.status : 0;\r\n\t\t}\r\n\t\tif (!error.statusMessage) {\r\n\t\t\terror.statusMessage = response ? response.statusText : object;\r\n\t\t}\r\n\t\t// console.log('HttpService.getError', error, object);\r\n\t\treturn error;\r\n\t}\r\n\r\n}\r\n","import { Component, IFactoryMeta } from 'rxcomp';\r\nimport { first } from 'rxjs/operators';\r\nimport HttpService from './http/http.service';\r\n\r\nexport default class AppComponent extends Component {\r\n\r\n\tonInit() {\r\n\t\tthis.items = new Array(4).fill(0).map((x, i) => {\r\n\t\t\treturn { title: `item ${i + 1}`, completed: Math.random() > 0.75 };\r\n\t\t});\r\n\t\tthis.flag = true;\r\n\t\tthis.active = false;\r\n\t\t// console.log('AppComponent.onInit', this);\r\n\t\tHttpService.get$('https://jsonplaceholder.typicode.com/users/1/todos').pipe(\r\n\t\t\tfirst(),\r\n\t\t).subscribe(response => {\r\n\t\t\tconsole.log('AppComponent.items', response);\r\n\t\t\tthis.items = response.data;\r\n\t\t\tthis.pushChanges();\r\n\t\t});\r\n\t}\r\n\r\n\tonClick(item: { title: string, completed: boolean }) {\r\n\t\tconsole.log('onClick', item);\r\n\t}\r\n\r\n\tstatic meta: IFactoryMeta = {\r\n\t\tselector: '[app-component]',\r\n\t};\r\n\r\n}\r\n","import { CoreModule, IModuleMeta, Module } from 'rxcomp';\r\nimport AppComponent from './app.component';\r\n\r\nexport default class AppModule extends Module {\r\n\r\n\tstatic meta: IModuleMeta = {\r\n\t\timports: [\r\n\t\t\tCoreModule,\r\n\t\t],\r\n\t\tdeclarations: [\r\n\t\t],\r\n\t\tbootstrap: AppComponent,\r\n\t};\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { filter, first, map } from 'rxjs/operators';\r\nimport { Server } from '../../src/rxcomp-server';\r\nimport AppModule from './app.module';\r\nimport HttpService from './http/http.service';\r\n\r\nexport function renderServer(html: string): Observable<string> {\r\n\t// console.log(html);\r\n\t// const doc = Renderer.parse(html);\r\n\t// const serialized = doc.serialize();\r\n\t// console.log(doc);\r\n\t// console.log(serialized);\r\n\t// document.getElementById('app').innerHTML = serialized;\r\n\tconst module = Server.bootstrap(AppModule, html);\r\n\tif (false) {\r\n\t\tconsole.log('module', module);\r\n\t}\r\n\treturn HttpService.pendingRequests$.pipe(\r\n\t\tfilter(x => x === 0),\r\n\t\tmap(x => Server.serialize()),\r\n\t\tfirst(),\r\n\t);\r\n}\r\n"]}