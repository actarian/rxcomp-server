{"version":3,"sources":["web/client/src/main.browser.ts","../../web/client/src/app.component.ts","../../web/client/src/custom-interceptor/custom.interceptor.ts","../../web/client/src/pages/not-found.component.ts","../../web/client/src/pages/todolist-item.component.ts","../../web/client/src/vars.ts","../../web/client/src/pages/todolist.component.ts","../../web/client/src/app.module.ts","../../web/client/src/main.browser.ts"],"names":["rxcomp","rxcompHttp","rxcompRouter","rxjs","operators","_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","__proto__","AppComponent","_Component","apply","this","arguments","onInit","getContext","node","classList","add","Component","selector","CustomRequestInterceptor","intercept","request","next","handle","CustomResponseInterceptor","pipe","tap","event","HttpResponse","console","log","status","params","get","NotFoundComponent","template","TodolistItemComponent","_View","_proto","_this","combineLatest","route","data$","params$","takeUntil","unsubscribe$","subscribe","datas","title","itemId","onEnter","transition$","complete","gsap","set","opacity","to","duration","ease","Power3","easeOut","onComplete","onExit","View","Vars","TodolistComponent","items","error","_this2","methodUrl","HttpService","post$","query","reportProgress","first","response","data","getTodos","pushChanges","warn","host","errors$","onClick","item","completed","hosts","RouterOutletStructure","AppModule","_Module","Module","imports","CoreModule","HttpModule","useInterceptors","RouterModule","forRoot","path","redirectTo","pathMatch","component","declarations","bootstrap","Browser","http","router"],"mappings":"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","file":"docs/js/main.min.js","sourcesContent":[null,"import { Component, getContext, IFactoryMeta } from 'rxcomp';\n\nexport default class AppComponent extends Component {\n\tonInit() {\n\t\tconst { node } = getContext(this);\n\t\tnode.classList.add('init');\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[app-component]',\n\t};\n}\n","\nimport { HttpEvent, HttpHandler, HttpRequest, HttpResponse, IHttpInterceptor } from 'rxcomp-http';\nimport { EMPTY, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nconst cancelRequest: boolean = false;\nexport class CustomRequestInterceptor implements IHttpInterceptor {\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tif (cancelRequest) {\n\t\t\treturn EMPTY;\n\t\t}\n\t\treturn next.handle(request);\n\t}\n}\nexport class CustomResponseInterceptor implements IHttpInterceptor {\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn next.handle(request).pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tconsole.log('CustomResponseInterceptor.status', event.status);\n\t\t\t\t\tconsole.log('CustomResponseInterceptor.filter', request.params.get('filter'));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\nexport class CustomRequestCloneInterceptor implements IHttpInterceptor {\n\tintercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst clonedRequest = request.clone({\n\t\t\turl: request.url,\n\t\t});\n\t\treturn next.handle(clonedRequest);\n\t}\n}\n","import { Component, IFactoryMeta } from 'rxcomp';\nimport { RouterOutletStructure } from 'rxcomp-router';\n\nexport default class NotFoundComponent extends Component {\n\thost!: RouterOutletStructure;\n\tonInit() {\n\t\t// console.log('NotFoundComponent.onInit');\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[not-found-component]',\n\t\ttemplate: /* html */`\n        <div class=\"page-not-found\">\n            <div class=\"title\">Not Found</div>\n        </div>\n        `,\n\t};\n}\n","import 'gsap';\nimport { IElement, IFactoryMeta } from 'rxcomp';\nimport { RouterKeyValue, transition$, View } from 'rxcomp-router';\nimport { combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport default class TodolistItemComponent extends View {\n\tonInit() {\n\t\t// console.log('TodolistItemComponent.onInit', this.route);\n\t\tcombineLatest(this.route.data$, this.route.params$).pipe(\n\t\t\ttakeUntil(this.unsubscribe$)\n\t\t).subscribe((datas: RouterKeyValue[]) => {\n\t\t\tthis.title = datas[0].title;\n\t\t\tthis.itemId = datas[1].itemId;\n\t\t\t// this.pushChanges(); // !!! not needed;\n\t\t\t// console.log('TodolistItemComponent', datas);\n\t\t});\n\t}\n\tonEnter(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 0 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 1,\n\t\t\t\tduration: 0.6,\n\t\t\t\tease: Power3.easeOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tonExit(node: IElement) {\n\t\treturn transition$(complete => {\n\t\t\tgsap.set(node, { opacity: 1 });\n\t\t\tgsap.to(node, {\n\t\t\t\topacity: 0,\n\t\t\t\tduration: 0.6,\n\t\t\t\tease: Power3.easeOut,\n\t\t\t\tonComplete: () => {\n\t\t\t\t\tcomplete(true);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[detail-component]',\n\t\ttemplate: /* html */`\n        <div class=\"page-detail\">\n            <div class=\"title\">Todolist Item {{itemId}}</div>\n        </div>\n        `,\n\t};\n}\n","import { IServerVars } from \"../../../src/rxcomp-server\";\n\nexport const Vars: IServerVars = {\n\tname: 'rxcomp-server',\n\thost: '',\n\tresource: '/',\n\tapi: '/api',\n\tstatic: false,\n\tdevelopment: false,\n\tproduction: true,\n};\n/*\nexport const STATIC = window.location.port === '40333' || window.location.host === 'actarian.github.io';\nexport const DEVELOPMENT = ['localhost', '127.0.0.1', '0.0.0.0'].indexOf(window.location.host.split(':')[0]) !== -1;\nexport const PRODUCTION = !DEVELOPMENT;\nexport const ENV = {\n\tNAME: 'ws-events',\n\tSTATIC,\n\tDEVELOPMENT,\n\tPRODUCTION,\n\tRESOURCE: '/Modules/Events/Client/docs/',\n\tSTATIC_RESOURCE: './',\n\tAPI: '/api',\n\tSTATIC_API: (DEVELOPMENT && !STATIC) ? '/Modules/Events/Client/docs/api' : './api',\n};\nexport function getApiUrl(url, useStatic) {\n\tconst base = (useStatic || STATIC) ? ENV.STATIC_API : ENV.API;\n\tconst json = (useStatic || STATIC) ? '.json' : '';\n\treturn `${base}${url}${json}`;\n}\nexport function getResourceRoot() {\n\treturn STATIC ? ENV.STATIC_RESOURCE : ENV.RESOURCE;\n}\nexport function getSlug(url) {\n\tif (!url) {\n\t\treturn url;\n\t}\n\tif (url.indexOf(`/${ENV.NAME}`) !== 0) {\n\t\treturn url;\n\t}\n\tif (STATIC) {\n\t\t// console.log(url);\n\t\treturn url;\n\t}\n\turl = url.replace(`/${ENV.NAME}`, '');\n\turl = url.replace('.html', '');\n\treturn `/it/it${url}`;\n}\n*/\n","import { Component, errors$, IFactoryMeta } from 'rxcomp';\nimport { HttpService } from 'rxcomp-http';\nimport { RouterKeyValue, RouterOutletStructure } from 'rxcomp-router';\nimport { first, takeUntil } from 'rxjs/operators';\nimport { IResponseData, ITodoItem } from '../todo/todo';\nimport { Vars } from '../vars';\n\nexport default class TodolistComponent extends Component {\n\thost!: RouterOutletStructure;\n\titems: ITodoItem[] = [];\n\terror: any = null;\n\tonInit() {\n\t\tconst mode: number = 1;\n\t\tconst payload = { query: `{ getTodos { id, title, completed } }` };\n\t\tconst methodUrl: string = `${Vars.host}${Vars.api}`;\n\t\t// console.log('TodolistComponent.onInit', this);\n\t\tif (mode === 1) {\n\t\t\tHttpService.post$<IResponseData>(methodUrl, payload, {\n\t\t\t\tparams: { query: `{ getTodos { id, title, completed } }` },\n\t\t\t\treportProgress: false\n\t\t\t}).pipe(\n\t\t\t\tfirst(),\n\t\t\t).subscribe((response: IResponseData) => {\n\t\t\t\tthis.items = response.data.getTodos;\n\t\t\t\tthis.pushChanges();\n\t\t\t\t// console.log('TodolistComponent.getTodos', this.items);\n\t\t\t}, console.warn);\n\t\t} else if (mode === 2) {\n\t\t\t// console.log('TodolistComponent.methodUrl', methodUrl);\n\t\t\tHttpService.post$<IResponseData>(methodUrl, payload).pipe(\n\t\t\t\tfirst(),\n\t\t\t).subscribe((response: IResponseData) => {\n\t\t\t\tthis.items = response.data.getTodos;\n\t\t\t\tthis.pushChanges();\n\t\t\t\t// console.log('TodolistComponent.getTodos', this.items);\n\t\t\t}, console.warn);\n\t\t} else {\n\t\t\tHttpService.get$<IResponseData>(`${Vars.host}/data/todos.json`).pipe(\n\t\t\t\tfirst(),\n\t\t\t).subscribe((response: IResponseData) => {\n\t\t\t\tthis.items = response.data.getTodos;\n\t\t\t\tthis.pushChanges();\n\t\t\t\t// console.log('TodolistComponent.getTodos', this.items);\n\t\t\t}, console.warn);\n\t\t}\n\t\tconst route = this.host.route;\n\t\tif (route) {\n\t\t\troute.data$.pipe(\n\t\t\t\ttakeUntil(this.unsubscribe$)\n\t\t\t).subscribe((data: RouterKeyValue) => {\n\t\t\t\tthis.title = data.title;\n\t\t\t\t// this.pushChanges(); // !! not needed;\n\t\t\t\t// console.log('TodolistComponent', data);\n\t\t\t});\n\t\t}\n\t\t// generic errors\n\t\terrors$.pipe(\n\t\t\ttakeUntil(this.unsubscribe$),\n\t\t).subscribe(error => {\n\t\t\tthis.error = error;\n\t\t\tthis.pushChanges();\n\t\t});\n\t}\n\tonClick(item: { title: string, completed: boolean }) {\n\t\titem.completed = !item.completed;\n\t\tthis.pushChanges();\n\t}\n\tstatic meta: IFactoryMeta = {\n\t\tselector: '[todolist-component]',\n\t\thosts: { host: RouterOutletStructure },\n\t\ttemplate: /* html */`\n        <div class=\"page-todolist\">\n\t\t\t<div class=\"title\">{{title}}</div>\n\t\t\t<!-- {{items | json}} -->\n\t\t\t<ul class=\"list\">\n\t\t\t\t<li class=\"list__item\" *for=\"let item of items\" [class]=\"{ completed: item.completed }\" [style]=\"{ 'border-color': item.completed ? 'red' : 'black' }\">\n\t\t\t\t\t<div class=\"title\" [routerLink]=\"['/todolist', item.id]\" [innerHTML]=\"item.title\"></div>\n\t\t\t\t\t<div class=\"completed\" (click)=\"onClick(item)\" [innerHTML]=\"item.completed\"></div>\n\t\t\t\t\t<!-- !!! debug -->\n\t\t\t\t\t<!-- <div class=\"completed\" (click)=\"onClick(item)\">{{item.completed}}</div> -->\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div *if=\"error\">\n\t\t\t\t<span>error => {{error | json}}</span>\n\t\t\t</div>\n        </div>\n        `,\n\t};\n}\n","import { CoreModule, IModuleMeta, Module } from 'rxcomp';\nimport { HttpModule } from 'rxcomp-http';\nimport { RouterModule } from 'rxcomp-router';\nimport AppComponent from './app.component';\nimport { CustomRequestInterceptor, CustomResponseInterceptor } from './custom-interceptor/custom.interceptor';\nimport NotFoundComponent from './pages/not-found.component';\nimport TodolistItemComponent from './pages/todolist-item.component';\nimport TodolistComponent from './pages/todolist.component';\n\nexport default class AppModule extends Module {\n\tstatic meta: IModuleMeta = {\n\t\timports: [\n\t\t\tCoreModule,\n\t\t\tHttpModule.useInterceptors([CustomRequestInterceptor, CustomResponseInterceptor]),\n\t\t\tRouterModule.forRoot([\n\t\t\t\t{ path: '', redirectTo: '/todolist', pathMatch: 'full' },\n\t\t\t\t{ path: 'todolist', component: TodolistComponent, data: { title: 'Todolist' } },\n\t\t\t\t{ path: 'todolist/:itemId', component: TodolistItemComponent, data: { title: 'Todolist Item' } },\n\t\t\t\t{ path: '**', component: NotFoundComponent },\n\t\t\t]), // .useStrategy(LocationStrategyHash),\n\t\t],\n\t\tdeclarations: [\n\t\t\tTodolistComponent,\n\t\t\tTodolistItemComponent,\n\t\t\tNotFoundComponent\n\t\t],\n\t\tbootstrap: AppComponent,\n\t};\n}\n","import { Browser } from 'rxcomp';\nimport AppModule from './app.module';\n\nBrowser.bootstrap(AppModule);\n"]}