{"version":3,"sources":["../rxcomp/dist/iife/rxcomp.js"],"names":["rxcomp","exports","rxjs","operators","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_setPrototypeOf","o","p","setPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_construct","Parent","args","Class","a","push","apply","instance","Function","bind","arguments","CONTEXTS","NODES","Factory","this","rxcompId","unsubscribe$","Subject","changes$","ReplaySubject","_proto","onInit","onChanges","changes","onView","onDestroy","pushChanges","getContext","module","instances","next","Directive","_Factory","ClassDirective","_Directive","_this","class","keys","_this2","node","Array","slice","classList","forEach","x","object","split","concat","setAttribute","join","meta","selector","inputs","EventDirective","event","_getContext","parentInstance","replace","event$","fromEvent","pipe","shareReplay","expression","getAttribute","outputFunction","makeFunction","takeUntil","subscribe","resolve","Structure","Component","parse","RESERVED_PROPERTIES","Context","_Component","descriptors","mergeDescriptors","getPrototypeOf","defineProperties","self","ReferenceError","_assertThisInitialized","context","filter","indexOf","source","properties","getOwnPropertyNames","_loop","shift","hasOwnProperty","getOwnPropertyDescriptor","value","_len","_key","ForItem","_Context","$key","$value","index","count","get","even","ForStructure","_Structure","forbegin","document","createComment","parentNode","replaceChild","forend","insertBefore","nextSibling","removeAttribute","token","getExpressionToken","forFunction","iterable","result","isArray","array","total","previous","Math","max","clonedNode","cloneNode","_instance","makeInstance","compile","_node","removeChild","remove","trim","expressions","map","forExpressions","keyValueMatches","match","indexExpressions","HrefDirective","set","href","href_","IfStructure","ifbegin","ifend","ifFunction","element","InnerHtmlDirective","innerHTML","innerHTML_","undefined","JsonComponent","active","onToggle","template","Pipe","transform","JsonPipe","_Pipe","cache","Map","JSON","stringify","has","name","ORDER","Platform","bootstrap","moduleFactory","resolveMeta","querySelector","resolveImportedMeta","nodeInnerHTML","pipes","resolvePipes","factories","resolveFactories","sortFactories","unshift","selectors","unwrapSelectors","assign","imports","declarations","exported","importedPipes","importMeta","pipeFactory","_Array$prototype$conc","_this3","importedFactories","factoryList","sort","b","reduce","c","hosts","getExpressions","matchers","c1","a2","u3","v4","a5","e6","contains","hasAttribute","nodeName","toLowerCase","_this4","factory","excludes","matchSelector","unmatchSelector","includes","included","excluded","PLATFORM_BROWSER","window","PLATFORM_JS_DOM","navigator","userAgent","PLATFORM_NODE","process","versions","PLATFORM_WEB_WORKER","isPlatformServer","isPlatformBrowser","isPlatformWorker","ID","Module","componentNode","querySelectorsAll","getParentInstance","makeContext","makeHosts","makeInputs","outputs","makeOutputs","resolveInputsOutputs","params","parseExpression","payload","childNodes","child","nodeType","getParsableContextByNode","text","parseTextNode","keepInstance","keepContext","traverseDown","deleteContext","destroy","getInstance","global","getContextByNode","traverseUp","nodeExpressions","parseTextNodeExpression","wholeText","replacedText","nodeValue","textNode","createTextNode","pushFragment","from","to","fragment","substring","matches","regex","lastIndex","exec","find","getHost","makeInput","input","_this5","makeOutput","_this6","output$","tap","_this7","output","inputFunction","rx1","parsePipes","parseOptionalChaining","parsePipeParams","func","segments","word","block","t","substr","tokens","rxcompNodeId","id","keepContexts","nodeContexts","complete","matchSelectors","results","selectorResult","selectorResults","callback","j","traversePrevious","previousSibling","traverseNext","current","SrcDirective","src","src_","StyleDirective","style","previousStyle","propertyName","removeProperty","_splitted","_propertyName","setProperty","CoreModule","_Module","Browser","_Platform","rxcomp_hydrate_","_meta$node$parentNode","_instances"],"mappings":"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","file":"docs\\js\\rxcomp.min.js","sourcesContent":["/**\n * @license rxcomp v1.0.0-beta.12\n * (c) 2020 Luca Zampetti <lzampetti@gmail.com>\n * License: MIT\n */\n\nvar rxcomp=(function(exports,rxjs,operators){'use strict';function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}var CONTEXTS = {};\nvar NODES = {};\n\nvar Factory = function () {\n  function Factory() {\n    this.rxcompId = -1;\n    this.unsubscribe$ = new rxjs.Subject();\n    this.changes$ = new rxjs.ReplaySubject(1);\n  }\n\n  var _proto = Factory.prototype;\n\n  _proto.onInit = function onInit() {};\n\n  _proto.onChanges = function onChanges(changes) {};\n\n  _proto.onView = function onView() {};\n\n  _proto.onDestroy = function onDestroy() {};\n\n  _proto.pushChanges = function pushChanges() {\n    var _getContext = getContext(this),\n        module = _getContext.module;\n\n    if (module.instances) {\n      this.changes$.next(this);\n      this.onView();\n    }\n  };\n\n  return Factory;\n}();\nfunction getContext(instance) {\n  return CONTEXTS[instance.rxcompId];\n}var Directive = function (_Factory) {\n  _inheritsLoose(Directive, _Factory);\n\n  function Directive() {\n    return _Factory.apply(this, arguments) || this;\n  }\n\n  return Directive;\n}(Factory);var ClassDirective = function (_Directive) {\n  _inheritsLoose(ClassDirective, _Directive);\n\n  function ClassDirective() {\n    var _this;\n\n    _this = _Directive.apply(this, arguments) || this;\n    _this.class = '';\n    _this.keys = [];\n    return _this;\n  }\n\n  var _proto = ClassDirective.prototype;\n\n  _proto.onInit = function onInit() {\n    var _this2 = this;\n\n    var _getContext = getContext(this),\n        node = _getContext.node;\n\n    Array.prototype.slice.call(node.classList).forEach(function (x) {\n      return _this2.keys.push(x);\n    });\n  };\n\n  _proto.onChanges = function onChanges() {\n    var _getContext2 = getContext(this),\n        node = _getContext2.node;\n\n    var keys = [];\n    var object = this.class;\n\n    if (typeof object === 'object') {\n      for (var key in object) {\n        if (object[key]) {\n          keys.push(key);\n        }\n      }\n    } else if (typeof object === 'string') {\n      keys = object.split(/\\s+/);\n    }\n\n    keys = keys.concat(this.keys);\n    node.setAttribute('class', keys.join(' '));\n  };\n\n  return ClassDirective;\n}(Directive);\nClassDirective.meta = {\n  selector: \"[[class]]\",\n  inputs: ['class']\n};var EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];\n\nvar EventDirective = function (_Directive) {\n  _inheritsLoose(EventDirective, _Directive);\n\n  function EventDirective() {\n    var _this;\n\n    _this = _Directive.apply(this, arguments) || this;\n    _this.event = '';\n    return _this;\n  }\n\n  var _proto = EventDirective.prototype;\n\n  _proto.onInit = function onInit() {\n    var _getContext = getContext(this),\n        module = _getContext.module,\n        node = _getContext.node,\n        parentInstance = _getContext.parentInstance,\n        selector = _getContext.selector;\n\n    var event = this.event = selector.replace(/\\[|\\]|\\(|\\)/g, '');\n    var event$ = rxjs.fromEvent(node, event).pipe(operators.shareReplay(1));\n    var expression = node.getAttribute(\"(\" + event + \")\");\n\n    if (expression) {\n      var outputFunction = module.makeFunction(expression, ['$event']);\n      event$.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {\n        module.resolve(outputFunction, parentInstance, event);\n      });\n    } else {\n      parentInstance[event + \"$\"] = event$;\n    }\n  };\n\n  return EventDirective;\n}(Directive);\nEventDirective.meta = {\n  selector: \"[(\" + EVENTS.join(')],[(') + \")]\"\n};var Structure = function (_Factory) {\n  _inheritsLoose(Structure, _Factory);\n\n  function Structure() {\n    return _Factory.apply(this, arguments) || this;\n  }\n\n  return Structure;\n}(Factory);var Component = function (_Factory) {\n  _inheritsLoose(Component, _Factory);\n\n  function Component() {\n    return _Factory.apply(this, arguments) || this;\n  }\n\n  var _proto = Component.prototype;\n\n  _proto.pushChanges = function pushChanges() {\n    var _getContext = getContext(this),\n        module = _getContext.module,\n        node = _getContext.node;\n\n    if (module.instances) {\n      this.changes$.next(this);\n      module.parse(node, this);\n      this.onView();\n    }\n  };\n\n  return Component;\n}(Factory);var RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];\n\nvar Context = function (_Component) {\n  _inheritsLoose(Context, _Component);\n\n  function Context(parentInstance, descriptors) {\n    var _this;\n\n    if (descriptors === void 0) {\n      descriptors = {};\n    }\n\n    _this = _Component.call(this) || this;\n    descriptors = Context.mergeDescriptors(parentInstance, parentInstance, descriptors);\n    descriptors = Context.mergeDescriptors(Object.getPrototypeOf(parentInstance), parentInstance, descriptors);\n    Object.defineProperties(_assertThisInitialized(_this), descriptors);\n    return _this;\n  }\n\n  var _proto = Context.prototype;\n\n  _proto.pushChanges = function pushChanges() {\n    var _this2 = this;\n\n    var context = getContext(this);\n\n    if (!context.keys) {\n      context.keys = Object.keys(context.parentInstance).filter(function (key) {\n        return RESERVED_PROPERTIES.indexOf(key) === -1;\n      });\n    }\n\n    if (context.module.instances) {\n      context.keys.forEach(function (key) {\n        _this2[key] = context.parentInstance[key];\n      });\n    }\n\n    _Component.prototype.pushChanges.call(this);\n  };\n\n  Context.mergeDescriptors = function mergeDescriptors(source, instance, descriptors) {\n    if (descriptors === void 0) {\n      descriptors = {};\n    }\n\n    var properties = Object.getOwnPropertyNames(source);\n\n    var _loop = function _loop() {\n      var key = properties.shift();\n\n      if (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n\n        if (typeof descriptor.value == 'function') {\n          descriptor.value = function () {\n            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n              args[_key] = arguments[_key];\n            }\n\n            return instance[key].apply(instance, args);\n          };\n        }\n\n        descriptors[key] = descriptor;\n      }\n    };\n\n    while (properties.length) {\n      _loop();\n    }\n\n    return descriptors;\n  };\n\n  return Context;\n}(Component);var ForItem = function (_Context) {\n  _inheritsLoose(ForItem, _Context);\n\n  function ForItem(key, $key, value, $value, index, count, parentInstance) {\n    var _this;\n\n    _this = _Context.call(this, parentInstance) || this;\n    _this[key] = $key;\n    _this[value] = $value;\n    _this.index = index;\n    _this.count = count;\n    return _this;\n  }\n\n  _createClass(ForItem, [{\n    key: \"first\",\n    get: function get() {\n      return this.index === 0;\n    }\n  }, {\n    key: \"last\",\n    get: function get() {\n      return this.index === this.count - 1;\n    }\n  }, {\n    key: \"even\",\n    get: function get() {\n      return this.index % 2 === 0;\n    }\n  }, {\n    key: \"odd\",\n    get: function get() {\n      return !this.even;\n    }\n  }]);\n\n  return ForItem;\n}(Context);var ForStructure = function (_Structure) {\n  _inheritsLoose(ForStructure, _Structure);\n\n  function ForStructure() {\n    var _this;\n\n    _this = _Structure.apply(this, arguments) || this;\n    _this.instances = [];\n    return _this;\n  }\n\n  var _proto = ForStructure.prototype;\n\n  _proto.onInit = function onInit() {\n    var _getContext = getContext(this),\n        module = _getContext.module,\n        node = _getContext.node;\n\n    var forbegin = document.createComment(\"*for begin\");\n    forbegin.rxcompId = node.rxcompId;\n    node.parentNode.replaceChild(forbegin, node);\n    var forend = this.forend = document.createComment(\"*for end\");\n    forbegin.parentNode.insertBefore(forend, forbegin.nextSibling);\n    var expression = node.getAttribute('*for');\n    node.removeAttribute('*for');\n    var token = this.token = this.getExpressionToken(expression);\n    this.forFunction = module.makeFunction(token.iterable);\n  };\n\n  _proto.onChanges = function onChanges(changes) {\n    var context = getContext(this);\n    var module = context.module;\n    var node = context.node;\n    var token = this.token;\n    var result = module.resolve(this.forFunction, changes, this) || [];\n    var isArray = Array.isArray(result);\n    var array = isArray ? result : Object.keys(result);\n    var total = array.length;\n    var previous = this.instances.length;\n\n    for (var i = 0; i < Math.max(previous, total); i++) {\n      if (i < total) {\n        var key = isArray ? i : array[i];\n        var value = isArray ? array[key] : result[key];\n\n        if (i < previous) {\n          var instance = this.instances[i];\n          instance[token.key] = key;\n          instance[token.value] = value;\n        } else {\n          var clonedNode = node.cloneNode(true);\n          delete clonedNode.rxcompId;\n          this.forend.parentNode.insertBefore(clonedNode, this.forend);\n          var args = [token.key, key, token.value, value, i, total, context.parentInstance];\n\n          var _instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);\n\n          if (_instance) {\n            module.compile(clonedNode, _instance);\n            this.instances.push(_instance);\n          }\n        }\n      } else {\n        var _instance2 = this.instances[i];\n\n        var _getContext2 = getContext(_instance2),\n            _node = _getContext2.node;\n\n        _node.parentNode.removeChild(_node);\n\n        module.remove(_node);\n      }\n    }\n\n    this.instances.length = array.length;\n  };\n\n  _proto.getExpressionToken = function getExpressionToken(expression) {\n    if (expression === null) {\n      throw 'invalid for';\n    }\n\n    if (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {\n      throw 'invalid for';\n    }\n\n    var expressions = expression.split(';').map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x !== '';\n    });\n    var forExpressions = expressions[0].split(' of ').map(function (x) {\n      return x.trim();\n    });\n    var value = forExpressions[0].replace(/\\s*let\\s*/, '');\n    var iterable = forExpressions[1];\n    var key = 'index';\n    var keyValueMatches = value.match(/\\[(.+)\\s*,\\s*(.+)\\]/);\n\n    if (keyValueMatches) {\n      key = keyValueMatches[1];\n      value = keyValueMatches[2];\n    }\n\n    if (expressions.length > 1) {\n      var indexExpressions = expressions[1].split(/\\s*let\\s*|\\s*=\\s*index/).map(function (x) {\n        return x.trim();\n      });\n\n      if (indexExpressions.length === 3) {\n        key = indexExpressions[1];\n      }\n    }\n\n    return {\n      key: key,\n      value: value,\n      iterable: iterable\n    };\n  };\n\n  return ForStructure;\n}(Structure);\nForStructure.meta = {\n  selector: '[*for]'\n};var HrefDirective = function (_Directive) {\n  _inheritsLoose(HrefDirective, _Directive);\n\n  function HrefDirective() {\n    return _Directive.apply(this, arguments) || this;\n  }\n\n  _createClass(HrefDirective, [{\n    key: \"href\",\n    set: function set(href) {\n      if (this.href_ !== href) {\n        this.href_ = href;\n\n        var _getContext = getContext(this),\n            node = _getContext.node;\n\n        href ? node.setAttribute('href', href) : node.removeAttribute('href');\n      }\n    },\n    get: function get() {\n      return this.href_;\n    }\n  }]);\n\n  return HrefDirective;\n}(Directive);\nHrefDirective.meta = {\n  selector: '[[href]]',\n  inputs: ['href']\n};var IfStructure = function (_Structure) {\n  _inheritsLoose(IfStructure, _Structure);\n\n  function IfStructure() {\n    return _Structure.apply(this, arguments) || this;\n  }\n\n  var _proto = IfStructure.prototype;\n\n  _proto.onInit = function onInit() {\n    var _getContext = getContext(this),\n        module = _getContext.module,\n        node = _getContext.node;\n\n    var ifbegin = this.ifbegin = document.createComment(\"*if begin\");\n    ifbegin.rxcompId = node.rxcompId;\n    node.parentNode.replaceChild(ifbegin, node);\n    var ifend = this.ifend = document.createComment(\"*if end\");\n    ifbegin.parentNode.insertBefore(ifend, ifbegin.nextSibling);\n    var expression = node.getAttribute('*if');\n    this.ifFunction = module.makeFunction(expression);\n    var clonedNode = node.cloneNode(true);\n    clonedNode.removeAttribute('*if');\n    this.clonedNode = clonedNode;\n    this.element = clonedNode.cloneNode(true);\n  };\n\n  _proto.onChanges = function onChanges(changes) {\n    var _getContext2 = getContext(this),\n        module = _getContext2.module;\n\n    var value = module.resolve(this.ifFunction, changes, this);\n    var element = this.element;\n\n    if (value) {\n      if (!element.parentNode) {\n        var ifend = this.ifend;\n        ifend.parentNode.insertBefore(element, ifend);\n        module.compile(element);\n      }\n    } else {\n      if (element.parentNode) {\n        module.remove(element, this);\n        element.parentNode.removeChild(element);\n        this.element = this.clonedNode.cloneNode(true);\n      }\n    }\n  };\n\n  return IfStructure;\n}(Structure);\nIfStructure.meta = {\n  selector: '[*if]'\n};var InnerHtmlDirective = function (_Directive) {\n  _inheritsLoose(InnerHtmlDirective, _Directive);\n\n  function InnerHtmlDirective() {\n    return _Directive.apply(this, arguments) || this;\n  }\n\n  _createClass(InnerHtmlDirective, [{\n    key: \"innerHTML\",\n    set: function set(innerHTML) {\n      if (this.innerHTML_ !== innerHTML) {\n        this.innerHTML_ = innerHTML;\n\n        var _getContext = getContext(this),\n            node = _getContext.node;\n\n        node.innerHTML = innerHTML == undefined ? '' : innerHTML;\n      }\n    },\n    get: function get() {\n      return this.innerHTML_;\n    }\n  }]);\n\n  return InnerHtmlDirective;\n}(Directive);\nInnerHtmlDirective.meta = {\n  selector: \"[innerHTML]\",\n  inputs: ['innerHTML']\n};var JsonComponent = function (_Component) {\n  _inheritsLoose(JsonComponent, _Component);\n\n  function JsonComponent() {\n    var _this;\n\n    _this = _Component.apply(this, arguments) || this;\n    _this.active = false;\n    return _this;\n  }\n\n  var _proto = JsonComponent.prototype;\n\n  _proto.onToggle = function onToggle() {\n    this.active = !this.active;\n    this.pushChanges();\n  };\n\n  return JsonComponent;\n}(Component);\nJsonComponent.meta = {\n  selector: 'json-component',\n  inputs: ['item'],\n  template: \"\\n\\t\\t<div class=\\\"rxc-block\\\">\\n\\t\\t\\t<div class=\\\"rxc-head\\\">\\n\\t\\t\\t\\t<span class=\\\"rxc-head__title\\\" (click)=\\\"onToggle()\\\">\\n\\t\\t\\t\\t\\t<span *if=\\\"!active\\\">+ json </span>\\n\\t\\t\\t\\t\\t<span *if=\\\"active\\\">- json </span>\\n\\t\\t\\t\\t\\t<span [innerHTML]=\\\"item\\\"></span>\\n\\t\\t\\t\\t</span>\\n\\t\\t\\t</div>\\n\\t\\t\\t<ul class=\\\"rxc-list\\\" *if=\\\"active\\\">\\n\\t\\t\\t\\t<li class=\\\"rxc-list__item\\\">\\n\\t\\t\\t\\t\\t<span class=\\\"rxc-list__value\\\" [innerHTML]=\\\"item | json\\\"></span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\"\n};var Pipe = function () {\n  function Pipe() {}\n\n  Pipe.transform = function transform(value) {\n    return value;\n  };\n\n  return Pipe;\n}();var JsonPipe = function (_Pipe) {\n  _inheritsLoose(JsonPipe, _Pipe);\n\n  function JsonPipe() {\n    return _Pipe.apply(this, arguments) || this;\n  }\n\n  JsonPipe.transform = function transform(value) {\n    var cache = new Map();\n    var json = JSON.stringify(value, function (key, value) {\n      if (typeof value === 'object' && value != null) {\n        if (cache.has(value)) {\n          return '#ref';\n        }\n\n        cache.set(value, true);\n      }\n\n      return value;\n    }, 2);\n    return json;\n  };\n\n  return JsonPipe;\n}(Pipe);\nJsonPipe.meta = {\n  name: 'json'\n};var ORDER = [Structure, Component, Directive];\n\nvar Platform = function () {\n  function Platform() {}\n\n  Platform.bootstrap = function bootstrap(moduleFactory) {\n    if (!moduleFactory) {\n      throw 'missing moduleFactory';\n    }\n\n    if (!moduleFactory.meta) {\n      throw 'missing moduleFactory meta';\n    }\n\n    if (!moduleFactory.meta.bootstrap) {\n      throw 'missing bootstrap';\n    }\n\n    if (!moduleFactory.meta.bootstrap.meta) {\n      throw 'missing bootstrap meta';\n    }\n\n    if (!moduleFactory.meta.bootstrap.meta.selector) {\n      throw 'missing bootstrap meta selector';\n    }\n\n    var meta = this.resolveMeta(moduleFactory);\n    var module = new moduleFactory();\n    module.meta = meta;\n    return module;\n  };\n\n  Platform.querySelector = function querySelector(selector) {\n    return document.querySelector(selector);\n  };\n\n  Platform.resolveMeta = function resolveMeta(moduleFactory) {\n    var meta = this.resolveImportedMeta(moduleFactory);\n    var bootstrap = moduleFactory.meta.bootstrap;\n    var node = this.querySelector(bootstrap.meta.selector);\n\n    if (!node) {\n      throw \"missing node \" + bootstrap.meta.selector;\n    }\n\n    var nodeInnerHTML = node.innerHTML;\n    var pipes = this.resolvePipes(meta);\n    var factories = this.resolveFactories(meta);\n    this.sortFactories(factories);\n    factories.unshift(bootstrap);\n    var selectors = this.unwrapSelectors(factories);\n    return {\n      factories: factories,\n      pipes: pipes,\n      selectors: selectors,\n      bootstrap: bootstrap,\n      node: node,\n      nodeInnerHTML: nodeInnerHTML\n    };\n  };\n\n  Platform.resolveImportedMeta = function resolveImportedMeta(moduleFactory) {\n    var _this = this;\n\n    var meta = Object.assign({\n      imports: [],\n      declarations: [],\n      pipes: [],\n      exports: []\n    }, moduleFactory.meta);\n    meta.imports = (moduleFactory.meta.imports || []).map(function (moduleFactory) {\n      return _this.resolveImportedMeta(moduleFactory);\n    });\n    return meta;\n  };\n\n  Platform.resolvePipes = function resolvePipes(meta, exported) {\n    var _this2 = this;\n\n    var importedPipes = meta.imports.map(function (importMeta) {\n      return _this2.resolvePipes(importMeta, true);\n    });\n    var pipes = {};\n    var pipeList = (exported ? meta.exports : meta.declarations).filter(function (x) {\n      return x.prototype instanceof Pipe;\n    });\n    pipeList.forEach(function (pipeFactory) {\n      return pipes[pipeFactory.meta.name] = pipeFactory;\n    });\n    return Object.assign.apply(Object, [{}].concat(importedPipes, [pipes]));\n  };\n\n  Platform.resolveFactories = function resolveFactories(meta, exported) {\n    var _this3 = this,\n        _Array$prototype$conc;\n\n    var importedFactories = meta.imports.map(function (importMeta) {\n      return _this3.resolveFactories(importMeta, true);\n    });\n    var factoryList = (exported ? meta.exports : meta.declarations).filter(function (x) {\n      return x.prototype instanceof Factory;\n    });\n    return (_Array$prototype$conc = Array.prototype.concat).call.apply(_Array$prototype$conc, [factoryList].concat(importedFactories));\n  };\n\n  Platform.sortFactories = function sortFactories(factories) {\n    factories.sort(function (a, b) {\n      var ai = ORDER.reduce(function (p, c, i) {\n        return a.prototype instanceof c ? i : p;\n      }, -1);\n      var bi = ORDER.reduce(function (p, c, i) {\n        return b.prototype instanceof c ? i : p;\n      }, -1);\n      var o = ai - bi;\n\n      if (o === 0) {\n        return (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);\n      }\n\n      return o;\n    });\n  };\n\n  Platform.getExpressions = function getExpressions(selector) {\n    var matchers = [];\n    selector.replace(/\\.([\\w\\-\\_]+)|\\[(.+?\\]*)(\\=)(.*?)\\]|\\[(.+?\\]*)\\]|([\\w\\-\\_]+)/g, function (value, c1, a2, u3, v4, a5, e6) {\n      if (c1) {\n        matchers.push(function (node) {\n          return node.classList.contains(c1);\n        });\n      }\n\n      if (a2) {\n        matchers.push(function (node) {\n          return node.hasAttribute(a2) && node.getAttribute(a2) === v4 || node.hasAttribute(\"[\" + a2 + \"]\") && node.getAttribute(\"[\" + a2 + \"]\") === v4;\n        });\n      }\n\n      if (a5) {\n        matchers.push(function (node) {\n          return node.hasAttribute(a5) || node.hasAttribute(\"[\" + a5 + \"]\");\n        });\n      }\n\n      if (e6) {\n        matchers.push(function (node) {\n          return node.nodeName.toLowerCase() === e6.toLowerCase();\n        });\n      }\n\n      return '';\n    });\n    return matchers;\n  };\n\n  Platform.unwrapSelectors = function unwrapSelectors(factories) {\n    var _this4 = this;\n\n    var selectors = [];\n    factories.forEach(function (factory) {\n      if (factory.meta && factory.meta.selector) {\n        factory.meta.selector.split(',').forEach(function (selector) {\n          selector = selector.trim();\n          var excludes = [];\n          var matchSelector = selector.replace(/\\:not\\((.+?)\\)/g, function (value, unmatchSelector) {\n            excludes = _this4.getExpressions(unmatchSelector);\n            return '';\n          });\n\n          var includes = _this4.getExpressions(matchSelector);\n\n          selectors.push(function (node) {\n            var included = includes.reduce(function (p, match) {\n              return p && match(node);\n            }, true);\n            var excluded = excludes.reduce(function (p, match) {\n              return p || match(node);\n            }, false);\n\n            if (included && !excluded) {\n              return {\n                node: node,\n                factory: factory,\n                selector: selector\n              };\n            } else {\n              return false;\n            }\n          });\n        });\n      }\n    });\n    return selectors;\n  };\n\n  return Platform;\n}();\nvar PLATFORM_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\nvar PLATFORM_JS_DOM = typeof window !== 'undefined' && window.name === 'nodejs' || typeof navigator !== 'undefined' && navigator.userAgent.includes('Node.js') || typeof navigator !== 'undefined' && navigator.userAgent.includes('jsdom');\nvar PLATFORM_NODE = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;\nvar PLATFORM_WEB_WORKER = typeof self === 'object' && self.constructor && self.constructor.name === 'DedicatedWorkerGlobalScope';\nvar isPlatformServer = PLATFORM_NODE;\nvar isPlatformBrowser = !PLATFORM_NODE && PLATFORM_BROWSER;\nvar isPlatformWorker = PLATFORM_WEB_WORKER;var ID = 0;\n\nvar Module = function () {\n  function Module() {}\n\n  var _proto = Module.prototype;\n\n  _proto.compile = function compile(node, parentInstance) {\n    var _this = this;\n\n    var componentNode;\n    var instances = Module.querySelectorsAll(node, this.meta.selectors, []).map(function (match) {\n      if (componentNode && componentNode !== match.node) {\n        parentInstance = undefined;\n      }\n\n      var instance = _this.makeInstance(match.node, match.factory, match.selector, parentInstance);\n\n      if (match.factory.prototype instanceof Component) {\n        componentNode = match.node;\n      }\n\n      return instance;\n    }).filter(function (x) {\n      return x !== undefined;\n    });\n    return instances;\n  };\n\n  _proto.makeInstance = function makeInstance(node, factory, selector, parentInstance, args) {\n    var _this2 = this;\n\n    if (parentInstance || node.parentNode) {\n      var meta = factory.meta;\n      parentInstance = parentInstance || this.getParentInstance(node.parentNode);\n\n      if (!parentInstance) {\n        return undefined;\n      }\n\n      var instance = _construct(factory, args || []);\n\n      var context = Module.makeContext(this, instance, parentInstance, node, factory, selector);\n\n      if (meta) {\n        this.makeHosts(meta, instance, node);\n        context.inputs = this.makeInputs(meta, instance);\n        context.outputs = this.makeOutputs(meta, instance);\n\n        if (parentInstance instanceof Factory) {\n          this.resolveInputsOutputs(instance, parentInstance);\n        }\n      }\n\n      instance.onInit();\n\n      if (parentInstance instanceof Factory) {\n        parentInstance.changes$.pipe(operators.takeUntil(instance.unsubscribe$)).subscribe(function (changes) {\n          if (meta) {\n            _this2.resolveInputsOutputs(instance, changes);\n          }\n\n          instance.onChanges(changes);\n          instance.pushChanges();\n        });\n      }\n\n      return instance;\n    } else {\n      return undefined;\n    }\n  };\n\n  _proto.makeFunction = function makeFunction(expression, params) {\n    if (params === void 0) {\n      params = ['$instance'];\n    }\n\n    if (expression) {\n      expression = Module.parseExpression(expression);\n      var args = params.join(',');\n      var expression_func = new Function(\"with(this) {\\n\\t\\t\\t\\treturn (function (\" + args + \", $$module) {\\n\\t\\t\\t\\t\\tconst $$pipes = $$module.meta.pipes;\\n\\t\\t\\t\\t\\treturn \" + expression + \";\\n\\t\\t\\t\\t}.bind(this)).apply(this, arguments);\\n\\t\\t\\t}\");\n      return expression_func;\n    } else {\n      return function () {\n        return null;\n      };\n    }\n  };\n\n  _proto.resolve = function resolve(expression, parentInstance, payload) {\n    return expression.apply(parentInstance, [payload, this]);\n  };\n\n  _proto.parse = function parse(node, instance) {\n    for (var i = 0; i < node.childNodes.length; i++) {\n      var child = node.childNodes[i];\n\n      if (child.nodeType === 1) {\n        var element = child;\n        var context = getParsableContextByNode(element);\n\n        if (!context) {\n          this.parse(element, instance);\n        }\n      } else if (child.nodeType === 3) {\n        var text = child;\n        this.parseTextNode(text, instance);\n      }\n    }\n  };\n\n  _proto.remove = function remove(node, keepInstance) {\n    var keepContext = keepInstance ? getContext(keepInstance) : undefined;\n    Module.traverseDown(node, function (node) {\n      var rxcompId = node.rxcompId;\n\n      if (rxcompId) {\n        var keepContexts = Module.deleteContext(rxcompId, keepContext);\n\n        if (keepContexts.length === 0) {\n          delete node.rxcompId;\n        }\n      }\n    });\n    return node;\n  };\n\n  _proto.destroy = function destroy() {\n    this.remove(this.meta.node);\n    this.meta.node.innerHTML = this.meta.nodeInnerHTML;\n  };\n\n  _proto.makeContext = function makeContext(instance, parentInstance, node, selector) {\n    var context = Module.makeContext(this, instance, parentInstance, node, instance.constructor, selector);\n    return context;\n  };\n\n  _proto.getInstance = function getInstance(node) {\n    if (node === document) {\n      return isPlatformBrowser ? window : global;\n    }\n\n    var context = getContextByNode(node);\n\n    if (context) {\n      return context.instance;\n    } else {\n      return undefined;\n    }\n  };\n\n  _proto.getParentInstance = function getParentInstance(node) {\n    var _this3 = this;\n\n    return Module.traverseUp(node, function (node) {\n      return _this3.getInstance(node);\n    });\n  };\n\n  _proto.parseTextNode = function parseTextNode(node, instance) {\n    var _this4 = this;\n\n    var expressions = node.nodeExpressions;\n\n    if (!expressions) {\n      expressions = this.parseTextNodeExpression(node.wholeText);\n    }\n\n    if (expressions.length) {\n      var replacedText = expressions.reduce(function (p, c) {\n        var text;\n\n        if (typeof c === 'function') {\n          text = _this4.resolve(c, instance, instance);\n\n          if (text == undefined) {\n            text = '';\n          }\n        } else {\n          text = c;\n        }\n\n        return p + text;\n      }, '');\n\n      if (node.nodeValue !== replacedText) {\n        var textNode = document.createTextNode(replacedText);\n        textNode.nodeExpressions = expressions;\n        node.parentNode.replaceChild(textNode, node);\n      }\n    } else {\n      node.nodeExpressions = expressions;\n    }\n  };\n\n  _proto.pushFragment = function pushFragment(nodeValue, from, to, expressions) {\n    var fragment = nodeValue.substring(from, to);\n    expressions.push(fragment);\n  };\n\n  _proto.parseTextNodeExpression = function parseTextNodeExpression(nodeValue) {\n    var expressions = [];\n    var regex = /\\{{2}((([^{}])|(\\{([^{}]|(\\{.*?\\}))+?\\}))*?)\\}{2}/g;\n    var lastIndex = 0,\n        matches;\n\n    while ((matches = regex.exec(nodeValue)) !== null) {\n      var index = regex.lastIndex - matches[0].length;\n\n      if (index > lastIndex) {\n        this.pushFragment(nodeValue, index, lastIndex, expressions);\n      }\n\n      lastIndex = regex.lastIndex;\n      var expression = this.makeFunction(matches[1]);\n      expressions.push(expression);\n    }\n\n    var length = nodeValue.length;\n\n    if (length > lastIndex) {\n      this.pushFragment(nodeValue, lastIndex, length, expressions);\n    }\n\n    if (expressions.find(function (x) {\n      return typeof x === 'function';\n    })) {\n      return expressions;\n    } else {\n      return [];\n    }\n  };\n\n  _proto.makeHosts = function makeHosts(meta, instance, node) {\n    if (meta.hosts) {\n      Object.keys(meta.hosts).forEach(function (key) {\n        var factory = meta.hosts[key];\n        instance[key] = getHost(instance, factory, node);\n      });\n    }\n  };\n\n  _proto.makeInput = function makeInput(instance, key) {\n    var _getContext = getContext(instance),\n        node = _getContext.node;\n\n    var input = null,\n        expression = null;\n\n    if (node.hasAttribute(\"[\" + key + \"]\")) {\n      expression = node.getAttribute(\"[\" + key + \"]\");\n    } else if (node.hasAttribute(key)) {\n      var attribute = node.getAttribute(key).replace(/({{)|(}})|(\")/g, function (substring, a, b, c) {\n        if (a) {\n          return '\"+';\n        }\n\n        if (b) {\n          return '+\"';\n        }\n\n        if (c) {\n          return '\\\"';\n        }\n\n        return '';\n      });\n      expression = \"\\\"\" + attribute + \"\\\"\";\n    }\n\n    if (expression) {\n      input = this.makeFunction(expression);\n    }\n\n    return input;\n  };\n\n  _proto.makeInputs = function makeInputs(meta, instance) {\n    var _this5 = this;\n\n    var inputs = {};\n\n    if (meta.inputs) {\n      meta.inputs.forEach(function (key, i) {\n        var input = _this5.makeInput(instance, key);\n\n        if (input) {\n          inputs[key] = input;\n        }\n      });\n    }\n\n    return inputs;\n  };\n\n  _proto.makeOutput = function makeOutput(instance, key) {\n    var _this6 = this;\n\n    var context = getContext(instance);\n    var node = context.node;\n    var parentInstance = context.parentInstance;\n    var expression = node.getAttribute(\"(\" + key + \")\");\n    var outputFunction = expression ? this.makeFunction(expression, ['$event']) : null;\n    var output$ = new rxjs.Subject().pipe(operators.tap(function (event) {\n      if (outputFunction) {\n        _this6.resolve(outputFunction, parentInstance, event);\n      }\n    }));\n    output$.pipe(operators.takeUntil(instance.unsubscribe$)).subscribe();\n    instance[key] = output$;\n    return output$;\n  };\n\n  _proto.makeOutputs = function makeOutputs(meta, instance) {\n    var _this7 = this;\n\n    var outputs = {};\n\n    if (meta.outputs) {\n      meta.outputs.forEach(function (key) {\n        var output = _this7.makeOutput(instance, key);\n\n        if (output) {\n          outputs[key] = output;\n        }\n      });\n    }\n\n    return outputs;\n  };\n\n  _proto.resolveInputsOutputs = function resolveInputsOutputs(instance, changes) {\n    var context = getContext(instance);\n    var parentInstance = context.parentInstance;\n    var inputs = context.inputs;\n\n    for (var key in inputs) {\n      var inputFunction = inputs[key];\n      var value = this.resolve(inputFunction, parentInstance, instance);\n      instance[key] = value;\n    }\n  };\n\n  Module.parseExpression = function parseExpression(expression) {\n    var l = '┌';\n    var r = '┘';\n    var rx1 = /(\\()([^\\(\\)]*)(\\))/;\n\n    while (expression.match(rx1)) {\n      expression = expression.replace(rx1, function (substring) {\n        return \"\" + l + Module.parsePipes(arguments.length <= 2 ? undefined : arguments[2]) + r;\n      });\n    }\n\n    expression = Module.parsePipes(expression);\n    expression = expression.replace(/(┌)|(┘)/g, function (substring) {\n      return (arguments.length <= 1 ? undefined : arguments[1]) ? '(' : ')';\n    });\n    return Module.parseOptionalChaining(expression);\n  };\n\n  Module.parsePipes = function parsePipes(expression) {\n    var l = '┌';\n    var r = '┘';\n    var rx1 = /(.*?[^\\|])\\|([^\\|]+)/;\n\n    while (expression.match(rx1)) {\n      expression = expression.replace(rx1, function (substring) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var value = args[0].trim();\n        var params = Module.parsePipeParams(args[1]);\n        var func = params.shift().trim();\n        return \"$$pipes.\" + func + \".transform\" + l + [value].concat(params) + r;\n      });\n    }\n\n    return expression;\n  };\n\n  Module.parsePipeParams = function parsePipeParams(expression) {\n    var segments = [];\n    var i = 0,\n        word = '',\n        block = 0;\n    var t = expression.length;\n\n    while (i < t) {\n      var c = expression.substr(i, 1);\n\n      if (c === '{' || c === '(' || c === '[') {\n        block++;\n      }\n\n      if (c === '}' || c === ')' || c === ']') {\n        block--;\n      }\n\n      if (c === ':' && block === 0) {\n        if (word.length) {\n          segments.push(word.trim());\n        }\n\n        word = '';\n      } else {\n        word += c;\n      }\n\n      i++;\n    }\n\n    if (word.length) {\n      segments.push(word.trim());\n    }\n\n    return segments;\n  };\n\n  Module.parseOptionalChaining = function parseOptionalChaining(expression) {\n    var regex = /(\\w+(\\?\\.))+([\\.|\\w]+)/g;\n    var previous;\n    expression = expression.replace(regex, function (substring) {\n      var tokens = substring.split('?.');\n\n      for (var i = 0; i < tokens.length - 1; i++) {\n        var a = i > 0 ? \"(\" + tokens[i] + \" = \" + previous + \")\" : tokens[i];\n        var b = tokens[i + 1];\n        previous = i > 0 ? a + \".\" + b : \"(\" + a + \" ? \" + a + \".\" + b + \" : void 0)\";\n      }\n\n      return previous || '';\n    });\n    return expression;\n  };\n\n  Module.makeContext = function makeContext(module, instance, parentInstance, node, factory, selector) {\n    instance.rxcompId = ++ID;\n    var context = {\n      module: module,\n      instance: instance,\n      parentInstance: parentInstance,\n      node: node,\n      factory: factory,\n      selector: selector\n    };\n    var rxcompNodeId = node.rxcompId = node.rxcompId || instance.rxcompId;\n    var nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);\n    nodeContexts.push(context);\n    CONTEXTS[instance.rxcompId] = context;\n    return context;\n  };\n\n  Module.deleteContext = function deleteContext(id, keepContext) {\n    var keepContexts = [];\n    var nodeContexts = NODES[id];\n\n    if (nodeContexts) {\n      nodeContexts.forEach(function (context) {\n        if (context === keepContext) {\n          keepContexts.push(keepContext);\n        } else {\n          var instance = context.instance;\n          instance.unsubscribe$.next();\n          instance.unsubscribe$.complete();\n          instance.onDestroy();\n          delete CONTEXTS[instance.rxcompId];\n        }\n      });\n\n      if (keepContexts.length) {\n        NODES[id] = keepContexts;\n      } else {\n        delete NODES[id];\n      }\n    }\n\n    return keepContexts;\n  };\n\n  Module.matchSelectors = function matchSelectors(node, selectors, results) {\n    for (var i = 0; i < selectors.length; i++) {\n      var selectorResult = selectors[i](node);\n\n      if (selectorResult) {\n        var factory = selectorResult.factory;\n\n        if (factory.prototype instanceof Component && factory.meta.template) {\n          node.innerHTML = factory.meta.template;\n        }\n\n        results.push(selectorResult);\n\n        if (factory.prototype instanceof Structure) {\n          break;\n        }\n      }\n    }\n\n    return results;\n  };\n\n  Module.querySelectorsAll = function querySelectorsAll(node, selectors, results) {\n    if (node.nodeType === 1) {\n      var selectorResults = this.matchSelectors(node, selectors, []);\n      results = results.concat(selectorResults);\n      var structure = selectorResults.find(function (x) {\n        return x.factory.prototype instanceof Structure;\n      });\n\n      if (structure) {\n        return results;\n      }\n\n      var childNodes = node.childNodes;\n\n      for (var i = 0; i < childNodes.length; i++) {\n        results = this.querySelectorsAll(childNodes[i], selectors, results);\n      }\n    }\n\n    return results;\n  };\n\n  Module.traverseUp = function traverseUp(node, callback, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    if (!node) {\n      return;\n    }\n\n    var result = callback(node, i);\n\n    if (result) {\n      return result;\n    }\n\n    return this.traverseUp(node.parentNode, callback, i + 1);\n  };\n\n  Module.traverseDown = function traverseDown(node, callback, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    if (!node) {\n      return;\n    }\n\n    var result = callback(node, i);\n\n    if (result) {\n      return result;\n    }\n\n    if (node.nodeType === 1) {\n      var j = 0,\n          t = node.childNodes.length;\n\n      while (j < t && !result) {\n        result = this.traverseDown(node.childNodes[j], callback, i + 1);\n        j++;\n      }\n    }\n\n    return result;\n  };\n\n  Module.traversePrevious = function traversePrevious(node, callback, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    if (!node) {\n      return;\n    }\n\n    var result = callback(node, i);\n\n    if (result) {\n      return result;\n    }\n\n    return this.traversePrevious(node.previousSibling, callback, i + 1);\n  };\n\n  Module.traverseNext = function traverseNext(node, callback, i) {\n    if (i === void 0) {\n      i = 0;\n    }\n\n    if (!node) {\n      return;\n    }\n\n    var result = callback(node, i);\n\n    if (result) {\n      return result;\n    }\n\n    return this.traverseNext(node.nextSibling, callback, i + 1);\n  };\n\n  return Module;\n}();\nfunction getParsableContextByNode(node) {\n  var context;\n  var rxcompId = node.rxcompId;\n\n  if (rxcompId) {\n    var nodeContexts = NODES[rxcompId];\n\n    if (nodeContexts) {\n      context = nodeContexts.reduce(function (previous, current) {\n        if (current.factory.prototype instanceof Component) {\n          return current;\n        } else if (current.factory.prototype instanceof Context) {\n          return previous ? previous : current;\n        } else {\n          return previous;\n        }\n      }, undefined);\n    }\n  }\n\n  return context;\n}\nfunction getContextByNode(node) {\n  var context = getParsableContextByNode(node);\n\n  if (context && context.factory.prototype instanceof Structure) {\n    context = undefined;\n  }\n\n  return context;\n}\nfunction getHost(instance, factory, node) {\n  if (!node) {\n    node = getContext(instance).node;\n  }\n\n  if (node.rxcompId) {\n    var nodeContexts = NODES[node.rxcompId];\n\n    if (nodeContexts) {\n      for (var i = 0; i < nodeContexts.length; i++) {\n        var context = nodeContexts[i];\n\n        if (context.instance !== instance) {\n          if (context.instance instanceof factory) {\n            return context.instance;\n          }\n        }\n      }\n    }\n  }\n\n  if (node.parentNode) {\n    return getHost(instance, factory, node.parentNode);\n  } else {\n    return undefined;\n  }\n}var SrcDirective = function (_Directive) {\n  _inheritsLoose(SrcDirective, _Directive);\n\n  function SrcDirective() {\n    return _Directive.apply(this, arguments) || this;\n  }\n\n  _createClass(SrcDirective, [{\n    key: \"src\",\n    set: function set(src) {\n      if (this.src_ !== src) {\n        this.src_ = src;\n\n        var _getContext = getContext(this),\n            node = _getContext.node;\n\n        src ? node.setAttribute('src', src) : node.removeAttribute('src');\n      }\n    },\n    get: function get() {\n      return this.src_;\n    }\n  }]);\n\n  return SrcDirective;\n}(Directive);\nSrcDirective.meta = {\n  selector: '[[src]]',\n  inputs: ['src']\n};var StyleDirective = function (_Directive) {\n  _inheritsLoose(StyleDirective, _Directive);\n\n  function StyleDirective() {\n    return _Directive.apply(this, arguments) || this;\n  }\n\n  var _proto = StyleDirective.prototype;\n\n  _proto.onChanges = function onChanges() {\n    var _getContext = getContext(this),\n        node = _getContext.node;\n\n    var style = this.style;\n    var previousStyle = this.previousStyle;\n\n    if (previousStyle) {\n      for (var key in previousStyle) {\n        if (!style || !style[key]) {\n          var splitted = key.split('.');\n          var propertyName = splitted.shift();\n          node.style.removeProperty(propertyName);\n        }\n      }\n    }\n\n    if (style) {\n      for (var _key in style) {\n        if (!previousStyle || previousStyle[_key] !== style[_key]) {\n          var _splitted = _key.split('.');\n\n          var _propertyName = _splitted.shift();\n\n          var value = style[_key] + (_splitted.length ? _splitted[0] : '');\n          node.style.setProperty(_propertyName, value);\n        }\n      }\n    }\n\n    this.previousStyle = style;\n  };\n\n  return StyleDirective;\n}(Directive);\nStyleDirective.meta = {\n  selector: \"[[style]]\",\n  inputs: ['style']\n};var factories = [ClassDirective, EventDirective, ForStructure, HrefDirective, IfStructure, InnerHtmlDirective, JsonComponent, SrcDirective, StyleDirective];\nvar pipes = [JsonPipe];\n\nvar CoreModule = function (_Module) {\n  _inheritsLoose(CoreModule, _Module);\n\n  function CoreModule() {\n    return _Module.apply(this, arguments) || this;\n  }\n\n  return CoreModule;\n}(Module);\nCoreModule.meta = {\n  declarations: [].concat(factories, pipes),\n  exports: [].concat(factories, pipes)\n};var Browser = function (_Platform) {\n  _inheritsLoose(Browser, _Platform);\n\n  function Browser() {\n    return _Platform.apply(this, arguments) || this;\n  }\n\n  Browser.bootstrap = function bootstrap(moduleFactory) {\n    if (!isPlatformBrowser) {\n      throw 'missing platform browser, window not found';\n    }\n\n    if (!moduleFactory) {\n      throw 'missing moduleFactory';\n    }\n\n    if (!moduleFactory.meta) {\n      throw 'missing moduleFactory meta';\n    }\n\n    if (!moduleFactory.meta.bootstrap) {\n      throw 'missing bootstrap';\n    }\n\n    if (!moduleFactory.meta.bootstrap.meta) {\n      throw 'missing bootstrap meta';\n    }\n\n    if (!moduleFactory.meta.bootstrap.meta.selector) {\n      throw 'missing bootstrap meta selector';\n    }\n\n    var meta = this.resolveMeta(moduleFactory);\n    var module = new moduleFactory();\n    module.meta = meta;\n\n    if (window.rxcomp_hydrate_) {\n      var _meta$node$parentNode;\n\n      var clonedNode = meta.node.cloneNode();\n      clonedNode.innerHTML = meta.nodeInnerHTML = window.rxcomp_hydrate_.innerHTML;\n      var instances = module.compile(clonedNode, window);\n      module.instances = instances;\n      var root = instances[0];\n      root.pushChanges();\n      (_meta$node$parentNode = meta.node.parentNode) == null ? void 0 : _meta$node$parentNode.replaceChild(clonedNode, meta.node);\n    } else {\n      var _instances = module.compile(meta.node, window);\n\n      module.instances = _instances;\n      var _root = _instances[0];\n\n      _root.pushChanges();\n    }\n\n    return module;\n  };\n\n  return Browser;\n}(Platform);exports.Browser=Browser;exports.ClassDirective=ClassDirective;exports.Component=Component;exports.Context=Context;exports.CoreModule=CoreModule;exports.Directive=Directive;exports.EventDirective=EventDirective;exports.Factory=Factory;exports.ForItem=ForItem;exports.ForStructure=ForStructure;exports.HrefDirective=HrefDirective;exports.IfStructure=IfStructure;exports.InnerHtmlDirective=InnerHtmlDirective;exports.JsonComponent=JsonComponent;exports.JsonPipe=JsonPipe;exports.Module=Module;exports.PLATFORM_BROWSER=PLATFORM_BROWSER;exports.PLATFORM_JS_DOM=PLATFORM_JS_DOM;exports.PLATFORM_NODE=PLATFORM_NODE;exports.PLATFORM_WEB_WORKER=PLATFORM_WEB_WORKER;exports.Pipe=Pipe;exports.Platform=Platform;exports.SrcDirective=SrcDirective;exports.Structure=Structure;exports.StyleDirective=StyleDirective;exports.getContext=getContext;exports.getContextByNode=getContextByNode;exports.getHost=getHost;exports.getParsableContextByNode=getParsableContextByNode;exports.isPlatformBrowser=isPlatformBrowser;exports.isPlatformServer=isPlatformServer;exports.isPlatformWorker=isPlatformWorker;return exports;}({},rxjs,rxjs.operators));"]}